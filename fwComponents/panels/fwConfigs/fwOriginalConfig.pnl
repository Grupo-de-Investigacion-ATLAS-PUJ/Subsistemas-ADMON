<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
   <prop name="en_US.iso88591">(NoName)</prop>
  </prop>
  <prop name="Size">641 391</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">10 10</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="StartZoomPoint">0 0</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;para.ctl&quot;

dyn_string DPE_LIST;
int DPE_TYPE;
bool DPES_OK;

// mode in which the panel is used
int panelMode;
const int OBJECT	= 1;
const int SINGLE_DPE		= 2;
const int MULTIPLE_DPES	= 3;

dyn_dyn_anytype dpeConfigObject;

_fwShowInfoBits(dyn_bool infoBits, dyn_string &amp;exceptionInfo)
{
        bool lastValArchiveActive;
  
	_fwSetStateButton(&quot;activeBit&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_ACTIVE], exceptionInfo);
	_fwSetStateButton(&quot;invalidBit&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_INVALID], exceptionInfo);
        
        //reverse logic - dpe stores last val archive disabled, whereas panel shows last val archive enabled
        lastValArchiveActive = !infoBits[fwOriginal_DPE_OBJECT_BIT_LASTVAL_ARCHIVE];
	_fwSetStateButton(&quot;lastValArchive&quot;, lastValArchiveActive, exceptionInfo);

	_fwSetStateButton(&quot;userBit1&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_1], exceptionInfo);
	_fwSetStateButton(&quot;userBit2&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_2], exceptionInfo);
	_fwSetStateButton(&quot;userBit3&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_3], exceptionInfo);
	_fwSetStateButton(&quot;userBit4&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_4], exceptionInfo);
	_fwSetStateButton(&quot;userBit5&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_5], exceptionInfo);
	_fwSetStateButton(&quot;userBit6&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_6], exceptionInfo);
	_fwSetStateButton(&quot;userBit7&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_7], exceptionInfo);
	_fwSetStateButton(&quot;userBit8&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_8], exceptionInfo);
}

_fwReadInfoBits(dyn_bool &amp;infoBits, dyn_string &amp;exceptionInfo)
{
        bool lastValArchiveInactive;

        _fwReadStateButton(&quot;activeBit&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_ACTIVE], exceptionInfo);
	_fwReadStateButton(&quot;invalidBit&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_INVALID], exceptionInfo);

        //reverse logic - dpe stores last val archive disabled, whereas panel shows last val archive enabled
	_fwReadStateButton(&quot;lastValArchive&quot;, lastValArchiveInactive, exceptionInfo);
        infoBits[fwOriginal_DPE_OBJECT_BIT_LASTVAL_ARCHIVE] = !lastValArchiveInactive;

	_fwReadStateButton(&quot;userBit1&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_1], exceptionInfo);
	_fwReadStateButton(&quot;userBit2&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_2], exceptionInfo);
	_fwReadStateButton(&quot;userBit3&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_3], exceptionInfo);
	_fwReadStateButton(&quot;userBit4&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_4], exceptionInfo);
	_fwReadStateButton(&quot;userBit5&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_5], exceptionInfo);
	_fwReadStateButton(&quot;userBit6&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_6], exceptionInfo);
	_fwReadStateButton(&quot;userBit7&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_7], exceptionInfo);
	_fwReadStateButton(&quot;userBit8&quot;, infoBits[fwOriginal_DPE_OBJECT_BIT_USER_8], exceptionInfo);
}

_fwReadStateButton(string shapeName, bool &amp;state, dyn_string &amp;exceptionInfo)
{
	shape button;
	
	button = getShape(shapeName);

        state = button.toggleState;
}

_fwSetStateButton(string shapeName, bool state, dyn_string &amp;exceptionInfo)
{
	shape button;
	
	button = getShape(shapeName);

        button.toggleState = state;
}

_fwLimitOptions(bool dpesOk, int configType, dyn_string &amp;exceptionInfo)
{
	bool state;
	
	state = (configType != fwConfigs_NOT_SUPPORTED);

	setOriginalValue.state(0) = dpesOk;
	setOriginalValue.enabled = dpesOk;
	setVariableBits.state(0) = FALSE;
	setVariableBits.enabled = state;
	setUserBits.state(0) = FALSE;
	setUserBits.enabled = state;
	
	invalidBit.enabled = state;
	activeBit.enabled = state;
	userBit1.enabled = state;
	userBit2.enabled = state;
	userBit3.enabled = state;
	userBit4.enabled = state;
	userBit5.enabled = state;
	userBit6.enabled = state;
	userBit7.enabled = state;
	userBit8.enabled = state;
}

_fwSetValueFieldFormat(dyn_string &amp;exceptionInfo)
{
	string formatString, elementType;

	if(panelMode != OBJECT)
	{
		_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_ORIGINAL, elementType, exceptionInfo);		
	}
//DebugN(DPES_OK, elementType);
	if(!DPES_OK)
	{
		dynValueField.visible = FALSE;
		valueField.visible = FALSE;
		
		dpeNoOriginal.visible = (elementType == fwConfigs_NOT_SUPPORTED);
		dpeMixedTypes.visible = (elementType != fwConfigs_NOT_SUPPORTED);
	}
	else
	{
		dpeNoOriginal.visible = FALSE;
		dpeMixedTypes.visible = FALSE;

		switch(elementType)
		{
			case fwConfigs_GENERAL_OPTIONS:
				fwConfigs_getBestFormatForDpeList(DPE_LIST, formatString, exceptionInfo);
				fwConfigs_setTextFieldsFormat(makeDynString(&quot;valueField&quot;), formatString,
												makeDynBool(FALSE), exceptionInfo);
				break;
		}

		dpeNoOriginal.visible = (elementType == fwConfigs_NOT_SUPPORTED);
		dynValueField.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynNewValueField.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynAddValueAfter.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynAddValueBefore.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynDeleteAll.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynDeleteValue.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynEditValue.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		dynModifyValue.visible = (elementType == fwConfigs_ANALOG_OPTIONS);
		valueField.visible = (elementType == fwConfigs_GENERAL_OPTIONS);
	}
}

saveSettings(dyn_string &amp;exceptionInfo)
{
	anytype originalValue;
	string mode, elementType;
	dyn_bool infoBits;
	bool setOriginal, setVariable, setUser;

 	if(DPE_TYPE == fwConfigs_NOT_SUPPORTED)
	{
		fwException_raise(exceptionInfo, &quot;ERROR&quot;, getCatStr(&quot;fwConfigs&quot;, &quot;PANEL_BADDPETYPES&quot;), &quot;&quot;);
		return;		
	}

	okButton.enabled = FALSE;
	applyButton.enabled = FALSE;
	closeButton.enabled = FALSE;
	if(panelMode == MULTIPLE_DPES)
		fwOpenProgressBar(&quot;Configuration panel&quot;, &quot;Saving configuration...&quot;, 1);

	_fwConfigs_getConfigOptionsForDpeType(DPE_TYPE, fwConfigs_PVSS_ORIGINAL, elementType, exceptionInfo);		
	if(elementType == fwConfigs_GENERAL_OPTIONS)
		originalValue = valueField.text;
	else
		originalValue = dynValueField.items;

	_fwReadInfoBits(infoBits, exceptionInfo);
	setOriginal = setOriginalValue.state(0);
	setVariable = setVariableBits.state(0);
	setUser = setUserBits.state(0);
			
	if(panelMode != OBJECT)
	{
		if(setOriginal &amp;&amp; setVariable &amp;&amp; setUser)
			mode = fwOriginal_SET_ALL;
		else if(setOriginal &amp;&amp; setVariable &amp;&amp; !setUser)
			mode = fwOriginal_SET_VALUE_AND_VARIABLE_BITS;
		else if(setOriginal &amp;&amp; !setVariable &amp;&amp; setUser)
			mode = fwOriginal_SET_VALUE_AND_USER_BITS;
		else if(setOriginal &amp;&amp; !setVariable &amp;&amp; !setUser)
			mode = fwOriginal_SET_VALUE;
		else if(!setOriginal &amp;&amp; setVariable &amp;&amp; setUser)
			mode = fwOriginal_SET_VARIABLE_AND_USER_BITS;
		else if(!setOriginal &amp;&amp; setVariable &amp;&amp; !setUser)
			mode = fwOriginal_SET_VARIABLE_BITS;
		else if(!setOriginal &amp;&amp; !setVariable &amp;&amp; setUser)
			mode = fwOriginal_SET_USER_BITS;
		else
			mode = fwOriginal_SET_NONE;
		
		fwOriginal_setMultiple(DPE_LIST, originalValue, infoBits, exceptionInfo, mode);
	}
	else
	{
		fwGeneral_setGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
//			DebugN(&quot;Modified &quot;, dpeConfigObject);
	}
	
	okButton.enabled = TRUE;
	applyButton.enabled = TRUE;
	closeButton.enabled = TRUE;
	if(panelMode == MULTIPLE_DPES)
		fwCloseProgressBar(&quot;Configuration complete&quot;);
}]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	dyn_bool infoBits;
	int i, elementType, configType;
	string dpe, dataType, formatString, errorString, format;
	dyn_string systems, exceptionInfo;
	anytype originalValue, processedValues;
	
	elementNameField.editable(FALSE);		
	
	if(isDollarDefined(&quot;$sDpe&quot;))
	{
		dpe = $sDpe;
		strreplace(dpe, &quot; &quot;, &quot;&quot;);
	    DPE_LIST = strsplit(dpe, &quot;|&quot;);
	}

	switch(dynlen(DPE_LIST))
	{
			case 0:
				if(isDollarDefined(&quot;$sDpeConfigObjectVarName&quot;))	// object passed to the panel
				{
					if(getGlobalType($sDpeConfigObjectVarName) != DYN_DYN_ANYTYPE_VAR)
					{
						elementNameField.text(&quot;Wrong config object name&quot;);
						applyButton.enabled = FALSE;
						okButton.enabled = FALSE;
						fwException_raise(exceptionInfo, 
															&quot;WARNING&quot;, &quot;The config object &quot; + $sDpeConfigObjectVarName + 
															&quot; doesn't exists or hasn't got the proper format.&quot;, 
															&quot;&quot;);
						fwExceptionHandling_display(exceptionInfo);					
						return;
					}					
					
					panelMode = OBJECT;					
					fwGeneral_getGlobalValue($sDpeConfigObjectVarName, dpeConfigObject, exceptionInfo);
					//DebugN(\&quot;fwAlertConfigPanel: \&quot;, dpeAlertConfigObject);
					
					// read from config object
					DPE_LIST[1] = dpeConfigObject[fwConfigs_DPE_OBJECT_DPE_NAME][1];						
					DPE_TYPE		= dpeConfigObject[fwConfigs_DPE_OBJECT_DPE_TYPE][1];
					
					elementNameField.text(DPE_LIST[1]);
					DPES_OK = TRUE;
				}
				else // neither dpes nor object passed, nothing to do in the panel
				{
					elementNameField.text(&quot;No Data Point Elements&quot;);
					applyButton.enabled = FALSE;
					okButton.enabled = FALSE;
					fwException_raise(exceptionInfo, &quot;WARNING&quot;, getCatStr(&quot;fwConfigs&quot;, &quot;PANEL_NODATAPOINTSTOCONFIG&quot;), &quot;&quot;);
					fwExceptionHandling_display(exceptionInfo);					
					return;
				}
				break;
			case 1:
				panelMode = SINGLE_DPE;
				dpe = DPE_LIST[1];
				elementNameField.text(dpe);
				DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_ORIGINAL, DPE_TYPE, exceptionInfo, errorString);
				_fwLimitOptions(DPES_OK, DPE_TYPE, exceptionInfo);
				if(!DPES_OK)
				{
					if(DPE_TYPE == fwConfigs_NOT_SUPPORTED)
						fwException_raise(exceptionInfo, &quot;ERROR&quot;, errorString, &quot;&quot;);
				}
				else
				{				
					fwOriginal_get(DPE_LIST[1], originalValue, infoBits, exceptionInfo);
					_fwShowInfoBits(infoBits, exceptionInfo);					
					valueField.text = originalValue;
					dynValueField.items = originalValue;
//DebugN(dynValueField.items, originalValue);
					if(dynlen(dynValueField.items) &gt; 0)
					{
						dynNewValueField.text = (dynValueField.items)[1];
					}
				}
				break;
			default:
				panelMode = MULTIPLE_DPES;
				dpe = DPE_LIST[1];

				_fwConfigs_getSystemsInDpeList(DPE_LIST, systems, exceptionInfo);
				
				if(dynlen(systems) == 1)
					elementNameField.text(&quot;Multiple Data Point Elements (from &quot; + systems[1] + &quot;)&quot;);
				else
					elementNameField.text(&quot;Multiple Data Point Elements (from multiple systems)&quot;);

				DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_ORIGINAL, DPE_TYPE, exceptionInfo, errorString);
				_fwLimitOptions(DPES_OK, DPE_TYPE, exceptionInfo);
				if(!DPES_OK)
				{
					if(DPE_TYPE == fwConfigs_NOT_SUPPORTED)
						fwException_raise(exceptionInfo, &quot;ERROR&quot;, errorString, &quot;&quot;);
				}

				dpeDetails.visible = TRUE;
				break;
	}

	_fwSetValueFieldFormat(exceptionInfo);

	okButton.enabled = (DPES_OK || (DPE_TYPE != fwConfigs_NOT_SUPPORTED));
	applyButton.enabled = (DPES_OK || (DPE_TYPE != fwConfigs_NOT_SUPPORTED));

	if(dynlen(exceptionInfo) &gt; 0)
		fwExceptionHandling_display(exceptionInfo);	
}]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="Text3" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 12</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-19-*-100-100-*-*-iso8859-1|-19,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Original Value Configuration</prop>
     <prop name="en_US.iso88591">Original Value Configuration</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="Text4" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">255 131</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 55</prop>
    <prop name="Size">117 23</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">DP Element:</prop>
     <prop name="en_US.iso88591">DP Element:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="Frame1" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">17</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">60 345</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">17</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">60 290</prop>
    <prop name="Size">440 55</prop>
   </properties>
  </shape>
  <shape Name="Frame2" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">18</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">60 285</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">18</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.46822742474916 0 0 1 -28.0936454849498 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">60 230</prop>
    <prop name="Size">300 55</prop>
   </properties>
  </shape>
  <shape Name="Frame3" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">38</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">60 225</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">38</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">60 90</prop>
    <prop name="Size">440 135</prop>
   </properties>
  </shape>
  <shape Name="dpeNoOriginal" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">41</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 105</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{255,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">39</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">185 110</prop>
    <prop name="Size">161 71</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">The data point element(s)
does not have an
original value.</prop>
     <prop name="en_US.iso88591">The data point element(s)
does not have an
original value.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">5</prop>
    <prop name="Bordered">True</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="dpeMixedTypes" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">42</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 105</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{255,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">40</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">185 110</prop>
    <prop name="Size">161 71</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">There is an unsupported
mixture of original
value types.  You may
not set an original value.</prop>
     <prop name="en_US.iso88591">There is an unsupported
mixture of original
value types.  You may
not set an original value.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">5</prop>
    <prop name="Bordered">True</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="dynValueField" shapeType="SELECTION_LIST" layerId="0">
   <properties>
    <prop name="serialId">39</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">39</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">180 103</prop>
    <prop name="Size">171 88</prop>
    <prop name="Listitems"/>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
  </shape>
  <shape Name="setUserBits" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">36</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">70 310</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">36</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">70 310</prop>
    <prop name="Size">91 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">User Bits:</prop>
       <prop name="en_US.iso88591">User Bits:</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="setOriginalValue" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">34</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">68 105</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">34</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">68 105</prop>
    <prop name="Size">111 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Original Value:</prop>
       <prop name="en_US.iso88591">Original Value:</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="elementNameField" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">347 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">6</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">90 50</prop>
    <prop name="Size">541 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="dpeDetails" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">5</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">460 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">460 10</prop>
    <prop name="Size">121 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Select Elements</prop>
     <prop name="en_US.iso88591">Select Elements</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	string errorString;
	dyn_string returnedDpeList, systems, exceptionInfo;
	dyn_float cancelOrOk;

	ChildPanelOnCentralModalReturn(&quot;fwConfigs/fwDpeSelector.pnl&quot;, &quot;Choose Data Point Elements&quot;,
									makeDynString(&quot;$dsAllDpes:&quot;+$sDpe, &quot;$dsIncludedDpes:&quot;+DPE_LIST, &quot;$sConfigType:&quot;+fwConfigs_PVSS_ORIGINAL),
									cancelOrOk, returnedDpeList);
	if(cancelOrOk[1] &gt; 0.5)
	{
		if(DPE_LIST != returnedDpeList)
		{
			DPE_LIST = returnedDpeList;
			DPES_OK = _fwConfigs_checkDpeList(DPE_LIST, fwConfigs_PVSS_ORIGINAL, DPE_TYPE, exceptionInfo, errorString);

			_fwLimitOptions(DPES_OK, DPE_TYPE, exceptionInfo);
			if(!DPES_OK)
			{
				if(DPE_TYPE == fwConfigs_NOT_SUPPORTED)
					fwException_raise(exceptionInfo, &quot;ERROR&quot;, errorString, &quot;&quot;);
			}

			_fwConfigs_getSystemsInDpeList(DPE_LIST, systems, exceptionInfo);

			if(dynlen(DPE_LIST)== 1)
				elementNameField.text(DPE_LIST[1]);
			else
			{
				if(dynlen(systems) == 1)
					elementNameField.text(&quot;Multiple Data Point Elements (from &quot; + systems[1] + &quot;)&quot;);
				else
					elementNameField.text(&quot;Multiple Data Point Elements (from multiple systems)&quot;);
			}

			_fwSetValueFieldFormat(exceptionInfo);

			okButton.enabled = (DPES_OK || (DPE_TYPE != fwConfigs_NOT_SUPPORTED));
			applyButton.enabled = (DPES_OK || (DPE_TYPE != fwConfigs_NOT_SUPPORTED));
		}
	}	
}]]></script>
   </events>
  </shape>
  <shape Name="applyButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">0 0</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">460 350</prop>
    <prop name="Size">81 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Apply</prop>
     <prop name="en_US.iso88591">Apply</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	saveSettings(exceptionInfo);
	if(dynlen(exceptionInfo) &gt; 0)
		fwExceptionHandling_display(exceptionInfo);
}]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	int x, y;

	if(isDollarDefined(&quot;$bHierarchyBrowser&quot;))
	{
		if(!$bHierarchyBrowser)
			closeButton.visible = TRUE;
		else
		{
			getValue(&quot;&quot;, &quot;position&quot;, x, y);
			this.position(x + 90,y);	
		}
	}
	else
		closeButton.visible = TRUE;
		
	this.visible = TRUE;	
}]]></script>
   </events>
  </shape>
  <shape Name="closeButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">11</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1492 929</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">13</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">550 350</prop>
    <prop name="Size">81 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Close</prop>
     <prop name="en_US.iso88591">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="okButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">0 0</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">14</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">370 350</prop>
    <prop name="Size">81 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">OK</prop>
     <prop name="en_US.iso88591">OK</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	saveSettings(exceptionInfo);
	if(dynlen(exceptionInfo) &gt; 0)
		fwExceptionHandling_display(exceptionInfo);
	else
		PanelOff();
}]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	if(isDollarDefined(&quot;$bHierarchyBrowser&quot;))
	{
		if(!$bHierarchyBrowser)
			this.visible = TRUE;
	}
	else
		this.visible = TRUE;	
}
]]></script>
   </events>
  </shape>
  <reference parentSerial="-1" Name="Group2" referenceId="0">
   <properties>
    <prop name="FileName">objects/fwGeneral/fwHelpButton.pnl</prop>
    <prop name="Location">604 10</prop>
    <prop name="TabOrder">1</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sPanelRelativePath</prop>
      <prop name="Value">fwConfigs/fwOriginalConfig</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
  <shape Name="valueField" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">14</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">15</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">180 103</prop>
    <prop name="Size">171 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="activeBit" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">19</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 245</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">19</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">180 245</prop>
    <prop name="Size">81 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Active</prop>
     <prop name="en_US.iso88591">Active</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  this.toggleState = TRUE;
}]]></script>
   </events>
  </shape>
  <shape Name="invalidBit" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">20</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">270 245</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">20</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">270 245</prop>
    <prop name="Size">81 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Invalid</prop>
     <prop name="en_US.iso88591">Invalid</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">21</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">21</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">180 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">1</prop>
     <prop name="en_US.iso88591">1</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit2" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">220 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">22</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">220 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">2</prop>
     <prop name="en_US.iso88591">2</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">23</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">260 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">23</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">260 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">3</prop>
     <prop name="en_US.iso88591">3</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit4" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">24</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">300 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">24</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">300 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">4</prop>
     <prop name="en_US.iso88591">4</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit5" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">25</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">340 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">25</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">340 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">5</prop>
     <prop name="en_US.iso88591">5</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit6" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">26</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">380 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">26</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">380 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">6</prop>
     <prop name="en_US.iso88591">6</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit7" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">27</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">420 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">27</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">420 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">7</prop>
     <prop name="en_US.iso88591">7</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="userBit8" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">28</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">460 305</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">28</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">460 305</prop>
    <prop name="Size">31 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">8</prop>
     <prop name="en_US.iso88591">8</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
  <shape Name="setVariableBits" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">37</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">70 250</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">37</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">70 250</prop>
    <prop name="Size">101 26</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Variable Bits:</prop>
       <prop name="en_US.iso88591">Variable Bits:</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="dynAddValueBefore" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">44</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">398 131</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">41</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
     <prop name="de_AT.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,arial</prop>
     <prop name="de_AT.iso88591">-microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial</prop>
    </prop>
    <prop name="Location">400 133</prop>
    <prop name="Size">37 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">insertB_en.gif</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	int pos;
	dyn_string items;

	items = dynValueField.items;
	pos = dynValueField.selectedPos;
	
	if(pos &lt;= 0)
		pos =1;

	dynInsertAt(items, dynNewValueField.text, pos);

	dynValueField.items = items;
}]]></script>
   </events>
  </shape>
  <shape Name="dynDeleteValue" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">45</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">398 161</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">42</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
     <prop name="de_AT.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,arial</prop>
     <prop name="de_AT.iso88591">-microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial</prop>
    </prop>
    <prop name="Location">400 163</prop>
    <prop name="Size">37 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">del_en.gif</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	int pos;
	dyn_string items;

	items = dynValueField.items;
	pos = dynValueField.selectedPos;
	
	if(pos &gt; 0)
		dynRemove(items, pos);

	dynValueField.items = items;
}
]]></script>
   </events>
  </shape>
  <shape Name="dynAddValueAfter" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">46</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">358 131</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">43</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
     <prop name="de_AT.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,arial</prop>
     <prop name="de_AT.iso88591">-microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial</prop>
    </prop>
    <prop name="Location">360 133</prop>
    <prop name="Size">37 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">insertA_en.gif</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	int pos;
	dyn_string items;

	items = dynValueField.items;
	pos = dynValueField.selectedPos;
	
	if(pos &lt;= 0)
		pos =1;
		
	dynInsertAt(items, dynNewValueField.text, pos+1);

	dynValueField.items = items;
}]]></script>
   </events>
  </shape>
  <shape Name="dynModifyValue" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">47</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">358 161</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">44</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
     <prop name="de_AT.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,arial</prop>
     <prop name="de_AT.iso88591">-microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial</prop>
    </prop>
    <prop name="Location">360 163</prop>
    <prop name="Size">37 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">apply_en.gif</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	int pos;
	dyn_string items;

	items = dynValueField.items;
	pos = dynValueField.selectedPos;
	
	if(pos &gt; 0)
		items[pos] = dynNewValueField.text;

	dynValueField.items = items;
}]]></script>
   </events>
  </shape>
  <shape Name="dynDeleteAll" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">48</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">398 191</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">45</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
     <prop name="de_AT.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,arial</prop>
     <prop name="de_AT.iso88591">-microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial</prop>
    </prop>
    <prop name="Location">400 193</prop>
    <prop name="Size">37 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">deleteall.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dynValueField.items = makeDynString();
}
]]></script>
   </events>
  </shape>
  <shape Name="dynEditValue" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">49</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">358 101</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">46</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
     <prop name="de_AT.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,arial</prop>
     <prop name="de_AT.iso88591">-microsoft windows-arial-medium-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,500,0,0,0,0,0,0,0,16,arial</prop>
    </prop>
    <prop name="Location">360 103</prop>
    <prop name="Size">37 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">editor.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  int        i, pos;
  dyn_float  df;
  dyn_string list,sPara,ds;

	list = dynValueField.items;
  sPara[1]=paJoinString(list,&quot;\n&quot;); 
  ChildPanelOnCentralReturn(&quot;para/nvTextEditor.pnl&quot;,
							                 &quot;DP Function Parameters&quot;,
							                 sPara, df, ds);
  if (df[1] &gt;= 1)
  {
		dynValueField.items = ds;
  }
}
]]></script>
   </events>
  </shape>
  <shape Name="dynNewValueField" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">50</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 194</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">47</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">180 194</prop>
    <prop name="Size">171 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="lastValArchive" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">52</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">360 245</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">49</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">-*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial</prop>
    </prop>
    <prop name="Location">360 245</prop>
    <prop name="Size">131 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Last Value Archive</prop>
     <prop name="en_US.iso88591">Last Value Archive</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
  </shape>
 </shapes>
</panel>
