<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">fwPeriphAddressMQTT</prop>
  </prop>
  <prop name="Size">509 317</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwConfigs/fwPeriphAddressMQTT.ctl&quot;

// This is the reference panel initialized by the fwPeriphAddress.pnl
// which will dynamically call our initPanel() method.
// Therefore we should not have a initialize script ourselves.

bool multiDpeMode=false;
int panelMode=0;
string dpe=&quot;&quot;;

public void initPanel(string sDpe, dyn_string &amp;exceptionInfo, bool bInMultiDpes = FALSE, int iInPanelMode = -1)
{
	multiDpeMode=bInMultiDpes;
	panelMode=iInPanelMode;
	dpe=sDpe;
	if (bInMultiDpes) {
		DebugTN(&quot;MQTT address configuration for multiple DPEs not supported&quot;);
		return;
	}
	populatePanel();
}


void populatePanel()
{
	bool cfgExists, active;
	dyn_anytype addressConfig;
	dyn_string exceptionInfo;
	applyButton.enabled=false;

	fwPeriphAddress_get(dpe, cfgExists, addressConfig, active, exceptionInfo);
	if (dynlen(exceptionInfo)) {fwExceptionHandling_display(exceptionInfo);return;}

	if (cfgExists  &amp;&amp; addressConfig[fwPeriphAddress_TYPE] == fwPeriphAddress_TYPE_MQTT) {
		dyn_string allConn=fwPeriphAddressMQTT_getAllConnections();
		if (!allConn.contains(addressConfig[fwPeriphAddress_MQTT_CONNECTION])) {
			fwException_raise(exceptionInfo,&quot;Warning&quot;,&quot;Invalid (non-declared) MQTT Connection configured:&quot;+addressConfig[fwPeriphAddress_MQTT_CONNECTION],&quot;&quot;);
			fwExceptionHandling_display(exceptionInfo);
			dynAppend(allConn, addressConfig[fwPeriphAddress_MQTT_CONNECTION]);
		}
		connectionMQTT.items=allConn;
		driverNumberSelectorMQTT.value = addressConfig[fwPeriphAddress_DRIVER_NUMBER];
		topicMQTT.text                 = addressConfig[fwPeriphAddress_REFERENCE];
		connectionMQTT.text            = addressConfig[fwPeriphAddress_MQTT_CONNECTION];
		transformMQTT.selectedPos      = addressConfig[fwPeriphAddress_DATATYPE]-1000;
		qosMQTT.selectedPos            = addressConfig[fwPeriphAddress_MQTT_QOS]+1;
		modeMQTT.number                = addressConfig[fwPeriphAddress_DIRECTION];
		addressActiveMQTT.state(0)     = addressConfig[fwPeriphAddress_ACTIVE];
		lowlevel_MQTT.state(0)         = addressConfig[fwPeriphAddress_MQTT_LOWLEVEL];
		onUseMQTT.state(0)             = addressConfig[fwPeriphAddress_MQTT_ONUSE];
		retainMQTT.state(0)            = addressConfig[fwPeriphAddress_MQTT_RETAIN];
	}
	applyButton.enabled=true;
}

void apply()
{
	string dpe=$sDpe;
	dyn_string exceptionInfo;
	applyButton.enabled=false;

	dyn_string allConn=fwPeriphAddressMQTT_getAllConnections();
	if (!allConn.contains(connectionMQTT.text)) {
		fwException_raise(exceptionInfo,&quot;Warning&quot;,&quot;Invalid (non-declared) MQTT Connection configured:&quot;+connectionMQTT.text,&quot;&quot;);
		fwExceptionHandling_display(exceptionInfo);
		return;
	}

	dyn_mixed addressConfig;
	addressConfig[fwPeriphAddress_TYPE]				= fwPeriphAddress_TYPE_MQTT;
	addressConfig[fwPeriphAddress_DRIVER_NUMBER]		= driverNumberSelectorMQTT.value;
	addressConfig[fwPeriphAddress_REFERENCE]			= topicMQTT.text;
	addressConfig[fwPeriphAddress_MQTT_CONNECTION]		= connectionMQTT.text;
	addressConfig[fwPeriphAddress_DATATYPE] 			= transformMQTT.selectedPos+1000;
	addressConfig[fwPeriphAddress_MQTT_QOS]			= qosMQTT.selectedPos-1;
	addressConfig[fwPeriphAddress_DIRECTION]			= modeMQTT.number;
	addressConfig[fwPeriphAddress_ACTIVE]				= addressActiveMQTT.state(0);
	addressConfig[fwPeriphAddress_MQTT_LOWLEVEL]		= lowlevel_MQTT.state(0);
	addressConfig[fwPeriphAddress_MQTT_ONUSE]			= onUseMQTT.state(0);
	addressConfig[fwPeriphAddress_MQTT_RETAIN]			= retainMQTT.state(0);

	fwPeriphAddress_set(dpe, addressConfig, exceptionInfo, true);
	applyButton.enabled=true;

	if (dynlen(exceptionInfo)) {fwExceptionHandling_display(exceptionInfo);return;}


}

]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="Transfo_Label" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">15</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 98</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">14</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">10 98</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Transformation: </prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">0</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="TopicLabel" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">72</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 41</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">71</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">10 41</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Topic: </prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">0</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="Text_Driver" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">73</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 15</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">72</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">10 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Driver Number</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">0</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="applyButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">-200 -80</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">260 270</prop>
    <prop name="Size">81 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Apply</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	apply();
}
]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	int x, y;

	if(isDollarDefined(&quot;$bHierarchyBrowser&quot;))
	{
		if($bHierarchyBrowser || ($bHierarchyBrowser == &quot;&quot;))
		{
			getValue(&quot;&quot;, &quot;position&quot;, x, y);
			this.position(x + 90,y);	
		}
	}

	// this.visible = TRUE;	
}
]]></script>
   </events>
  </shape>
  <shape Name="transformMQTT" shapeType="COMBO_BOX" layerId="0">
   <properties>
    <prop name="serialId">17</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">151.8125 115</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">16</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">110 92</prop>
    <prop name="Size">270 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">plain string</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">JSON Profile Value</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">JSON Profile Value/Timestamp</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">JSON Profile Value/Timestamp/Status</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
  </shape>
  <shape Name="modeMQTT" shapeType="RADIO_BOX" layerId="0">
   <properties>
    <prop name="serialId">23</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">29.33333333333333 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">22</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">32 181</prop>
    <prop name="Size">89 71</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Publish</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Subscribe</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Both</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="topicMQTT" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">74</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">108.9870533734743 35.5</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">73</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">110 37</prop>
    <prop name="Size">390 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[120s,,,AlignLeft]</prop>
    <prop name="ulcClientSideWidget">False</prop>
   </properties>
  </shape>
  <shape Name="driverNumberSelectorMQTT" shapeType="SPIN_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">75</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">108.9938958902192 9.5</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">74</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">MQTT driver number</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">110.0136234217835 10.5</prop>
    <prop name="Size">52 24</prop>
    <prop name="MinimumID">1</prop>
    <prop name="MaximumID">256</prop>
    <prop name="IncrAccelerator">1</prop>
    <prop name="Position">1</prop>
   </properties>
  </shape>
  <shape Name="addressActiveMQTT" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">87</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 230</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">86</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">180 230</prop>
    <prop name="Size">127 31</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">address active</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="FRAME1" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">88</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 164</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">{0,0,0}</prop>
    <prop name="TabOrder">87</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,0]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.39240506329114 0 0 1.164705882352941 -7.848101265822788 -31.01176470588234</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Mode</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">20 164</prop>
    <prop name="Size">80 86</prop>
   </properties>
  </shape>
  <shape Name="configMQTT" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">96</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">410 90</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">95</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">410 90</prop>
    <prop name="Size">91 55</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">MQTT
configuration...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	ChildPanelOnCentralModal(&quot;para/mqtt.pnl&quot;,&quot;MQTT driver configuration&quot;,makeDynString());
}
]]></script>
   </events>
  </shape>
  <shape Name="lowlevel_MQTT" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">100</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 170</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">98</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">180 171</prop>
    <prop name="Size">161 31</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">low level old/new comp</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="qosMQTT" shapeType="COMBO_BOX" layerId="0">
   <properties>
    <prop name="serialId">104</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">109 62.625</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">101</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">110.242578125 63.625</prop>
    <prop name="Size">200 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">at most once</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">at least once</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">exactly once</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
  </shape>
  <shape Name="PRIMITIVE_TEXT1" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">105</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 70</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">102</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">10 70</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">QoS:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">0</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="retainMQTT" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">106</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">315 64.45833333333333</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">103</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">315 65.125</prop>
    <prop name="Size">66 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Retain</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="connectionMQTT" shapeType="COMBO_BOX" layerId="0">
   <properties>
    <prop name="serialId">107</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">108.375 117.75</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">104</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">110 119</prop>
    <prop name="Size">270 24</prop>
    <prop name="Listitems"/>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	dyn_string allConn=fwPeriphAddressMQTT_getAllConnections();
	connectionMQTT.items=allConn;
}]]></script>
   </events>
  </shape>
  <shape Name="PRIMITIVE_TEXT2" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">108</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 123</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">105</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">10 123</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Connection:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">0</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="onUseMQTT" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">109</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 200</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">106</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">180 201</prop>
    <prop name="Size">161 31</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">on use</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
 </shapes>
</panel>
