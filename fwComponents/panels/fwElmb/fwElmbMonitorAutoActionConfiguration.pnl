<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
	<prop name="en_US.utf8">fwElmbNodeMonitorConfiguration</prop>
  </prop>
  <prop name="Size">440 315</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">10 10</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">98.05147058823529</prop>
  <prop name="layoutType">None</prop>
 </properties>
<events>
	<script name="ScopeLib" isEscaped="1"><![CDATA[

#uses &quot;panel.ctl&quot;
#uses &quot;fwElmb/fwElmbMonitorConstants.ctl&quot;
#uses &quot;fwElmb/fwElmbMonitorLib.ctl&quot;
		#uses &quot;fwElmb/fwElmbMonitorLib.ctl&quot;
		#uses &quot;fwElmb/fwElmbMonitorConstants.ctl&quot;
	]]></script>
</events>

 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="lblTitle" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">5</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 12</prop>
    <prop name="Size">267 27</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">Automatic Action Configuration</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="tabMonitorConfiguration" shapeType="TABLE" layerId="0">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 70</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 70</prop>
    <prop name="Size">421 201</prop>
    <prop name="ShowColumnHeader">True</prop>
    <prop name="ShowRowHeader">False</prop>
    <prop name="SortOnClick">True</prop>
    <prop name="RowHeight">26</prop>
    <prop name="RowHeaderWidth">30</prop>
    <prop name="GridType">Cross</prop>
    <prop name="VScrollBarMode">Auto</prop>
    <prop name="HScrollBarMode">Auto</prop>
    <prop name="Column">
     <prop name="Name">parameter</prop>
     <prop name="Width">250</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Parameter</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">parameterID</prop>
     <prop name="Width">100</prop>
     <prop name="Visible">False</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">parameterID</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">actionID</prop>
     <prop name="Width">100</prop>
     <prop name="Visible">False</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">actionID</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">autoAction</prop>
     <prop name="Width">150</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Automatic Action</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Row">
     <prop name="Name"></prop>
     <prop name="Label">
	<prop name="en_US.utf8">#1</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	int i;
	
	string sParameter;
	string sAction;
	
	dyn_int diParameters;
	dyn_int diActions;

// Executable Code
// ---------------
	// Get any actions set already
	dpGet($sDpName + &quot;.monitoring.autoActions.parameters&quot;, diParameters,
				$sDpName + &quot;.monitoring.autoActions.actions&quot;, diActions);
				
	// Enter the data into the table
	for (i = 1; i &lt;= dynlen(diParameters); i++) {
		sParameter = fwElmbMonitorLib_getParameterText(diParameters[i]);
		if (dynlen(diActions) &lt; i) {
			sAction = fwElmbMonitorLib_getActionText(ELMB_MONITOR_ACTION_NONE);
			this.appendLine(&quot;parameter&quot;, sParameter, &quot;parameterID&quot;, diParameters[i], &quot;actionID&quot;, ELMB_MONITOR_ACTION_NONE, &quot;autoAction&quot;, sAction);
		} else {
			sAction = fwElmbMonitorLib_getActionText(diActions[i]);
			this.appendLine(&quot;parameter&quot;, sParameter, &quot;parameterID&quot;, diParameters[i], &quot;actionID&quot;, diActions[i], &quot;autoAction&quot;, sAction);
		}
	}
	
	// Return to calling routine
	return;
}]]></script>
    <script name="RightMousePressed" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	bool bBus = false;
	
	int i;
	int iRow;
	int iColumn;
	int iReturn;
	
	string sName = this.name;
	string sColumnName;
	string sParameter;
	string sAction;
	string sDpt;
	
	dyn_int diActions;
	
	dyn_string dsMenu;

// Executable Code
// ---------------
	// Get the column name that has been clicked
	getValue(sName, &quot;currentColumn&quot;, sColumnName);
	
	// Check if this column should have a menu
	if (sColumnName == &quot;autoAction&quot;) {
	
		// Get the row, then the parameter that is to be set
		getValue(sName, &quot;currentCell&quot;, iRow, iColumn);
		getValue(sName, &quot;cellValueRC&quot;, iRow, &quot;parameter&quot;, sParameter);
		
		if (strlen(sParameter) &gt; 0) {
			// Get DPT of dollar parameter
			sDpt = dpTypeName($sDpName);
			if (sDpt == ELMB_CAN_BUS_TYPE_NAME)
				bBus = true;
			
			// Set the text for the possible actions
			diActions = fwElmbMonitorAutomaticActions(bBus);
		
			// Setup the menu
			for (i = 1; i &lt;= dynlen(diActions); i++) {
				sAction = fwElmbMonitorLib_getActionText(diActions[i]);
				dynAppend(dsMenu, &quot;PUSH_BUTTON, &quot; + sAction + &quot;, &quot; + diActions[i] + &quot;, 1&quot;);
			}

			// Display the popup menu
			if (popupMenu(dsMenu, iReturn) == 0) {
				setValue(sName, &quot;cellValueRC&quot;, iRow, sColumnName, fwElmbMonitorLib_getActionText(iReturn));
				setValue(sName, &quot;cellValueRC&quot;, iRow, &quot;actionID&quot;, iReturn);
			}
		}
	}

	// Return to calling routine
	return;
}]]></script>
   </events>
  </shape>
  <shape Name="cmdOK" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">230 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">230 280</prop>
    <prop name="Size">61 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">OK</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	bool bActive;
	
	int i;
	int iRowCount;
	
	dyn_int diParameters;
	dyn_int diActions;
	
	dyn_anytype daLine;

// Executable Code
// ---------------
	// Get the number of rows in the table
	iRowCount = tabMonitorConfiguration.lineCount;
	
	// Get all data from the table
	for (i = 0; i &lt; iRowCount; i++) {
		// Get the current line
		daLine = tabMonitorConfiguration.getLineN(i);
		dynAppend(diParameters, daLine[2]);
		dynAppend(diActions, daLine[3]);
	}
	
	// Get whether the monitoring should be active
	bActive = chkAutoActionsActive.state(0);
	
	// Set the information into the datapoint
	dpSetWait($sDpName + &quot;.monitoring.autoActions.active&quot;, bActive,
						$sDpName + &quot;.monitoring.autoActions.parameters&quot;, diParameters,
						$sDpName + &quot;.monitoring.autoActions.actions&quot;, diActions);
				
	// Close the panel
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="cmdApply" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">300 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">300 280</prop>
    <prop name="Size">61 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Apply</prop>
    </prop>
   </properties>
  </shape>
  <shape Name="cmdCancel" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">3</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">370 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">4</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">370 280</prop>
    <prop name="Size">61 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Cancel</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="chkAutoActionsActive" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">5</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 40</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">6</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 40</prop>
    <prop name="Size">181 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
	<prop name="en_US.utf8">Automatic actions active</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	bool bActive;

// Executable Code
// ---------------
	// Get whether the automatic actions are currently active
	dpGet($sDpName + &quot;.monitoring.autoActions.active&quot;, bActive);
	
	// Set the checkbox to show this
	this.state(0) = bActive;

	// Return to calling routine
	return;
}]]></script>
   </events>
  </shape>
 </shapes>
</panel>
