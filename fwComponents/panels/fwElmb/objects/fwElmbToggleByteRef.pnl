<?xml version='1.0' encoding='UTF-8'?>
<panel version="14">
 <properties>
  <prop name="Name">
	<prop name="en_US.utf8"/>
  </prop>
  <prop name="Size">273 78</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">10 10</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"/>
  <prop name="DPI">98.05147058823529</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[// Panel Usage
// ===========
// This reference panel does not use a connection to a datapoint. Instead, the setting and getting
// of values is via setting values into or reading from certain objects in the panel.
//
// To set an actual value to the object, enter the value into the 'txtInputValue' field
// e.g.
//  setValue(&quot;&lt;PanelRefName&gt;.txtInputValue&quot;, &quot;text&quot;, uValue);
//
// To set the control as invalid, enter the value \&quot;Invalid\&quot; into the 'txtInputValue' field
// e.g.
//  setValue(&quot;&lt;PanelRefName&gt;.txtInputValue&quot;, &quot;text&quot;, &quot;Invalid&quot;);
//
// To get the current value of the object, 'request' an update by first entering an empty
// string into the 'txtInputValue' field
// e.g.
//  setValue(&quot;&lt;PanelRefName&gt;.txtInputValue&quot;, &quot;text&quot;, &quot;&quot;);
//
// The actual value may then be obtain by reading the 'txtOutputValue' field and checking
// for validity. If valid, then the string value obtained my then be entered into the
// desired variable type
// e.g.
//  getValue(&quot;&lt;PanelRefName&gt;.txtOutputValue&quot;, &quot;text&quot;, sValue);
//  if (sValue != &quot;Invalid&quot;) {
//    uValue = sValue;

void setState(string sObject, bool bValue)
{
  setValue(sObject, &quot;enabled&quot;, true);
  setValue(sObject, &quot;toggleState&quot;, bValue);
  if (bValue)
    setValue(sObject, &quot;text&quot;, &quot;1&quot;);
  else
    setValue(sObject, &quot;text&quot;, &quot;0&quot;);
  setOutputValue();
}

void setInvalid(string sObject)
{
  setValue(sObject, &quot;enabled&quot;, false);
  setValue(sObject, &quot;toggleState&quot;, false);
  setValue(sObject, &quot;text&quot;, &quot;X&quot;);
}

void setAllInvalid()
{
  int i;
  for (i = 0; i &lt; 8; i++)
    setInvalid(&quot;tglBit&quot; + i);
}

void setOutputValue()
{
  bool bValue;
  bool bValid = true;
  int i;
  int iOutputValue = 0;
  for (i = 0; (i &lt; 8) &amp;&amp; bValid; i++) {
    getValue(&quot;tglBit&quot; + i, &quot;enabled&quot;, bValid);
    if (bValid) {
      getValue(&quot;tglBit&quot; + i, &quot;toggleState&quot;, bValue);
      iOutputValue += bValue ? (1 &lt;&lt; i) : 0;
    }
  }
  if (bValid)
    txtOutputValue.text = iOutputValue;
  else
    txtOutputValue.text = &quot;Invalid&quot;;
}
]]></script>
 </events>
 <shapes>
  <shape Name="txtInputValue" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">9</prop>
    <prop name="Type"/>
    <prop name="RefPoint">32 1.99999999999999</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">32 1.999999999999993</prop>
    <prop name="Size">41 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="TextChanged" isEscaped="1"><![CDATA[main(string sValue)
{
  if (strlen(sValue) == 0) {
    // Setting an empty string into the field is used to ensure the output field is updated
    setOutputValue();
  } else if (sValue == &quot;Invalid&quot;) {
    // The 'Invalid' code word is used to indicate all bits are invalid
    setAllInvalid();
  } else if (sValue != &quot;dummy&quot;) {
    bool bValue;
    int i;
    int iInputValue;
    iInputValue = sValue;
    for (i = 0; i &lt; 8; i++) {
      bValue = ((1 &lt;&lt; i) &amp; iInputValue) &gt; 0 ? true : false;
      setState(&quot;tglBit&quot; + i, bValue);
    }
  }
  
  // Enter 'dummy' text to ensure that any update is forced. This is because a user could change values, which do not
  // change the 'txtInputValue' field. Therefore, setting the same value again would not cause this event to be called.
  // This also allows for the value to be read repeatedly.
  this.text = &quot;dummy&quot;;
}]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  this.text = &quot;Invalid&quot;;
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit7" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"/>
    <prop name="RefPoint">2 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">2 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit6" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">11</prop>
    <prop name="Type"/>
    <prop name="RefPoint">22 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">13</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">22 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit5" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"/>
    <prop name="RefPoint">42 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">15</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">42 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit4" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"/>
    <prop name="RefPoint">62 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">17</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">62 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">14</prop>
    <prop name="Type"/>
    <prop name="RefPoint">82 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">19</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">82 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit2" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">15</prop>
    <prop name="Type"/>
    <prop name="RefPoint">102 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">21</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">102 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">16</prop>
    <prop name="Type"/>
    <prop name="RefPoint">122 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">23</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">122 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="tglBit0" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">17</prop>
    <prop name="Type"/>
    <prop name="RefPoint">142 20</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">25</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">142 20</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">X</prop>
    </prop>
    <prop name="IsToggle">True</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  setState(this.name, this.toggleState());
}]]></script>
   </events>
  </shape>
  <shape Name="txt7" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"/>
    <prop name="RefPoint">2 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">32</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">10 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">7</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt6" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">23</prop>
    <prop name="Type"/>
    <prop name="RefPoint">22 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">34</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">30 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">6</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt5" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">24</prop>
    <prop name="Type"/>
    <prop name="RefPoint">42 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">36</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">50 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">5</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt4" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">25</prop>
    <prop name="Type"/>
    <prop name="RefPoint">62 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">38</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">70 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">4</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt3" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">26</prop>
    <prop name="Type"/>
    <prop name="RefPoint">82 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">40</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">90 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">3</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt2" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">27</prop>
    <prop name="Type"/>
    <prop name="RefPoint">102 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">42</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">110 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">2</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt1" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">28</prop>
    <prop name="Type"/>
    <prop name="RefPoint">122 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">44</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">130 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">1</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txt0" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">29</prop>
    <prop name="Type"/>
    <prop name="RefPoint">142 3.51388888888886</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">46</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 0.916666666666667 -8 -7.33333333333334</prop>
    <prop name="Location">150 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">0</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape Name="txtOutputValue" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">30</prop>
    <prop name="Type"/>
    <prop name="RefPoint">2 42</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">48</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">2 42</prop>
    <prop name="Size">161 21</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  if (isDollarDefined(&quot;$bShowOutput&quot;)) {
    bool bShowOutput = $bShowOutput;
    if (bShowOutput)
      this.visible = true;
    else
      this.visible = false;
  } else {
    this.visible = false;
  }
}]]></script>
   </events>
  </shape>
 </shapes>
</panel>