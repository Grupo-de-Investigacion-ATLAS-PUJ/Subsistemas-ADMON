<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
	<prop name="en_US.utf8">(NoName)</prop>
  </prop>
  <prop name="Size">329 200</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">30 162</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">98.05147058823529</prop>
  <prop name="layoutType">None</prop>
 </properties>
<events>
	<script name="ScopeLib" isEscaped="1"><![CDATA[

#uses &quot;fwElmb/fwElmbUser.ctl&quot;
#uses &quot;fwGeneral/fwGeneral.ctl&quot;
#uses &quot;fwGeneral/fwProgressBar.ctl&quot;
#uses &quot;panel.ctl&quot;
#uses &quot;fwGeneral/fwExceptionHandling.ctl&quot;
		#uses &quot;fwGeneral/fwGeneral.ctl&quot;
		#uses &quot;fwGeneral/fwExceptionHandling.ctl&quot;
		#uses &quot;fwElmb/fwElmbUser.ctl&quot;
		#uses &quot;fwGeneral/fwProgressBar.ctl&quot;
	]]></script>
</events>

 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="frmConfigurationOptions" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 60</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Configuration Options</prop>
    </prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 10</prop>
    <prop name="Size">310 50</prop>
   </properties>
  </shape>
  <shape Name="frmOPCAddressing" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">68</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 136</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">67</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 80</prop>
    <prop name="Size">310 56</prop>
   </properties>
  </shape>
  <shape Name="lstElmbNames" shapeType="SELECTION_LIST" layerId="0">
   <properties>
    <prop name="serialId">52</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">200 90</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">52</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">200 90</prop>
    <prop name="Size">79 31</prop>
    <prop name="Listitems"></prop>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
dyn_string dsElmbLabels;

this.deleteAllItems();
fwGeneral_stringToDynString($sElmbLabels, dsElmbLabels);
this.items = dsElmbLabels;
}]]></script>
   </events>
  </shape>
  <shape Name="lstNodeIDs" shapeType="SELECTION_LIST" layerId="0">
   <properties>
    <prop name="serialId">53</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">230 20</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">53</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">230 20</prop>
    <prop name="Size">51 31</prop>
    <prop name="Listitems"></prop>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
dyn_string dsNodeIDs;

this.deleteAllItems();
fwGeneral_stringToDynString($sNodeIDs, dsNodeIDs);
this.items = dsNodeIDs;
}]]></script>
   </events>
  </shape>
  <shape Name="chbOPCAddressing" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">38</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">21 91</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">39</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">21 91</prop>
    <prop name="Size">169 41</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
	<prop name="en_US.utf8">Default OPC addressing?</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, bool state)
{
	dyn_float df;
	dyn_string ds;
	
	if(!state) {
		ChildPanelOnCentralReturn(&quot;vision/MessageInfo3&quot;,
															&quot;Question&quot;,
															makeDynString(&quot;Unselecting this option you'll have to address\nyour devices by hand.\nAre you sure you want to do it?&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;Cancel&quot;),
															df, ds);
		if (df[1]!= 1.0)
			this.state(button) = true;
	}
	
	return;
}]]></script>
   </events>
  </shape>
  <shape Name="btnCancel" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">55</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">260 160</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">55</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">260 160</prop>
    <prop name="Size">59 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Cancel</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="btnAction" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">70</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">190 160</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">69</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 160</prop>
    <prop name="Size">59 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Next &gt;</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	bool bIsRunning;
	bool bDefaultAddressing;
	
	int i;
	int iDriverNumber;
	
	float fPercentage;
	float fAll, fCompleted;

	string sDpName;
	string sMessage;
	string sElmbComment;
	
	dyn_float df;

	dyn_string dsElmbNames;
	dyn_string dsNodeIDs;
	dyn_string dsExceptionInfo;
	dyn_string ds;

// Executable code
// ---------------
	// Disable the button
	this.enabled = false;
	
	// Check correct driver is running
	bIsRunning = fwElmbUser_checkDefaultDriver(iDriverNumber, dsExceptionInfo);
	if (dynlen(dsExceptionInfo) &gt; 0) {
		fwExceptionHandling_display(dsExceptionInfo);
		return;
	} else if (!bIsRunning) {
		// Display panel indicating what the problem is and how to fix it
		ChildPanelOnCentralReturn(&quot;fwElmb/fwElmbDriverMessage.pnl&quot;, 
															&quot;Warning&quot;,
															makeDynString(&quot;$drvNum:&quot; + iDriverNumber),
															df, ds);
		return;
	}

	// Start progress bar to indicate system is busy
	fwOpenProgressBar(&quot;Create ELMB Nodes&quot;, &quot;In progress. Please wait...&quot;, 2);

	// Get information required								
	getMultiValue(&quot;lstElmbNames&quot;, &quot;items&quot;, dsElmbNames,
								&quot;lstNodeIDs&quot;, &quot;items&quot;, dsNodeIDs);
	fAll = (float)dynlen(dsElmbNames);
	fCompleted = 0.0;
	fPercentage = 0.0;
	bDefaultAddressing = chbOPCAddressing.state(0);
	sElmbComment = $sElmbComment;

	for (i = 1; i &lt;= dynlen(dsElmbNames); i++) {
		
		fPercentage = fCompleted * 100.0 / fAll;
		sMessage = &quot;Creating &quot; + dsElmbNames[i];
		fwShowProgressBar(sMessage, fPercentage);
	
		// Create ELMB
		fwElmbUser_createElmb(dsElmbNames[i],
													sElmbComment,
													$sDpName,
													dsNodeIDs[i],
													bDefaultAddressing,
													dsExceptionInfo);
		
		fCompleted += 1.0;
		
	}//end on loop on devices.
	
	// Display any errors
	if (dynlen(dsExceptionInfo) &gt; 0) {
		fwCloseProgressBar(&quot;ELMB Node creation encountered errors&quot;);
		fwExceptionHandling_display(dsExceptionInfo);
	} else {
		fwCloseProgressBar(&quot;ELMB Node creation completed successfully&quot;);
	}	
	
	// Re-enable the button
	this.enabled = true;

	// Display channel create panel if required
	if (chkbOnlyElmbs.state(0)) {
		ModuleOn(&quot;NodeConfigurationModule&quot;, 0,0,600,800, 0,0,&quot;&quot;);
		RootPanelOnModule(&quot;fwElmb/fwElmbNodeConfiguration.pnl&quot;,
											&quot;Create Signals&quot;,
											&quot;NodeConfigurationModule&quot;,
											makeDynString(&quot;$sElmbLabels:&quot; + $sElmbLabels,
																		&quot;$sDpName:&quot; + $sDpName));
	}
	
	// Close the module
	ModuleOff(myModuleName());

	// Return to calling routine
	return;
}]]></script>
   </events>
  </shape>
  <shape Name="chkbOnlyElmbs" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">86</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 30</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">82</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">20 30</prop>
    <prop name="Size">191 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
	<prop name="en_US.utf8">Create ELMBs with channels</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, bool state)
{
	dyn_float df;
	dyn_string ds;
	
	if (this.state(0) == FALSE) {
		ChildPanelOnCentralReturn(&quot;vision/MessageInfo3&quot;,
															&quot;Question&quot;,
															makeDynString(&quot;This option will create Elmbs without\ninputs or outputs of any kind!\nAre you sure you want to continue?&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;Cancel&quot;),
															df, ds);
		if (df[1] == 1.0) {
			btnAction.text = &quot;Create&quot;;
			btnAction.enabled = TRUE;
			return;
		}	
	}
	
	this.state(0) = TRUE;
	btnAction.enabled = TRUE;
		
	if (this.state(0) == TRUE) {
		btnAction.text = &quot;Next &gt;&quot;;
		btnAction.enabled = TRUE;
		return;
	}
}]]></script>
   </events>
  </shape>
 </shapes>
</panel>
