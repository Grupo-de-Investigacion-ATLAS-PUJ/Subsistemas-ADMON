<?xml version='1.0' encoding='UTF-8'?>
<panel version="14">
 <properties>
  <prop name="Name">
	<prop name="en_US.utf8">(NoName)</prop>
  </prop>
  <prop name="Size">682 515</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">10 10</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"/>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">98.05147058823529</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwElmb/fwElmb.ctl&quot;
#uses &quot;fwGeneral/fwExceptionHandling.ctl&quot;

#uses &quot;fwElmb/fwElmb.ctl&quot;

#uses &quot;fwDevice/fwDevice.ctl&quot;

#uses &quot;fwGeneral/fwProgressBar.ctl&quot;

pnlUpdateDeviceListTable()
{
// Local Variables
// ---------------
	int i;
	int iSpeed;

	string sDeviceName;
  string sInterfacePort;
  string sInterfaceCard;
  string sManagementOnServerStart=&quot;-&quot;;

  langString lsComment;

	dyn_string dsChildren;
	dyn_string dsExceptionInfo;

// Executable Code
// ---------------
	// Delete all lines before starting
	deviceListTable.deleteAllLines();

	// Get all buses
	fwDevice_getChildren($sDpName, fwDevice_HARDWARE, dsChildren, dsExceptionInfo);

	// Get required information
	for (i = 1; i &lt;= dynlen(dsChildren); i++) {
		dpGet(dsChildren[i] + &quot;.interfacePort&quot;, sInterfacePort,
					dsChildren[i] + &quot;.id&quot;, sInterfaceCard,
		      dsChildren[i] + &quot;.busSpeed&quot;, iSpeed);
		lsComment = dpGetDescription(dsChildren[i] + &quot;.&quot;);

		fwDevice_getName(dsChildren[i], sDeviceName, dsExceptionInfo);

  dpGet(dsChildren[i]+&quot;.managementOnServerStart&quot;, sManagementOnServerStart);

		deviceListTable.appendLine(	&quot;deviceName&quot;, sDeviceName,
																&quot;comment&quot;, lsComment,
																&quot;interface&quot;, sInterfaceCard,
																&quot;port&quot;, sInterfacePort,
																&quot;speed&quot;, iSpeed,
																&quot;dpName&quot;, dsChildren[i],
                &quot;managementOnServerStart&quot;, sManagementOnServerStart);
	}
}]]></script>
  <script name="Close" isEscaped="1"><![CDATA[main()
{
	int i;
}]]></script>
  <script name="Terminate" isEscaped="1"><![CDATA[main()
{
	int i;
}]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="lblTitle" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"/>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">12 12</prop>
    <prop name="Size">157 23</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8">ELMB CAN Buses</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="frmShowColumns" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">11</prop>
    <prop name="Type"/>
    <prop name="RefPoint">400 77</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1 0 0 1 130 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Show Columns</prop>
    </prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">400 10</prop>
    <prop name="Size">140 70</prop>
   </properties>
  </shape>
  <shape Name="deviceListTable" shapeType="TABLE" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"/>
    <prop name="RefPoint">11 90</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">11 90</prop>
    <prop name="Size">660 341</prop>
    <prop name="ShowColumnHeader">True</prop>
    <prop name="ShowRowHeader">False</prop>
    <prop name="SortOnClick">True</prop>
    <prop name="RowHeight">26</prop>
    <prop name="RowHeaderWidth">30</prop>
    <prop name="GridType">Cross</prop>
    <prop name="VScrollBarMode">Auto</prop>
    <prop name="HScrollBarMode">AlwaysOff</prop>
    <prop name="Column">
     <prop name="Name">deviceName</prop>
     <prop name="Width">300</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Device Name</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">comment</prop>
     <prop name="Width">300</prop>
     <prop name="Visible">False</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Comment</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">interface</prop>
     <prop name="Width">80</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Interface</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">port</prop>
     <prop name="Width">50</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Port</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">speed</prop>
     <prop name="Width">100</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Speed</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">dpName</prop>
     <prop name="Width">100</prop>
     <prop name="Visible">False</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">dpName</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">managementOnServerStart</prop>
     <prop name="Width">80</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
	<prop name="en_US.utf8">Management on server start</prop>
     </prop>
     <prop name="ToolTipText">
	<prop name="en_US.utf8">(OPC UA Only) Defines which NMT Command (Start,Stop,Reset) shall be sent to all nodes of given bus upon server start.</prop>
     </prop>
    </prop>
    <prop name="Row">
     <prop name="Name"/>
     <prop name="Label">
	<prop name="en_US.utf8">#1</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	// Put table in multiple selection mode
	deviceListTable.tableMode(TABLE_SELECT_MULTIPLE); 
	deviceListTable.selectByClick(TABLE_SELECT_LINE);
	
	// Call function to initialise data
	pnlUpdateDeviceListTable();
}]]></script>
    <script name="DoubleClicked" isEscaped="1"><![CDATA[main(int row, string column)
{
    string sOut;
  if (column == &quot;managementOnServerStart&quot;)
  {
    switch (this.cellValue)
    {
      case &quot;&quot;: 
        sOut=&quot;START&quot;;
        break;
      case &quot;START&quot;:
        sOut=&quot;RESET&quot;;
        break;
      case &quot;RESET&quot;:
        sOut=&quot;STOP&quot;;
        break;
      case &quot;STOP&quot;:
        sOut=&quot;&quot;;
        break;
      default:
        sOut=&quot;&quot;;
    }
    
    // find dp
    string dp = this.cellValueRC(row, &quot;dpName&quot;);
    dpSet(dp+&quot;.managementOnServerStart&quot;, sOut);
    this.cellValue(sOut);
  }
  
}
]]></script>
   </events>
  </shape>
  <shape Name="btnModify" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"/>
    <prop name="RefPoint">478 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">5</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">478 440</prop>
    <prop name="Size">60 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Modify</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	int iBusSpeed;
	
	string sBusName;
	string sInterface;
	string sPort;
	
	dyn_int diSelectedLines;
	
	dyn_float df;
	
	dyn_string ds;
	
// Executable Code
// ---------------
	// Get any selected lines
	diSelectedLines = deviceListTable.getSelectedLines();	
	if (dynlen(diSelectedLines) == 0) {
		ChildPanelOnCentral(&quot;vision/MessageInfo1&quot;,
												&quot;Warning&quot;,
												makeDynString(&quot;No Bus selected&quot;));
		return;
	} else {
		// Only use the first selected line (ignore any multi-select)
		getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[1], &quot;dpName&quot;, sBusName);
		getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[1], &quot;interface&quot;, sInterface);
		getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[1], &quot;port&quot;, sPort);
		getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[1], &quot;speed&quot;, iBusSpeed);
				
		ChildPanelOnCentralReturn(&quot;fwElmb/fwElmbModifyBusParameters.pnl&quot;,
															&quot;Modify Bus parameters&quot;,
															makeDynString(&quot;$sDpName:&quot; + $sDpName,
																						&quot;$sBusName:&quot; + sBusName,
																						&quot;$sInterface:&quot; + sInterface,
																						&quot;$sPort:&quot; + sPort,
																						&quot;$iBusSpeed:&quot; + iBusSpeed),
															df, ds);
	}	
	
	// Update table
	pnlUpdateDeviceListTable();
	
	// Return to calling routine
	return;
}]]></script>
   </events>
  </shape>
  <shape Name="btnClose" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">6</prop>
    <prop name="Type"/>
    <prop name="RefPoint">614 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 440</prop>
    <prop name="Size">60 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="btnCreate" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">7</prop>
    <prop name="Type"/>
    <prop name="RefPoint">410 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">410 440</prop>
    <prop name="Size">60 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Create</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_float df;
	dyn_string ds;
	
 	ChildPanelOnCentralModalReturn(	&quot;fwElmb/fwElmbCANbusCreate.pnl&quot;,
							   									&quot;Create new CANbus&quot;,
 																	makeDynString(&quot;$sDpName:&quot; + $sDpName),
							   									df, ds);
 	pnlUpdateDeviceListTable();
}]]></script>
   </events>
  </shape>
  <shape Name="btnCreateConfig" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">8</prop>
    <prop name="Type"/>
    <prop name="RefPoint">10 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 440</prop>
    <prop name="Size">141 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Create OPC Config</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	ChildPanelOnCentral(&quot;fwElmb/fwElmbOpcExportConfiguration.pnl&quot;,
	                    &quot;Create new OPC Server configuration file&quot;,
	                    makeDynString(&quot;$sDpName:&quot; + $sDpName));
}]]></script>
   </events>
  </shape>
  <shape Name="btnDelete" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">9</prop>
    <prop name="Type"/>
    <prop name="RefPoint">546 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">546 440</prop>
    <prop name="Size">60 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Delete</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
	int i;
	
	string sDpName;
	
	dyn_int diSelectedLines;
	
	dyn_float df;
	
	dyn_string dsExceptionInfo;
	dyn_string ds;
	
// Executable Code
// ---------------
	// Get any selected nodes from the table
	diSelectedLines = deviceListTable.getSelectedLines();	

	if (dynlen(diSelectedLines) &gt; 0) {	
	
		// Give user the chance to cancel
		if (dynlen(diSelectedLines) == 1)
			ChildPanelOnCentralReturn(&quot;vision/MessageInfo&quot;,
																&quot;Confirm&quot;,
																makeDynString(&quot;Are you sure you want delete this bus?&quot;, &quot;OK&quot;, &quot;Cancel&quot;),
																df, ds);
		else
			ChildPanelOnCentralReturn(&quot;vision/MessageInfo&quot;,
																&quot;Confirm&quot;,
																makeDynString(&quot;Are you sure you want delete these &quot; + dynlen(diSelectedLines) + &quot; buses?&quot;, &quot;OK&quot;, &quot;Cancel&quot;),
																df, ds);
																
		if (df[1]==1) {
	
			// Indicate system is busy
			fwOpenProgressBar(&quot;Deleting Buses&quot;, &quot;In progress. Please wait...&quot;, 1);
	
			for (i = 1; i &lt;= dynlen(diSelectedLines); i++) {
				getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[i], &quot;dpName&quot;, sDpName);
				fwDevice_delete(sDpName, dsExceptionInfo);
			}

			// Check for errors																
			if (dynlen(dsExceptionInfo) &gt; 0) {
				fwCloseProgressBar(&quot;Bus deletion encountered errors&quot;);
				fwExceptionHandling_display(dsExceptionInfo);
			} else {
				fwCloseProgressBar(&quot;Bus deletion completed successfully&quot;);
			}	
			
			// Update the table information
			pnlUpdateDeviceListTable();
		}
	} else {
		ChildPanelOnCentral(&quot;vision/MessageInfo1&quot;,
												&quot;Nothing to Delete&quot;,
												makeDynString(&quot;No buses have been selected for deletion&quot;));
	}
	
	// Return to calling routine
	return;
}]]></script>
   </events>
  </shape>
  <shape Name="cmdOpenMonitorSetup" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"/>
    <prop name="RefPoint">180 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">180 10</prop>
    <prop name="Size">122 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Setup Monitoring</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	ChildPanelOnCentral(&quot;fwElmb/fwElmbMonitorConfiguration.pnl&quot;,
											&quot;Monitor Setup&quot;,
											makeDynString());
}]]></script>
   </events>
  </shape>
  <shape Name="chkShowDescription" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"/>
    <prop name="RefPoint">540 30</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">540 30</prop>
    <prop name="Size">121 41</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
	<prop name="en_US.utf8">Device Name</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
	<prop name="en_US.utf8">Comment</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, bool state)
{
	switch (button) {
		case 0:	// ELMB name
			if (state)
				deviceListTable.namedColumnVisibility(&quot;deviceName&quot;, true);
			else
				deviceListTable.namedColumnVisibility(&quot;deviceName&quot;, false);
			break;
		case 1:	// Comment
			if (state)
				deviceListTable.namedColumnVisibility(&quot;comment&quot;, true);
			else
				deviceListTable.namedColumnVisibility(&quot;comment&quot;, false);
			break;
	}
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">14</prop>
    <prop name="Type"/>
    <prop name="RefPoint">90 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8">wwwww</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">90 480</prop>
    <prop name="Size">91 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Add comments</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{



  dyn_string argdsExceptionInfo;
  
  dyn_int diSelectedLines;
  getValue(&quot;deviceListTable&quot;, &quot;getSelectedLines&quot;, diSelectedLines);
	
			for (int i = 1; i &lt;= dynlen(diSelectedLines); i++) {
        string sBusDp;
				getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[i], &quot;dpName&quot;, sBusDp);
			  DebugN (&quot;dpName=&quot;+sBusDp);
        /* On bus context */
        fwElmb_addDpeComments(sBusDp);
        dyn_string elmbs = dpNames(sBusDp+&quot;*&quot;, ELMB_TYPE_NAME);
        for (int j=1; j &lt;= dynlen(elmbs); j++)
        {
          DebugN (&quot;ELMB: +&quot;+elmbs[j]);
          fwElmb_addDpeComments (elmbs[j]);
        }
			}  

  

}]]></script>
    <script name="MouseOver" isEscaped="1"><![CDATA[main(bool enter)
{
  this.toolTipText = &quot;For chosen bus and its ELMBs\nadd standard FwElmb DP comments for certain DPEs\n(only if they don't yet exist.) &quot;;
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON4" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">15</prop>
    <prop name="Type"/>
    <prop name="RefPoint">190 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8">wwwww</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 480</prop>
    <prop name="Size">71 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Del alerts</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{

  dyn_string argdsExceptionInfo;
  
  dyn_int diSelectedLines;
  getValue(&quot;deviceListTable&quot;, &quot;getSelectedLines&quot;, diSelectedLines);
	
			for (int i = 1; i &lt;= dynlen(diSelectedLines); i++) {
        string sBusDp;
				getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[i], &quot;dpName&quot;, sBusDp);
			  DebugN (&quot;dpName=&quot;+sBusDp);
        fwElmb_removeBusAlertHandling ( sBusDp ) ;
        dyn_string elmbs = dpNames(sBusDp+&quot;*&quot;, ELMB_TYPE_NAME);
        for (int j=1; j &lt;= dynlen(elmbs); j++)
        {
          DebugN (&quot;ELMB: +&quot;+elmbs[j]);
          fwElmb_removeNodeAlertHandling (elmbs[j]);
        }
			}  
    
  

}]]></script>
    <script name="MouseOver" isEscaped="1"><![CDATA[main(bool enter)
{
  this.toolTipText = &quot;For chosen bus and its ELMBs delete standard FwElmb alerts.&quot;;
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON5" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">16</prop>
    <prop name="Type"/>
    <prop name="RefPoint">270 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">13</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8">wwwww</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">270 480</prop>
    <prop name="Size">91 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Del comments</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{

  dyn_string argdsExceptionInfo;
  
  dyn_int diSelectedLines;
  getValue(&quot;deviceListTable&quot;, &quot;getSelectedLines&quot;, diSelectedLines);
	
			for (int i = 1; i &lt;= dynlen(diSelectedLines); i++) {
        string sBusDp;
				getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[i], &quot;dpName&quot;, sBusDp);
			  DebugN (&quot;dpName=&quot;+sBusDp);
        fwElmb_deleteDpeComments( sBusDp );
        dyn_string elmbs = dpNames(sBusDp+&quot;*&quot;, ELMB_TYPE_NAME);
        for (int j=1; j &lt;= dynlen(elmbs); j++)
        {
          DebugN (&quot;ELMB: +&quot;+elmbs[j]);
          fwElmb_deleteDpeComments(elmbs[j]);
        }
			}  
    
}]]></script>
    <script name="MouseOver" isEscaped="1"><![CDATA[main(bool enter)
{
  this.toolTipText = &quot;For given bus and its ELMBs delete standard FwElmb DPE comments&quot;;
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"/>
    <prop name="RefPoint">10 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">10</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8">wwwww</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
	<prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 480</prop>
    <prop name="Size">71 26</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
	<prop name="en_US.utf8">Add alerts</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{

  dyn_string argdsExceptionInfo;
  
  dyn_int diSelectedLines;
  getValue(&quot;deviceListTable&quot;, &quot;getSelectedLines&quot;, diSelectedLines);
	
			for (int i = 1; i &lt;= dynlen(diSelectedLines); i++) {
        string sBusDp;
				getValue(&quot;deviceListTable&quot;, &quot;cellValueRC&quot;, diSelectedLines[i], &quot;dpName&quot;, sBusDp);
			  DebugN (&quot;dpName=&quot;+sBusDp);
        fwElmb_createBusAlertHandling( sBusDp, argdsExceptionInfo); 
        dyn_string elmbs = dpNames(sBusDp+&quot;*&quot;, ELMB_TYPE_NAME);
        for (int j=1; j &lt;= dynlen(elmbs); j++)
        {
          DebugN (&quot;ELMB: +&quot;+elmbs[j]);
          fwElmb_createNodeAlertHandling(elmbs[j], argdsExceptionInfo);
        }
			}  
  
}]]></script>
    <script name="MouseOver" isEscaped="1"><![CDATA[main(bool enter)
{
  this.toolTipText = &quot;For chosen bus and its ELMBs\nadd standard FwElmb alerts for certain DPEs\n(only if they don't yet exist.) &quot;;
}]]></script>
   </events>
  </shape>
 </shapes>
</panel>