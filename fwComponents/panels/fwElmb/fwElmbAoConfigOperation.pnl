<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
  </prop>
  <prop name="Size">430 360</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">False</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">98.05147058823529</prop>
  <prop name="PDPI">98.05147058823529</prop>
  <prop name="layoutType">None</prop>
 </properties>
<events>
	<script name="ScopeLib" isEscaped="1"><![CDATA[

#uses &quot;fwDevice/fwDevice.ctl&quot;
#uses &quot;fwElmb/fwElmbUser.ctl&quot;
#uses &quot;fwGeneral/fwProgressBar.ctl&quot;
#uses &quot;panel.ctl&quot;
#uses &quot;fwElmb/fwElmb.ctl&quot;
#uses &quot;fwGeneral/fwExceptionHandling.ctl&quot;
		#uses &quot;fwGeneral/fwExceptionHandling.ctl&quot;
		#uses &quot;fwElmb/fwElmb.ctl&quot;
		#uses &quot;fwDevice/fwDevice.ctl&quot;
		#uses &quot;fwElmb/fwElmbUser.ctl&quot;
		#uses &quot;fwGeneral/fwProgressBar.ctl&quot;
	]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="txtTitle" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">73 30</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">schwarz</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 12</prop>
    <prop name="Size">252 26</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Elmb DAC Operation Panel</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <reference parentSerial="-1" Name="" referenceId="0">
   <properties>
    <prop name="FileName">fwElmb/objects/fwElmbVersionsRef.pnl</prop>
    <prop name="Location">240 90</prop>
    <prop name="Geometry">1 0 0 1 -60 10</prop>
    <prop name="TabOrder">24</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sDpName</prop>
      <prop name="Value">$sDpName</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
  <shape Name="lblNodeID" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">39</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 50</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">26</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 52</prop>
    <prop name="Size">47 17</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Node Id:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="txtNodeID" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">40</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">70 50</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">28</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">72 52</prop>
    <prop name="Size">57 17</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
  string sDpName = $sDpName;
  string nodeId;
	
// Executable Code
// ---------------
  // Remove the config part from the DP name to get the ELMB DP name
  strreplace(sDpName, fwDevice_HIERARCHY_SEPARATOR + ELMB_AO_CONFIG_NAME, &quot;&quot;);
	
  // Get the node ID
  dpGet(sDpName + &quot;.id&quot;, nodeId);
	
  // Display the text
  this.text = nodeId;
	
  // Return to calling routine
  return;
}]]></script>
   </events>
  </shape>
  <shape Name="cmdWrite" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">41</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">358 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">30</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">358 280</prop>
    <prop name="Size">63 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Write</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
  unsigned uState;
  unsigned uSclkHigh;

  int iDACtype;

  string sElmbDpName;

  dyn_float df;

  dyn_string ds;
  dyn_string dsExceptionInfo;


// Executable Code
// ---------------
  // Check if values should be saved to EEPROM
  ChildPanelOnCentralReturn(&quot;vision/MessageInfo3&quot;,
                            &quot;Question&quot;,
                            makeDynString(&quot;Save these settings to the EEPROM? \n(i.e. make default settings)&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;Cancel&quot;),
                            df, ds);

  // If cancel clicked, do not set configuration
  if (df[1] == 2)
    return;

  // Disable necessary controls until configuration set
  this.enabled = false;
  cmdRead.enabled = false;

  // Get the parent (ELMB) that this config comes from
  fwDevice_getParent($sDpName, sElmbDpName, dsExceptionInfo);

  // Get current state of ELMB
  dpGet(sElmbDpName + &quot;.state.value&quot;, uState);

  // Set ELMB pre-operational
  dpSet(sElmbDpName + &quot;.requestedState&quot;, &quot;PREOPERATIONAL&quot;);

  txtMessage.text = &quot;This will take a few seconds. Please wait...&quot;;

  // DAC type
  iDACtype = cmbDACtype.selectedPos;
  if (iDACtype == 1) {
    dpSet($sDpName + &quot;.dacType.write&quot;, false);
    delay(0,50);
  } else if (iDACtype == 2) {
    dpSet($sDpName + &quot;.dacType.write&quot;, true);
    delay(0,50);
  }

  // SPI SCLK signal high period
  uSclkHigh = txtSpiSclkSignalHigh.text;
  if ((uSclkHigh &gt;= 10) &amp;&amp; (uSclkHigh &lt;= 255)) {
    dpSet($sDpName + &quot;.sclkHighPeriod.write&quot;, uSclkHigh);
    delay(0,50);
  }

  if (df[1] == 1.0) {
    dpSet(sElmbDpName + &quot;.eeprom.save&quot;, ELMB_SAVE_EEPROM);
    delay(0, 50);
  }

  // Set the ELMB back to it's original state, but only if it was stopped or operational.
  // Otherwise, leave it as preoperational
  if ((uState == 0x84) || (uState == 0x04))
    dpSet(sElmbDpName + &quot;.requestedState&quot;, &quot;STOPPED&quot;);
  else if ((uState  == 0x85) || (uState == 0x05))
    dpSet(sElmbDpName + &quot;.requestedState&quot;, &quot;OPERATIONAL&quot;);

  // Indicate success to user
  txtMessage.text = &quot;Info: DAC configuration set&quot;;

  // Re-enable controls
  this.enabled = true;
  cmdRead.enabled = true;

  // Return to calling routine
  return;
}]]></script>
   </events>
  </shape>
  <shape Name="cmdRead" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">42</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">290 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">32</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">290 280</prop>
    <prop name="Size">63 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Read</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
// Local Variables
// ---------------
  bool bDACtype;

  int iChannelMax;  // Should be unsigned?
  int iTemp;

  unsigned uState;
  unsigned uSclkHigh;

  string sElmbName;

  anytype aValue;

  dyn_string dsExceptionTemp;
  dyn_string dsExceptionInfo;

// Executable Code
// ---------------
  // Disable certain controls while the read takes place
  this.enabled = false;
  cmdWrite.enabled = false;

  // Give some information to the user
  txtMessage.text = &quot;This may take up to 10 seconds. Please wait...&quot;;
  fwOpenProgressBar(&quot;Reading DAC Settings&quot;, &quot;In progress. Please wait...&quot;, 1);

  // Get the parent (ELMB) that this config comes from
  fwDevice_getParent($sDpName, sElmbName, dsExceptionInfo);

  // Get current state of ELMB
  dpGet(sElmbName + &quot;.state.value&quot;, uState);

  // Set node to Pre-Operational:
  dpSetWait(sElmbName + &quot;.requestedState&quot;, &quot;PREOPERATIONAL&quot;);

  // Max number of output channels
  fwElmb_elementSQ($sDpName + &quot;.chNumber.read&quot;, 2, aValue, dsExceptionTemp);
  if (dynlen(dsExceptionTemp) == 0) {
    iChannelMax = aValue;
    lblHighestChannelNum.enabled = true;
    txtHighestChannelNum.text = iChannelMax;
  } else {
    lblHighestChannelNum.enabled = false;
    txtHighestChannelNum.text = &quot;&quot;;
    dynAppend(dsExceptionInfo, dsExceptionTemp);
  }

  // DAC type
  fwElmb_elementSQ($sDpName + &quot;.dacType.read&quot;, 2, aValue, dsExceptionTemp);
  if (dynlen(dsExceptionTemp) == 0) {
    bDACtype = aValue;
    lblDACtype.enabled = true;
    cmbDACtype.enabled = true;
    if (bDACtype) {
      cmbDACtype.selectedPos = 2;
    } else {
      cmbDACtype.selectedPos = 1;
    }
  } else {
    lblDACtype.enabled = true;
    cmbDACtype.enabled = false;
    cmbDACtype.selectedPos = 0;
    dynAppend(dsExceptionInfo, dsExceptionTemp);
  }

  // SPI SCLK Signal High Period
  fwElmb_elementSQ($sDpName + &quot;.sclkHighPeriod.read&quot;, 2, aValue, dsExceptionTemp);
  if (dynlen(dsExceptionTemp) == 0) {
    uSclkHigh = aValue;
    lblSpiSclkSignalHigh.enabled = true;
    txtSpiSclkSignalHigh.enabled = true;
    txtSpiSclkSignalHigh.text = uSclkHigh;
  } else {
    lblSpiSclkSignalHigh.enabled = false;
    txtSpiSclkSignalHigh.enabled = false;
    txtSpiSclkSignalHigh.text = &quot;&quot;;
    dynAppend(dsExceptionInfo, dsExceptionTemp);
  }

  fwElmbUser_updateFirmwareInfo(sElmbName);

  // Set the ELMB back to it's original state, but only if it was stopped or operational.
  // Otherwise, leave it as preoperational
  if ((uState == 0x84) || (uState == 0x04))
    dpSet(sElmbName + &quot;.requestedState&quot;, &quot;STOPPED&quot;);
  else if ((uState  == 0x85) || (uState == 0x05))
    dpSet(sElmbName + &quot;.requestedState&quot;, &quot;OPERATIONAL&quot;);

  // Check for errors
  if (dynlen(dsExceptionInfo) &gt; 0) {
    fwCloseProgressBar(&quot;Problems reading DAC settings&quot;);
    txtMessage.text = &quot;Problems reading DAC settings&quot;;
    fwExceptionHandling_display(dsExceptionInfo);
  } else {
    txtMessage.text = &quot;DAC settings successfully read&quot;;
    fwCloseProgressBar(&quot;DAC settings successfully read&quot;);
  }

  // Re-enable controls
  this.enabled = true;
  cmdWrite.enabled = true;

  // Return to calling routine
  return;
}
]]></script>
   </events>
  </shape>
  <shape Name="txtMessage" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">43</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">34</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 282</prop>
    <prop name="Size">267 27</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="cmdClose" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">44</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">290 320</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">36</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">290 320</prop>
    <prop name="Size">131 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  PanelOff(myPanelName());
}]]></script>
   </events>
  </shape>
  <shape Name="cmbDACtype" shapeType="COMBO_BOX" layerId="0">
   <properties>
    <prop name="serialId">45</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">200 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">38</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">200 180</prop>
    <prop name="Size">111 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">MAX5122</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">MAX525</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
  </shape>
  <shape Name="lblDACtype" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">48</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">44</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">22 182</prop>
    <prop name="Size">64 18</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">DAC Type:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="lblSpiSclkSignalHigh" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">49</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">46</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Opto-coupler delay</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">22 212</prop>
    <prop name="Size">175 18</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">SPI SCLK Signal High Period:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="lblHighestChannelNum" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">51</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 240</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">50</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">22 242</prop>
    <prop name="Size">145 17</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Highest channel number:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="frmDACSettings" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">53</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 280</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">54</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1 0 0 1 0 -10</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">DAC Settings</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 170</prop>
    <prop name="Size">410 110</prop>
   </properties>
  </shape>
  <shape Name="txtHighestChannelNum" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">54</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">200 239.5</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">55</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">200 239.5</prop>
    <prop name="Size">61 20</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="ClearButtonEnabled">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
    <prop name="ulcClientSideWidget">False</prop>
   </properties>
  </shape>
  <shape Name="txtSpiSclkSignalHigh" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">55</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">200 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">57</prop>
    <prop name="ToolTipText">
	<prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">200 210</prop>
    <prop name="Size">61 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="ClearButtonEnabled">False</prop>
    <prop name="TextFormat">[3d,False,False,AlignLeft,False]</prop>
    <prop name="ulcClientSideWidget">False</prop>
   </properties>
  </shape>
 </shapes>
</panel>
