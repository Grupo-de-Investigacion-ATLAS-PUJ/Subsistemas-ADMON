<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
  </prop>
  <prop name="Size">475 160</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">380 70</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">98.05147058823529</prop>
  <prop name="PDPI">98.05147058823529</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[

#uses &quot;fwAtlas/fwAtlas.ctl&quot;
#uses &quot;fwElmb/fwElmbUser.ctl&quot;
#uses &quot;panel.ctl&quot;
		#uses &quot;fwGeneral/fwExceptionHandling.ctl&quot;
		#uses &quot;fwDevice/fwDevice.ctl&quot;
		#uses &quot;fwElmb/fwElmbUser.ctl&quot;
		#uses &quot;fwElmb/fwElmbUtils.ctl&quot;
	]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="Text4" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">19</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">127.9375 24</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">17</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">129.9375 26</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Insert path to store created config file</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="btnClose" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">280 97</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">280 97</prop>
    <prop name="Size">71 29</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="txtFilename" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">126.25 57</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">126.25 57</prop>
    <prop name="Size">225 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="ClearButtonEnabled">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
    <prop name="ulcClientSideWidget">False</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  string configPath = fwElmbUser_getOPCUAConfigPath();
	this.text = configPath;
}]]></script>
   </events>
  </shape>
  <shape Name="btnCreateConfigFile" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">21</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">130 100</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">18</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Liberation Sans,-1,13,5,50,0,0,0,0,0,Regular</prop>
    </prop>
    <prop name="Location">130 96</prop>
    <prop name="Size">131 31</prop>
    <prop name="BorderStyle">Styled</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Create Config File</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[#uses &quot;fwAtlas/fwAtlas.ctl&quot;
#uses &quot;fwInstallation/fwInstallation.ctl&quot;

//
// export DPs or DPTs according to ASCII manager config preset
//
bool fwAtlas_exportFromAsciiConfig(string configDP, string dplistPath)
{
	string fileName = dplistPath + &quot;fwElmbExport.dpl&quot;;
  DebugN(fileName);
  //strreplace(fileName, &quot;:&quot;, &quot;&quot;);
	bool dpt, dp, alias, original, param;
	dyn_string dps, dpts;
	dpGet(configDP + &quot;.OutFilter.DPTypen:_original.._value&quot;, dpt,
				configDP + &quot;.OutFilter.DP:_original.._value&quot;, dp,
				configDP + &quot;.OutFilter.Alias:_original.._value&quot;, alias,
				configDP + &quot;.OutFilter.Originalwerte:_original.._value&quot;, original,
				configDP + &quot;.OutFilter.Parametrierung:_original.._value&quot;, param,
 				configDP + &quot;.DP:_original.._value&quot;, dps,
				configDP + &quot;.DPTypen:_original.._value&quot;, dpts);
	string filter;
	if (dpt) filter += &quot;T&quot;;
	if (dp) filter += &quot;D&quot;;
	if (alias) filter += &quot;A&quot;;
	if (original) filter += &quot;O&quot;;
	if (param) filter += &quot;P&quot;;
  DebugN(&quot;Filter: &quot; + filter);
	if (dynlen(dps)==1 &amp;&amp; dps[1]==&quot;alle&quot;) dps = makeDynString();
	if (dynlen(dpts)==1 &amp;&amp; dpts[1]==&quot;alle&quot;) dpts = makeDynString();
  DebugN(&quot;Proceding to Dpl creation&quot;);
 	fwInstallationPackager_createDpl(fileName, dps, dpts, filter);
	if (isfile(fileName) &amp;&amp; getFileSize(fileName) &gt; 100
			&amp;&amp; (getCurrentTime() - getFileModificationTime(fileName))&lt;10 ) {
		information(&quot;DP export: successfully created &quot;+fileName);
		return true;
	}
	else {
		error(&quot;DP export: error creating &quot;+fileName);
		return false;
	}
}

main()
{

  //First export the fwElmbConfigExport

  string configStore = txtFilename.text;
  dyn_string configDps = dpNames(&quot;*&quot;, &quot;_AsciiConfig&quot;);
  for(int i=1;i&lt;=dynlen(configDps);i++){
    string name;
    string dp = configDps[i];
    dpGet(dp + &quot;.Name&quot;, name);

    if(name == &quot;fwElmbConfigExport&quot;){
      information(&quot;Exporting ascii config &quot;+name+&quot; ...&quot;);
      string dplistPath = getPath(DPLIST_REL_PATH);
      fwAtlas_exportFromAsciiConfig(dp, dplistPath);
    }

  }


  string scriptPath = getPath(BIN_REL_PATH + &quot;fwElmb/Shelter/&quot;, &quot;canopen_ng_config_gen.py&quot;);
  string shelterPath = scriptPath;
  strreplace(shelterPath, &quot;canopen_ng_config_gen.py&quot;, &quot;&quot;);
  string dplPath = getPath(DPLIST_REL_PATH, &quot;fwElmbExport.dpl&quot;);
  string logPath = getPath(BIN_REL_PATH);

  string fileName = getSystemName();
  strreplace(fileName, &quot;:&quot;, &quot;&quot;);

    //DebugN(&quot;Shelter script path: &quot; + shelterPath);
    //DebugN(&quot;Cmd line introduced: python3.9 &quot; + scriptPath + &quot; --dplPath &quot;+ dplPath + &quot; --projectName &quot; + fileName + &quot; --shelterPath &quot; + shelterPath);
    system(&quot;python3.9 &quot; + scriptPath + &quot; --dplPath &quot;+ dplPath + &quot; --projectName &quot; + fileName + &quot; --shelterPath &quot; + shelterPath + &quot;--logStoragePath&quot; + logPath + &quot; --configStoragePath &quot; + configStore);
}
]]></script>
   </events>
  </shape>
 </shapes>
</panel>
