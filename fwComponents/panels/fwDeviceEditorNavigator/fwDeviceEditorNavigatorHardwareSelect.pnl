<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
  </prop>
  <prop name="Size">320 450</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">10 10</prop>
  <prop name="InitAndTermRef">False</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwDevice/fwDevice.ctl&quot;
#uses &quot;fwDeviceEditorNavigator/fwDeviceEditorNavigator.ctl&quot;
string g_dpAliasWithoutSN = &quot;&quot;;

// ------------------------------------------------------------------------------------------------

bool hasParent(string sCurrentItem)
{
  shape tree;

  tree = getShape(&quot;referenceTree.tree1&quot;);
  
  return tree.parent(sCurrentItem) != &quot;&quot;;
}

// ------------------------------------------------------------------------------------------------

bool hasGrandParent(string sCurrentItem)
{
  shape tree;
  string sParentItem, sGrandParentItem;

  if(hasParent(sCurrentItem))
  {
    tree = getShape(&quot;referenceTree.tree1&quot;);
    sParentItem = tree.parent(sCurrentItem);
    sGrandParentItem = tree.parent(sParentItem);
  }
  
  return sGrandParentItem != &quot;&quot;;
}

// ------------------------------------------------------------------------------------------------

string getCurrentItem()
{
  shape tree;
  string sCurrentItem;
  
  // to solve bug crashing ui go through getshape
  tree = getShape(&quot;referenceTree.tree1&quot;);
  sCurrentItem = tree.currentItem();
  
  return sCurrentItem;
}

// ------------------------------------------------------------------------------------------------

dyn_string showAliasSelectionDialog(dyn_string dsItem)
{
  dyn_float df;
  dyn_string dsDeviceData;
      
  ChildPanelOnCentralModalReturn(&quot;fwDevice/fwDeviceLogicalSelectAliases.pnl&quot;, 
                                   &quot;Set Aliases&quot;,
                                   makeDynString(&quot;$dpAliasWithoutSN:&quot;+g_dpAliasWithoutSN, &quot;$dsListOfDevices:&quot; + dsItem),
                                   df, dsDeviceData);
  
  return dsDeviceData;
}

]]></script>
  <script name="Close" isEscaped="1"><![CDATA[main()
{
	int i;
}]]></script>
  <script name="Terminate" isEscaped="1"><![CDATA[main()
{
	int i;
}]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  if(isDollarDefined(&quot;$dpAliasWithoutSN&quot;))
  {
    g_dpAliasWithoutSN = $dpAliasWithoutSN;
  }
}]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="Button1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 434</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">235 415</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Cancel</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOffReturn(makeDynFloat(), makeDynString());
}]]></script>
   </events>
  </shape>
  <shape Name="Button2" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">3</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">137 415</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">137 415</prop>
    <prop name="Size">91 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Add device</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{	
  string sCurrentItem;
  dyn_float df;
  dyn_string dsDeviceData, exceptionInfo;

  sCurrentItem = getCurrentItem();

  if(hasParent(sCurrentItem) &amp;&amp; hasGrandParent(sCurrentItem))
  {
    dsDeviceData = showAliasSelectionDialog(sCurrentItem);
    PanelOffReturn(df, dsDeviceData);
  }
  else
  {
    fwException_raise(exceptionInfo, &quot;WARNING&quot;, &quot;Select a device below the system and vendor node levels.&quot;, &quot;&quot;);
    fwExceptionHandling_display(exceptionInfo);
  }
}
]]></script>
   </events>
  </shape>
  <shape Name="Button3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">5</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 415</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">5</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 415</prop>
    <prop name="Size">120 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Add leaf devices</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{	
  string sCurrentItem;
  dyn_float df;
  dyn_string dsDeviceData, dsLeafs, exceptionInfo;
      
  sCurrentItem = getCurrentItem();

  if(hasParent(sCurrentItem))
  {
    fwDevice_getLeafs(sCurrentItem, dsLeafs, exceptionInfo);   
    dsDeviceData = showAliasSelectionDialog(dsLeafs);
    PanelOffReturn(df, dsDeviceData);
  }
  else
  {
    fwException_raise(exceptionInfo, &quot;WARNING&quot;, &quot;Select a device below the system level.&quot;, &quot;&quot;);
    fwExceptionHandling_display(exceptionInfo);
  }
}
]]></script>
   </events>
  </shape>
  <reference parentSerial="-1" Name="referenceTree" referenceId="1">
   <properties>
    <prop name="FileName">fwDeviceEditorNavigator/fwDeviceEditorNavigatorTree.pnl</prop>
    <prop name="Location">20 45</prop>
    <prop name="Geometry">1.181053160008454 0 0 0.986351829988193 -3.01535087719298 0.5459268004722548</prop>
    <prop name="TabOrder">5</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sTreeType</prop>
      <prop name="Value">"HARDWARE SELECT"</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
  <shape Name="bgRectangle" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">7</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 530</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">FwCorporateColor</prop>
    <prop name="TabOrder">6</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">-1 -1</prop>
    <prop name="Size">1270 31</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="title" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">8</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">7.999999999999986 2</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">white</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">9.999999999999986 4</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Hardware Selection</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
 </shapes>
</panel>
