<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
  </prop>
  <prop name="Size">264 385</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">51 52</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwAlarmHandling/fwAlarmHandling.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmHandlingScreen.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmHandlingScreenGroups.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmScreen.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmScreenGeneric.ctl&quot;

dyn_string AllNodes, AllNodesMore;]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="list" shapeType="SELECTION_LIST" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">29 50.00000000000001</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">30 50</prop>
    <prop name="Size">221 281</prop>
    <prop name="Listitems"/>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  dyn_string nodes, items, exc;
  int i, ref;
  string node_name, ref_obj;

  fwGeneral_stringToDynString($sNodesList, nodes);
  this.items = nodes;

}
]]></script>
   </events>
  </shape>
  <shape Name="list_down" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 290</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">5</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 290</prop>
    <prop name="Size">17 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">arrow_down.bmp</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string listStrings;
	string selectedString;
	int selectedPosition;
	
	getValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	if(dynlen(listStrings) &lt;= 1)
		return;
	getValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	getValue(&quot;list&quot;,&quot;selectedPos&quot;,selectedPosition);
	if(selectedPosition != dynlen(listStrings))
	{
		dynRemove(listStrings, selectedPosition);
		dynInsertAt(listStrings, selectedString, selectedPosition + 1);
	  setValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	  setValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	}
}]]></script>
   </events>
  </shape>
  <shape Name="Button2" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">5</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">89 347.047619047619</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">6</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">90 350</prop>
    <prop name="Size">71 32</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Ok</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
dyn_string objs, children, items, exInfo;
int i, index;
string node_name;

	getValue(&quot;list&quot;,&quot;items&quot;,objs);
	items = objs;
	for(i = 1; i &lt;= dynlen(AllNodesMore); i++)
	{
		if(index = dynContains(items, AllNodesMore[i]))
		{
			items[index] = AllNodes[i]; 
		}
	}	
	PanelOffReturn(makeDynFloat(1),items);
} 
]]></script>
   </events>
  </shape>
  <shape Name="Button3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">6</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 347.0476190476191</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">180 350</prop>
    <prop name="Size">71 32</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Cancel</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() 
{ 
	PanelOffReturn(makeDynFloat(0),makeDynString());
} 

]]></script>
   </events>
  </shape>
  <shape Name="Button1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">8</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 50</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 50</prop>
    <prop name="Size">17 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">arrow_up_top.bmp</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string listStrings;
	string selectedString;
	int selectedPosition;
	
	getValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	if(dynlen(listStrings) &lt;= 1)
		return;
	getValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	getValue(&quot;list&quot;,&quot;selectedPos&quot;,selectedPosition);
	if(selectedPosition != 1)
	{
		dynRemove(listStrings, selectedPosition);
//		dynInsertAt(listStrings, selectedString, selectedPosition - 1);
		dynInsertAt(listStrings, selectedString, 1);
	  setValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	  setValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	}	
}]]></script>
   </events>
  </shape>
  <shape Name="Button4" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">9</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 310</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">10</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 310</prop>
    <prop name="Size">17 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">arrow_down_bottom.bmp</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string listStrings;
	string selectedString;
	int selectedPosition, len;
	
	getValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	len = dynlen(listStrings);
	if(len &lt;= 1)
		return;
	getValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	getValue(&quot;list&quot;,&quot;selectedPos&quot;,selectedPosition);
	if(selectedPosition != len)
	{
		dynRemove(listStrings, selectedPosition);
		dynAppend(listStrings, selectedString);
	  setValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	  setValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	}
}]]></script>
   </events>
  </shape>
  <shape Name="list_up" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">3</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 70</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">4</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 70</prop>
    <prop name="Size">17 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">arrow_up.bmp</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string listStrings;
	string selectedString;
	int selectedPosition;
	
	getValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	if(dynlen(listStrings) &lt;= 1)
		return;
	getValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	getValue(&quot;list&quot;,&quot;selectedPos&quot;,selectedPosition);
	if(selectedPosition != 1)
	{
		dynRemove(listStrings, selectedPosition);
		dynInsertAt(listStrings, selectedString, selectedPosition - 1);
	  setValue(&quot;list&quot;,&quot;items&quot;,listStrings);
	  setValue(&quot;list&quot;,&quot;selectedText&quot;,selectedString);
	}	
}]]></script>
   </events>
  </shape>
  <shape Name="PRIMITIVE_TEXT1" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">10 10</prop>
    <prop name="Size">296 26</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Alarm Screen Groups Order</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
 </shapes>
</panel>
