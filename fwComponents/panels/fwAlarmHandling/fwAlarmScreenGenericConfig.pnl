<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8"></prop>
  </prop>
  <prop name="Size">760 585</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwAlarmHandling/fwAlarmHandling.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmHandlingScreen.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmHandlingScreenGroups.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmScreen.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmScreenGeneric.ctl&quot;

const string CONFIG_REF_PANEL = &quot;CONFIG_REF&quot;;

string sActiveRef;

bool g_MenuRecall = FALSE;

bool bFirstUserCallback = true;

initialize()
{
  menuTable.gridType(0);
  menuTable.tableMode(TABLE_SELECT_BROWSE);
  menuTable.selectByClick(TABLE_SELECT_LINE);
    
  fwAlarmScreenGenericAlarmClass.text($sAlarmClass);
  
  g_MenuRecall = TRUE;
  
  int iParamIndex = 0;
  while (1)
  {
    if (isDollarDefined(&quot;$&quot; + iParamIndex))
    {
      string sDollarParam = getDollarValue(&quot;$&quot; + iParamIndex);
      
      dyn_string dsDollarParamElements = strsplit(sDollarParam, FWALARMSCREEN_GENERIC_CONFIGURATION_PANEL_SEPARATOR);
      
      string sPanelFile = dsDollarParamElements[1];
      string sPanelTitle = dsDollarParamElements[2];

      sActiveRef = CONFIG_REF_PANEL + iParamIndex;
      
      menuTable.appendLine(&quot;item&quot;, sPanelTitle, &quot;ref&quot;, sActiveRef);
      dyn_string dsPanelDollarParams;
      
      for (int i = 3 ; i &lt;= dynlen(dsDollarParamElements) ; i++)
      {
        dynAppend(dsPanelDollarParams, dsDollarParamElements[i]);
      }      
      addSymbol(myModuleName(), myPanelName(), sPanelFile, sActiveRef, dsPanelDollarParams, 250, 40, 0, 1, 1);
      
      setValue(CONFIG_REF_PANEL + iParamIndex, &quot;position&quot;, -3000, -3000);      
    }
    else
    {
      break;
    } 
 
    iParamIndex++;   
  }

  showPanel(0, &quot;&quot;);
  
  g_MenuRecall = FALSE;
  
  
  if(isFunctionDefined(&quot;fwAccessControl_setupPanel&quot;)) // i.e. if access control is installed
  {
    dyn_string dsExceptions;
    fwAccessControl_setupPanel(&quot;userCallBack&quot;, dsExceptions);
  }
  
}

showPanel()
{
  int row, column;
  
  getValue(&quot;menuTable&quot;, &quot;currentCell&quot;, row, column);

  if(row &gt;= 0)
  {
    setValue(sActiveRef, &quot;position&quot;, -3000, -3000);
  
    sActiveRef = menuTable.cellValueRC(row, &quot;ref&quot;);
    contentFrame.text(menuTable.cellValueRC(row, &quot;item&quot;));
  
    setValue(sActiveRef, &quot;position&quot;, 250, 40);
  }
}

// Close the panel if the user changes
void userCallBack(string sDp, string sValue)
{
  if (!bFirstUserCallback)
  {
    PanelOff();
  }
  
  bFirstUserCallback = false;
}

]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{   
  initialize();
}]]></script>
 </events>
 <shapes>
  <shape Name="backgroundRectangle" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">-0.9999999999999999 -1</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">FwCorporateColor</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">-1 -1</prop>
    <prop name="Size">862 31</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="title" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 4</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">white</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">10 4</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Alarm Screen Settings</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="menuTable" shapeType="TABLE" layerId="0">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 40</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,16,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 40</prop>
    <prop name="Size">230 500</prop>
    <prop name="ShowColumnHeader">False</prop>
    <prop name="ShowRowHeader">False</prop>
    <prop name="SortOnClick">True</prop>
    <prop name="RowHeight">40</prop>
    <prop name="RowHeaderWidth">10</prop>
    <prop name="GridType">Cross</prop>
    <prop name="VScrollBarMode">AlwaysOff</prop>
    <prop name="HScrollBarMode">AlwaysOff</prop>
    <prop name="Column">
     <prop name="Name">item</prop>
     <prop name="Width">230</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
      <prop name="en_US.utf8">item</prop>
     </prop>
     <prop name="ToolTipText">
      <prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">ref</prop>
     <prop name="Width">228</prop>
     <prop name="Visible">False</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
      <prop name="en_US.utf8">item</prop>
     </prop>
     <prop name="ToolTipText">
      <prop name="en_US.utf8"></prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="SelectionChanged" isEscaped="1"><![CDATA[synchronized main()
{
  if(g_MenuRecall == FALSE)
  {    
    showPanel();
  }
}]]></script>
   </events>
  </shape>
  <shape Name="contentFrame" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">3</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 316</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">0.8316666666666668 0 0 1.782142857142857 241.6833333333334 -22.375</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Content title</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 35</prop>
    <prop name="Size">601 281</prop>
   </properties>
  </shape>
  <shape Name="closeButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">935 530</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">4</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Close and discard unsaved changes</prop>
    </prop>
    <prop name="Hotkey">Esc</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">675 550</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="fwAlarmScreenGenericAlarmClass" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">6</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">670 40</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">black</prop>
    <prop name="BackColor">red</prop>
    <prop name="TabOrder">6</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">600 0</prop>
    <prop name="Size">23 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <reference parentSerial="-1" Name="PANEL_REF0" referenceId="0">
   <properties>
    <prop name="FileName">objects/fwGeneral/fwHelpButton.pnl</prop>
    <prop name="Location">600 130</prop>
    <prop name="Geometry">1 0 0 1 125 -128</prop>
    <prop name="TabOrder">7</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sPanelRelativePath</prop>
      <prop name="Value">fwAlarmHandling/fwAlarmHandlingScreenOptions</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
 </shapes>
</panel>
