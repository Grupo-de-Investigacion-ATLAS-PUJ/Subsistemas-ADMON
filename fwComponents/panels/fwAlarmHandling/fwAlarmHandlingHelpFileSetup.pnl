<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8"></prop>
  </prop>
  <prop name="Size">628 520</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwAlarmHandling/fwAlarmHandling.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmHandlingScreen.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmHandlingScreenGroups.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmScreen.ctl&quot;
#uses &quot;fwAlarmHandling/fwAlarmScreenGeneric.ctl&quot;

dyn_string windowsCommands, linuxCommands;

apply(dyn_string &amp;exceptionInfo)
{
  dyn_string fileExtensions, windowsCommands, linuxCommands;
  
  fileExtensions = helpTypes.getColumnN(0);
  windowsCommands = helpTypes.getColumnN(1);
  linuxCommands = helpTypes.getColumnN(2);
  
  for(int i=1; i&lt;=dynlen(windowsCommands); i++)
    if(windowsCommands[i] == &quot;(default)&quot;)
      windowsCommands[i] = &quot;&quot;;
  
  for(int i=1; i&lt;=dynlen(linuxCommands); i++)
    if(linuxCommands[i] == &quot;(default)&quot;)
      linuxCommands[i] = &quot;&quot;;

  fwAlarmHandling_setHelpFileFormats(fileExtensions, windowsCommands, linuxCommands, exceptionInfo); 
}

editLine()
{
  string windows, linux;
  dyn_int selection;
  dyn_float returnFloats;
  dyn_string returnStrings;
  dyn_anytype tableRow;
  
  selection = helpTypes.getSelectedLines();
  if(dynlen(selection) &gt; 0)
  {
    tableRow = helpTypes.getLineN(selection[1]);
    if(tableRow[2] == &quot;(default)&quot;)
      tableRow[2] = &quot;&quot;;
    if(tableRow[3] == &quot;(default)&quot;)
      tableRow[3] = &quot;&quot;;
    
    ChildPanelOnCentralReturn(&quot;fwAlarmHandling/fwAlarmHandlingHelpFileType.pnl&quot;, &quot;Configure Help File Extension Type&quot;,
                              makeDynString(&quot;$sFileExtension:&quot; + tableRow[1],
                                            &quot;$sWindowsCommand:&quot; + tableRow[2],
                                            &quot;$sLinuxCommand:&quot; + tableRow[3]),
                              returnFloats, returnStrings);
    if(strtolower(returnStrings[1]) == &quot;ok&quot;)
    {
      windows = returnStrings[3]==&quot;&quot;?&quot;(default)&quot;:returnStrings[3];
      linux = returnStrings[4]==&quot;&quot;?&quot;(default)&quot;:returnStrings[4];
    
      helpTypes.cellValueRC(selection[1], &quot;fileExtension&quot;, returnStrings[2]);
      helpTypes.cellValueRC(selection[1], &quot;windowsCommand&quot;, windows);
      helpTypes.cellValueRC(selection[1], &quot;linuxCommand&quot;, linux);
    }
  }  
}]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  string defaultCommandWindows, defaultCommandLinux;
  dyn_string fileExtensions, exceptionInfo;
 
  dpGet(&quot;fwGeneral.help.helpBrowserCommandWindows&quot;, defaultCommandWindows,
	&quot;fwGeneral.help.helpBrowserCommandLinux&quot;, defaultCommandLinux);
  defaultWindows.text = defaultCommandWindows;
  defaultLinux.text = defaultCommandLinux; 
  
  fwAlarmHandling_getHelpFileFormats(fileExtensions, windowsCommands, linuxCommands, exceptionInfo);
  
  for(int i=1; i&lt;=dynlen(windowsCommands); i++)
    if(windowsCommands[i] == &quot;&quot;)
      windowsCommands[i] = &quot;(default)&quot;;
  
  for(int i=1; i&lt;=dynlen(linuxCommands); i++)
    if(linuxCommands[i] == &quot;&quot;)
      linuxCommands[i] = &quot;(default)&quot;;

  helpTypes.deleteAllLines;
  helpTypes.appendLines(dynlen(fileExtensions), &quot;fileExtension&quot;, fileExtensions,
                        &quot;windowsCommand&quot;, windowsCommands, &quot;linuxCommand&quot;, linuxCommands);
  
  helpTypes.tableMode(TABLE_SELECT_BROWSE);
  helpTypes.selectByClick(TABLE_SELECT_LINE);
}]]></script>
 </events>
 <shapes>
  <shape Name="Text1" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 12</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Alarm Help File Types

</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="defaultWindows" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">3</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">857.205955334987 432</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">5</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">92.9999999999999 397</prop>
    <prop name="Size">486 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="defaultLinux" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">857.205955334987 464</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">92.9999999999999 429</prop>
    <prop name="Size">486 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="FRAME1" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">11</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">220 63</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">{0,0,0}</prop>
    <prop name="TabOrder">20</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,0]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.35714285714286 0 0 1 -278.571428571429 307</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">System default commands</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">220 63</prop>
    <prop name="Size">421 98</prop>
   </properties>
  </shape>
  <shape Name="PRIMITIVE_TEXT1" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1301 630</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">22</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">29.9999999999999 402</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Windows:</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="PRIMITIVE_TEXT2" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1301 660</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">24</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">29.9999999999999 432</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Linux:</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="helpTypes" shapeType="TABLE" layerId="0">
   <properties>
    <prop name="serialId">19</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 50</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">34</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">20 50</prop>
    <prop name="Size">571 271</prop>
    <prop name="ShowColumnHeader">True</prop>
    <prop name="ShowRowHeader">False</prop>
    <prop name="SortOnClick">True</prop>
    <prop name="RowHeight">16</prop>
    <prop name="RowHeaderWidth">10</prop>
    <prop name="GridType">Cross</prop>
    <prop name="VScrollBarMode">Auto</prop>
    <prop name="HScrollBarMode">Auto</prop>
    <prop name="Column">
     <prop name="Name">fileExtension</prop>
     <prop name="Width">50</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
      <prop name="en_US.utf8">Type</prop>
     </prop>
     <prop name="ToolTipText">
      <prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">windowsCommand</prop>
     <prop name="Width">250</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
      <prop name="en_US.utf8">Windows Open Command</prop>
     </prop>
     <prop name="ToolTipText">
      <prop name="en_US.utf8"></prop>
     </prop>
    </prop>
    <prop name="Column">
     <prop name="Name">linuxCommand</prop>
     <prop name="Width">250</prop>
     <prop name="Visible">True</prop>
     <prop name="Editable">False</prop>
     <prop name="Label">
      <prop name="en_US.utf8">Linux Open Command</prop>
     </prop>
     <prop name="ToolTipText">
      <prop name="en_US.utf8"></prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="DoubleClicked" isEscaped="1"><![CDATA[main(int row, string column)
{
  editLine();
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">20</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">300 330</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">35</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">300 330</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Add...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  string windows, linux;
  dyn_float returnFloats;
  dyn_string returnStrings;
  
  ChildPanelOnCentralReturn(&quot;fwAlarmHandling/fwAlarmHandlingHelpFileType.pnl&quot;, &quot;Add New Help File Extension Type&quot;,
                            makeDynString(&quot;$sFileExtension:&quot;, &quot;$sWindowsCommand:&quot;, &quot;$sLinuxCommand:&quot;),
                            returnFloats, returnStrings);
  
  if(strtolower(returnStrings[1]) == &quot;ok&quot;)
  {
    windows = returnStrings[3]==&quot;&quot;?&quot;(default)&quot;:returnStrings[3];
    linux = returnStrings[4]==&quot;&quot;?&quot;(default)&quot;:returnStrings[4];
    
    helpTypes.appendLine(&quot;fileExtension&quot;, returnStrings[2],
                         &quot;windowsCommand&quot;, windows,
                         &quot;linuxCommand&quot;, linux);
  }
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON2" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">21</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">400 330</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">37</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">400 330</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Edit...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  editLine();
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">500 330</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">39</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">500 330</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Remove...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  string windows, linux;
  dyn_int selection;
  dyn_float returnFloats;
  dyn_string returnStrings;
  dyn_anytype tableRow;
  
  selection = helpTypes.getSelectedLines();
  if(dynlen(selection) &gt; 0)
  {
    tableRow = helpTypes.getLineN(selection[1]);
    
    ChildPanelOnCentralReturn(&quot;fwGeneral/fwOkCancel.pnl&quot;, &quot;Delete Help File Type...&quot;,
                              makeDynString(&quot;$text:Are you sure you want to delete the entry for \&quot;&quot; +
                                            tableRow[1] + &quot;\&quot; help file types?&quot;),
                              returnFloats, returnStrings);

    if(strtolower(returnStrings[1]) == &quot;ok&quot;)
    {
      helpTypes.deleteLineN(selection[1]);
    }
  }  
}]]></script>
   </events>
  </shape>
  <shape Name="moveUp" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">23</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">600 270</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">41</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">600 270</prop>
    <prop name="Size">17 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">up.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  dyn_int selection;
  dyn_anytype tableRow;
  
  selection = helpTypes.getSelectedLines();
  if(dynlen(selection) &gt; 0)
  {
    if(selection[1] == 0)
      return;
    
    tableRow = helpTypes.getLineN(selection[1]);
    helpTypes.deleteLineN(selection[1]);
    helpTypes.insertLineN(selection[1]-1);
    helpTypes.cellValueRC(selection[1]-1, &quot;fileExtension&quot;, tableRow[1]);
    helpTypes.cellValueRC(selection[1]-1, &quot;windowsCommand&quot;, tableRow[2]);
    helpTypes.cellValueRC(selection[1]-1, &quot;linuxCommand&quot;, tableRow[3]);
    helpTypes.selectLineN(selection[1]-1);
  }
}]]></script>
   </events>
  </shape>
  <shape Name="moveDown" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">24</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">600 300</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">43</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">600 300</prop>
    <prop name="Size">17 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">down.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  dyn_int selection;
  dyn_anytype tableRow;
  
  selection = helpTypes.getSelectedLines();
  if(dynlen(selection) &gt; 0)
  {
    if(selection[1] &gt;= (helpTypes.lineCount - 1))
      return;
    
    tableRow = helpTypes.getLineN(selection[1]);
    helpTypes.deleteLineN(selection[1]);
    helpTypes.insertLineN(selection[1]+1);
    helpTypes.cellValueRC(selection[1]+1, &quot;fileExtension&quot;, tableRow[1]);
    helpTypes.cellValueRC(selection[1]+1, &quot;windowsCommand&quot;, tableRow[2]);
    helpTypes.cellValueRC(selection[1]+1, &quot;linuxCommand&quot;, tableRow[3]);
    helpTypes.selectLineN(selection[1]+1);
  }
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON4" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">25</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">500 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">45</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">500 480</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Cancel</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON5" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">26</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">300 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">47</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">300 480</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">OK</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  dyn_string exceptionInfo;
  apply(exceptionInfo);
  if(dynlen(exceptionInfo)&gt;0)
    fwExceptionHandling_display(exceptionInfo);
  else
    PanelOff();
}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON6" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">27</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">400 480</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">49</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">400 480</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Apply</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  dyn_string exceptionInfo;
  apply(exceptionInfo);
  if(dynlen(exceptionInfo)&gt;0)
    fwExceptionHandling_display(exceptionInfo);
}]]></script>
   </events>
  </shape>
  <shape Name="PRIMITIVE_TEXT3" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">28</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">280 337</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">50</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">280 337</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">NOTE: $1 is replaced with the help file name</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
  </shape>
 </shapes>
</panel>
