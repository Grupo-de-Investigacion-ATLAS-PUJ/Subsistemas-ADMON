<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
   <prop name="en_US.iso88591">(NoName)</prop>
  </prop>
  <prop name="Size">685 450</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">30 120</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwConfigs/fwAlertConfig.ctl&quot;
/**
  Adjust access to the panel's functionalities depending on summary alarm existence. 
  Don't allow users to make changes if no summary alarm exists.
  
@param [in] bSummaryExists   bool, summary alarm exists
*/
void enableControls(bool bSummaryExists)
{
	allAlerts.enabled(bSummaryExists);
	applyButton.enabled(bSummaryExists);
	children.enabled(bSummaryExists);
	childrenInAs.enabled(bSummaryExists);
	deleteBtn.enabled(bSummaryExists);
	left.enabled(bSummaryExists);
	remAll.enabled(bSummaryExists);
	right.enabled(bSummaryExists);
  
  create.enabled(!bSummaryExists);
}

// ------------------------------------------------------------------------------------------------

/**
  Adjust action buttons depending on the context the panel is opened from.
  
@param [in] bEmbeddedPanel   bool, panel is embedded or stand-alone
*/
void showCloseButton(bool bEmbeddedPanel)
{
  if(bEmbeddedPanel)
	{
		closeButton.visible = FALSE;
    positionApplyButton();
	}
	else
	{
		closeButton.visible = TRUE;
	}
}

// ------------------------------------------------------------------------------------------------

/**
  Re-positioning of some buttons is necessary depending on the context the panel is opened from.
*/
void positionApplyButton()
{
  int xPos, yPos;

  getValue(&quot;applyButton&quot;, &quot;position&quot;, xPos, yPos);
  applyButton.position(xPos+82, yPos);
}

// ------------------------------------------------------------------------------------------------

/**
  Show the graphical elements for configuration only if a summary alarm has been created.
  
@param [in] bVisible         bool, show elements
*/
showConfigElements(bool bVisible)
{
  summaryAlarmFrame.visible(bVisible);
  availableAlarmsLabel.visible(bVisible);
  includedAlarmsLabel.visible(bVisible);
  children.visible(bVisible);
  childrenInAs.visible(bVisible);
  left.visible(bVisible);
  right.visible(bVisible);
  allAlerts.visible(bVisible);
  remAll.visible(bVisible);
  
  noAlarmBg.visible(!bVisible);
  noAlarmText.visible(!bVisible);
  
  enableControls(bVisible);
}

// --------------------------------- End of ScopeLib ----------------------------------------------

]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  bool configExists, isActive;
  int i, configType, index;
  string deviceModel, alertPanel, alertHelp;
  dyn_mixed configTypes;
  dyn_int alertLimits;
  dyn_string list, dpesToCheck, currentSummaryList, newSummaryList, childAlertList, exceptionInfo,
              alertTexts, alertClasses, alertPanelParams; 
   
  if(!fwAlertConfig_isAlertFilteringActive())
  {
    filterThreshold.text = 0;
  }
  else
  {
    filterThreshold.visible = TRUE;
    filterThresholdTitle.visible = TRUE;
  }

  fwAlertConfig_get($sDpName, configExists, configType, alertTexts, alertLimits, alertClasses,
                      currentSummaryList, alertPanel, alertPanelParams, alertHelp, isActive, exceptionInfo);

  showConfigElements(configType == DPCONFIG_SUM_ALERT);

	fwDevice_getModel(makeDynString($sDpName), deviceModel, exceptionInfo);
	fwDevice_getAlertElements(dpTypeName($sDpName), list, exceptionInfo, deviceModel);

	// remove root element if it is there
	index = dynContains(list, &quot;.&quot;);
	if(index &gt; 0)
		dynRemove(list, index);		

  for (i = 1; i &lt;= dynlen(list); i++)
    dynAppend(dpesToCheck, $sDpName + list[i]);

  fwDevice_getChildren($sDpName, fwDevice_HARDWARE, list, exceptionInfo);
  for (i = 1; i &lt;= dynlen(list); i++)
    dynAppend(dpesToCheck, list[i] + &quot;.&quot;);

  _fwConfigs_getConfigTypeAttribute(dpesToCheck, fwConfigs_PVSS_ALERT_HDL, configTypes, exceptionInfo);

  for (i = 1; i &lt;= dynlen(dpesToCheck); i++)
  {
    if(configTypes[i] != DPCONFIG_NONE)
      dynAppend(childAlertList, dpesToCheck[i]);
  }

	// check which elements are already contained in the summary
	for (i = 1; i &lt;= dynlen(childAlertList); i++)
	{
		if (dynContains(currentSummaryList, childAlertList[i]) &lt; 1)
			dynAppend(newSummaryList, childAlertList[i]);
	}		

  if(isDollarDefined(&quot;$bHierarchyBrowser&quot;))
	{
    showCloseButton($bHierarchyBrowser);
  }
    
  dpNameEntry.text = $sDpName;
   
  children.items = newSummaryList;
  childrenInAs.items = currentSummaryList;
  
  if(configExists) 
  {
    filterThreshold.text = alertLimits[1];
  }
  
  alertActive.state(0) = isActive;
}
]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="bgRectangle" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">38</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 530</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">FwCorporateColor</prop>
    <prop name="TabOrder">34</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">-1 -1</prop>
    <prop name="Size">1270 31</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="title" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">8 82</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">white</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">10 4</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Summary Alarm Configuration</prop>
     <prop name="en_US.iso88591">Summary Alarm Configuration</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="availableAlarmsLabel" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">24</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">18 123</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">24</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">20 125</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Available alarms:</prop>
     <prop name="en_US.iso88591">Available alarms:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="includedAlarmsLabel" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">25</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">380 123</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">25</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">382 125</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Included alarms:</prop>
     <prop name="en_US.iso88591">Included alarms:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="dpNameEntry" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">152 86</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Device name</prop>
     <prop name="en_US.iso88591">Device name</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 40</prop>
    <prop name="Size">665 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="children" shapeType="SELECTION_LIST" layerId="0">
   <properties>
    <prop name="serialId">7</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">21 140</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">21 145</prop>
    <prop name="Size">281 249</prop>
    <prop name="Listitems"/>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
  </shape>
  <shape Name="childrenInAs" shapeType="SELECTION_LIST" layerId="0">
   <properties>
    <prop name="serialId">8</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">381 140</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">382 145</prop>
    <prop name="Size">281 249</prop>
    <prop name="Listitems"/>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
  </shape>
  <shape Name="left" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">312 226</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">322 329</prop>
    <prop name="Size">40 40</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">StandardIcons/arrow_single_left_20.png</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	int pos;
	string temp;

	pos = childrenInAs.selectedPos();
	temp = childrenInAs.selectedText();
	if (temp != &quot;&quot;)
	{
		children.appendItem(temp);
		childrenInAs.deletePos(pos);		
		childrenInAs.selectedPos(1);
	}
}]]></script>
   </events>
  </shape>
  <shape Name="right" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">11</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">592 297</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">322 169</prop>
    <prop name="Size">40 40</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">StandardIcons/arrow_single_right_20.png</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	int pos;
	string temp;

	pos = children.selectedPos();
	temp = children.selectedText();
	if (temp != &quot;&quot;)
	{
		children.deletePos(pos);
		children.selectedPos(1);
		childrenInAs.appendItem(temp);
	}
}]]></script>
   </events>
  </shape>
  <shape Name="create" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 73</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 73</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Create</prop>
     <prop name="en_US.iso88591">Create</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	fwAlertConfig_set($sDpName + &quot;.&quot;, DPCONFIG_SUM_ALERT, 	makeDynString(&quot;OK&quot;,&quot;Bad&quot;),
				              makeDynFloat(), makeDynString(), makeDynString(), &quot;&quot;,
                    makeDynString(), &quot;&quot;, exceptionInfo);                      
                     
  showConfigElements(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
}
]]></script>
   </events>
  </shape>
  <shape Name="deleteBtn" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">525 119</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">13</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">95 73</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Delete</prop>
     <prop name="en_US.iso88591">Delete</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo, temp;

	fwDevice_setAlert($sDpName, fwDevice_ALERT_SUMMARY_UNSET, exceptionInfo);	
	
  showConfigElements(FALSE);

	temp = children.items();
	dynAppend(temp, childrenInAs.items()); 
	children.items = temp;
	childrenInAs.deleteAllItems();
	
	if(dynlen(exceptionInfo) &gt; 0)
			fwExceptionHandling_display(exceptionInfo);
}

]]></script>
   </events>
  </shape>
  <shape Name="applyButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">20</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">518 415</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">20</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">518 415</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Apply</prop>
     <prop name="en_US.iso88591">Apply</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

  fwAlertConfig_deactivate($sDpName + &quot;.&quot;, exceptionInfo);  
  
	fwAlertConfig_set($sDpName + &quot;.&quot;,	DPCONFIG_SUM_ALERT,	// dpe
								makeDynString(&quot;OK&quot;,&quot;Bad&quot;),  // alertText,
            makeDynInt(filterThreshold.text), makeDynString(),
								childrenInAs.items(), 		// dpList, 
								&quot;&quot;, 						// alertPanel, 
            makeDynString(),			// alertPanelParameter,
            &quot;&quot;, 						// helpPanel,
            exceptionInfo);
  if(alertActive.state(0))
    fwAlertConfig_activate($sDpName + &quot;.&quot;, exceptionInfo);  

	if(dynlen(exceptionInfo) &gt; 0)
		fwExceptionHandling_display(exceptionInfo);

}                             ]]></script>
   </events>
  </shape>
  <shape Name="allAlerts" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">852 532</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">22</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">322 219</prop>
    <prop name="Size">40 40</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">StandardIcons/arrow_double_right_20.png</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string temp;

	temp = childrenInAs.items();
	dynAppend(temp, children.items()); 

	children.deleteAllItems();
	childrenInAs.items = temp;
}]]></script>
   </events>
  </shape>
  <shape Name="remAll" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">23</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1121 663</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">23</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">322 279</prop>
    <prop name="Size">40 40</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Image" SharedPixmap="1">
     <prop name="BackgroundPixmap">StandardIcons/arrow_double_left_20.png</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string temp;

	temp = children.items();
	dynAppend(temp, childrenInAs.items()); 
	
	children.items = temp;
	childrenInAs.deleteAllItems();
}]]></script>
   </events>
  </shape>
  <shape Name="closeButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">29</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">600 415</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">28</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">600 415</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Close</prop>
     <prop name="en_US.iso88591">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	PanelOff();
}]]></script>
   </events>
  </shape>
  <reference parentSerial="-1" Name="" referenceId="0">
   <properties>
    <prop name="FileName">objects/fwGeneral/fwHelpButton.pnl</prop>
    <prop name="Location">320 20</prop>
    <prop name="Geometry">1 0 0 1 330 -18</prop>
    <prop name="TabOrder">28</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sPanelRelativePath</prop>
      <prop name="Value">fwDevice/fwDeviceAlertSummaryConfig</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
  <shape Name="alarmHelpButton" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">31</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 401</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">29</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 415</prop>
    <prop name="Size">130 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Configure help ...</prop>
     <prop name="en_US.iso88591">Configure help ...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  ChildPanelOnCentralModal(&quot;fwAlarmHandling/fwAlarmHandlingHelpConfig.pnl&quot;, &quot;Alarm Help Configuration&quot;, &quot;$sDpe:&quot; + $sDpName + &quot;.&quot;);
}]]></script>
   </events>
  </shape>
  <shape Name="alertActive" shapeType="CHECK_BOX" layerId="0">
   <properties>
    <prop name="serialId">32</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">542 74</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">30</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">542 74</prop>
    <prop name="Size">131 20</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Alarm handling ON</prop>
       <prop name="en_US.iso88591">Alarm handling ON</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape Name="filterThreshold" shapeType="SPIN_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">34</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">417 83</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">32</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">457 73</prop>
    <prop name="Size">61 23</prop>
    <prop name="MinimumID">0</prop>
    <prop name="MaximumID">100</prop>
    <prop name="IncrAccelerator">1</prop>
    <prop name="Position">0</prop>
   </properties>
  </shape>
  <shape Name="filterThresholdTitle" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">36</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">362 77</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">33</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">362 77</prop>
    <prop name="Size">101 31</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Filter Threshold:</prop>
     <prop name="en_US.iso88591">Filter Threshold:</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="summaryAlarmFrame" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">39</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 102</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">{0,0,0}</prop>
    <prop name="TabOrder">35</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,0]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.006060606060606 0 0 0.9707792207792207 -0.06060606060606233 5.98051948051949</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Summary alarm</prop>
     <prop name="en_US.iso88591">Summary alarm</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 102</prop>
    <prop name="Size">661 309</prop>
   </properties>
  </shape>
  <shape Name="noAlarmBg" shapeType="RECTANGLE" layerId="1">
   <properties>
    <prop name="serialId">40</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">8 48</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">lightgrey</prop>
    <prop name="TabOrder">36</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">10 110</prop>
    <prop name="Size">665 54</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="noAlarmText" shapeType="PRIMITIVE_TEXT" layerId="1">
   <properties>
    <prop name="serialId">41</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">341 124</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">37</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">343 126</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">No summary alarm existent.</prop>
     <prop name="en_US.iso88591">No summary alarm existent.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
 </shapes>
</panel>
