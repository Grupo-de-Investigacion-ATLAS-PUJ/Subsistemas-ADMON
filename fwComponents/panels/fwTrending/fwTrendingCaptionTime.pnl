<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
   <prop name="en_US.iso88591">(NoName)</prop>
  </prop>
  <prop name="Size">120 37</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">10 10</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="StartZoomPoint">0 0</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwTrending/fwTrending.ctl&quot;
#uses &quot;fwTrending/fwTrendingTree.ctl&quot;]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape layerId="0" Name="currentTime" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">11 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">FwTrendingFaceplateForeground</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">11 10</prop>
    <prop name="Size">91 18</prop>
    <prop name="BorderStyle">None</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
  unsigned updateRate;
  string symbolName, sDpeName;
  shape standardTrend;
        
  symbolName    = &quot;trend.&quot;;
  standardTrend = getShape($sRefName + symbolName + &quot;standardTrend&quot;);
  sDpeName      = &quot;TrendingConfiguration.captionTimeUpdateRate&quot;;
	  
  if( (sDpeName != &quot;&quot;) &amp;&amp; (dpExists(sDpeName)) )
  {
    dpGet(sDpeName, updateRate);
    if(updateRate == 0)
      updateRate = 5;
	
    while(!standardTrend.visible)
    {
      delay(0,fwTrending_REFRESH_DELAY);
    }

    while(1)
    {
      if(shapeExists(&quot;curveTime&quot;+2))
      {
        panel_checkTime(standardTrend);
        this.backCol = standardTrend.backCol;
        this.foreCol = standardTrend.foreCol;
      }
      delay(updateRate);
    }
  }
  else
  {
    DebugTN(&quot;Error in &quot; + myPanelName() + &quot;-&gt; main() , DPE &quot; + sDpeName + &quot;, doesn't exist&quot;);
    return;
  }
}


panel_checkTime(shape standardTrend)
{
  int i, len, iNumLines;
  string sTime,sFormat1,sFormat2;
  dyn_string dsTime;
  
  for(i=1;i&lt;=8;i++) {
    if(i==1) { // particular case curveTime1 is curveTime
      sTime = curveTime.text();
    }
    else {
      getValue(&quot;curveTime&quot;+i, &quot;text&quot;, sTime);
    }
    int iTime;
    time tTime;
    tTime = sTime;
    
    if(sTime != &quot;&quot;){ // if time is &quot;&quot; --&gt; curve not assigned or error
      dynAppend(dsTime, sTime); 
    }
  } 
  dynUnique(dsTime);
  
  // one time --&gt; all curve stopped, current time = the time
  // case one curve -&gt; always in stopped mode
  if(dynlen(dsTime) == 1) // all curve stopped, current time = the time
    this.text = dsTime[1];
  else // use current time
  {
    getValue(standardTrend,&quot;timeFormat&quot;,0,iNumLines,sFormat1,sFormat2);
    this.text = formatTime(sFormat1 + &quot; &quot; +sFormat2, getCurrentTime(), &quot;.%03d&quot;);
  }  
}






]]></script>
   </events>
  </shape>
 </shapes>
</panel>
