<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">PlotConfPanel</prop>
   <prop name="en_US.iso88591">PlotConfPanel</prop>
  </prop>
  <prop name="Size">971 599</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwTrending/fwTrending.ctl&quot;
#uses &quot;fwTrending/fwTrendingTree.ctl&quot;

global string plotName, Command;
int tableRowSelected;
string customDPSelector;
dyn_string exceptionInfo;

string g_AccessRightsRequired = &quot;&quot;;
const string g_DefaultRangeValue = &quot;0.00&quot;;


setAutoIfLimitsOn(string sWidgetName) {
  bool bState;
  string toolTip;
  int iWidgetindex = substr(sWidgetName,strlen(sWidgetName)-1,1);
  getValue(sWidgetName,&quot;state&quot;,0,bState);
  /*
  if(bState)
  {
     setValue(&quot;AutoRangeCheckButton&quot;+iWidgetindex,&quot;state&quot;,0,true);
     autoRangeCheckButtonClick(iWidgetindex, true);
  } 
  toolTip = bState?&quot;Enabled only if Limits disabled&quot;:&quot;&quot;;
  setValue(&quot;AutoRangeCheckButton&quot;+iWidgetindex,&quot;toolTipText&quot;,toolTip);
  setValue(&quot;RangeMinTextField&quot;+iWidgetindex,&quot;toolTipText&quot;,toolTip);
  setValue(&quot;RangeMaxTextField&quot;+iWidgetindex,&quot;toolTipText&quot;,toolTip);
  
  setValue(&quot;AutoRangeCheckButton&quot;+iWidgetindex,&quot;enabled&quot;,!bState);
  setValue(&quot;RangeMinTextField&quot;+iWidgetindex,&quot;enabled&quot;,!bState);
  setValue(&quot;RangeMaxTextField&quot;+iWidgetindex,&quot;enabled&quot;,!bState);*/
}

checkHasSaveRights(string dp, string user) {
  bool isAllowed=TRUE;
  dyn_string exceptionInfo;

  if(Command != &quot;onlineedit&quot;) {
    isAllowed = true;
  }
  else if(g_AccessRightsRequired!=&quot;&quot;) {
    fwAccessControl_isGranted(g_AccessRightsRequired, isAllowed, exceptionInfo);
  }

  ButtonOK.enabled = (isAllowed || (Command == &quot;onlineedit&quot;));
  ButtonApply.enabled = isAllowed;
  saveAsButton.enabled = isAllowed;
  archiveButtonGroup.enabled = isAllowed;
}





fwShowAcOptions(bool bShouldShow) 
{
  setMultiValue(&quot;saveRights&quot;,          &quot;visible&quot;, bShouldShow,
                &quot;saveRightsText&quot;,      &quot;visible&quot;, bShouldShow,
                &quot;saveRightsSelect&quot;,    &quot;visible&quot;, bShouldShow,
                &quot;accessControlOn&quot;,     &quot;visible&quot;, bShouldShow,
                &quot;accessControlOnText&quot;, &quot;visible&quot;, bShouldShow);

}





fwEnableAcOptions(bool bShouldEnable) 
{
  setMultiValue(&quot;saveRights&quot;,       &quot;enabled&quot;, bShouldEnable,
                &quot;saveRightsSelect&quot;, &quot;enabled&quot;, bShouldEnable);

}





bool lighter(string _color, int _than) {
  dyn_int colVals;
  dyn_string colors;
  int i, j;

  // stupid fallback, in case of named color
  if(strlen(_color) &lt; 7 || _color[0] != '{') {
    return TRUE;
  }
  
  _color = strltrim(_color, &quot;{&quot;);
  _color = strrtrim(_color, &quot;}&quot;);
  colors = strsplit(_color, &quot;,&quot;);
  
  for(i = 1; i &lt;= 3; i++) {
    for(j = 0; j &lt; strlen(colors[i]); j++) {
      switch (colors[i][j]) {
        case '0': colVals[i] = colVals[i] * 10; break;
        case '1': colVals[i] = colVals[i] * 10 + 1; break;
        case '2': colVals[i] = colVals[i] * 10 + 2; break;
        case '3': colVals[i] = colVals[i] * 10 + 3; break;
        case '4': colVals[i] = colVals[i] * 10 + 4; break;
        case '5': colVals[i] = colVals[i] * 10 + 5; break;
        case '6': colVals[i] = colVals[i] * 10 + 6; break;
        case '7': colVals[i] = colVals[i] * 10 + 7; break;
        case '8': colVals[i] = colVals[i] * 10 + 8; break;
        case '9': colVals[i] = colVals[i] * 10 + 9; break;
      }
    }
  }
  if(colVals[1] + colVals[2] + colVals[3] &gt; _than) {
    return TRUE;
  } else {
    return FALSE;
  }
}

void archiveCheckButtonUpdate(int _num, string _dpe) {
  int archive;
  string dpe, unit, comment;
  fwTrending_getPlotDataDpeData(_dpe, dpe, unit, comment);
  if(isFunctionDefined(&quot;unGenericDpFunctions_convert_UNICOSDPE_to_PVSSDPE&quot;)) {
    if(fwTrending_isDpName(dpe))
    {
      unGenericDpFunctions_convert_UNICOSDPE_to_PVSSDPE(dpe, dpe);
    }
  }

  if( (dpe != &quot;&quot;) &amp;&amp; (dpExists(dpe + &quot;:_archive.._type&quot;)) )
  {
    dpGet(dpe + &quot;:_archive.._type&quot;, archive);  
    if(archive != DPCONFIG_NONE) {
      setValue(&quot;ArchiveCheckButton&quot; + _num, &quot;state&quot;, 0, TRUE);
    } else {
      setValue(&quot;ArchiveCheckButton&quot; + _num, &quot;state&quot;, 0, FALSE);
    }
  } 
  else 
  {
    setValue(&quot;ArchiveCheckButton&quot; + _num, &quot;state&quot;, 0, FALSE);
  }
}

void dpeTextFieldCommand(int _num) {
  string dpe, _dpe, unit, comment;
  int archive;
  float number;
  bool tempBool;
    
  _dpe = getDpeFromTextField(&quot;DPTextField&quot; + _num);
  fwTrending_getPlotDataDpeData(_dpe, dpe, unit, comment);
  fwTrending_checkCurveName(dpSubStr(dpe, DPSUB_DP), tempBool, exceptionInfo);
  
  if(tempBool) {
    setValue(&quot;DPTextField&quot; + _num, &quot;toolTipText&quot;, dpe);
    archiveCheckButtonUpdate(_num, dpe);
  } else {
    //check if it is a constant that needs to be plotted as line
    if(_fwTrending_isConstantLineValue(_dpe)) {
     number = _fwTrending_getConstantLineValue(_dpe);
      setValue(&quot;DPTextField&quot; + _num, &quot;toolTipText&quot;, number);
    } else {
      fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The entered dpe name is not legal&quot;, &quot;&quot;);
      fwExceptionHandling_display(exceptionInfo);
      setValue(&quot;DPTextField&quot; + _num, &quot;toolTipText&quot;, &quot;Illegal dpe name&quot;);  
      archiveCheckButtonUpdate(_num, &quot;NotExistingDatapointElement.&quot;);
    }
  }
  
  if(dynlen(exceptionInfo) &gt; 0) {
    fwExceptionHandling_display(exceptionInfo);
  }
}

void dpeButtonClick(int _num) {
  string dpe = &quot;&quot;, legend = &quot;&quot;, rangeMinMax = &quot;&quot;, cleanedDpe;
  float rangeMin, rangeMax;
  dyn_string ranges;
  int archive;
  
  if(customDPSelector != &quot;&quot;) {
    dyn_string ds; dyn_float df;
    ChildPanelOnCentralModalReturn(customDPSelector, &quot;DPE Selection&quot;, makeDynString(), df, ds);

    if(dynlen(ds) &gt;= 1) dpe = ds[1];
    if(dynlen(ds) &gt;= 2) legend = ds[2];
    if(dynlen(ds) &gt;= 3) rangeMinMax = ds[3];
    if(dpe != &quot;&quot;) 
    {
      cleanedDpe = fwTrending_cleanAliasRepresentation(dpe);
      setValue(&quot;DPTextField&quot; + _num, &quot;text&quot;, cleanedDpe);
      setValue(&quot;LegendTextField&quot; + _num, &quot;text&quot;, legend);
      ranges = strsplit(rangeMinMax, &quot;:&quot;);  
      
      if(dynlen(ranges) == 2) {
          setValue(&quot;RangeMinTextField&quot; + _num, &quot;text&quot;, ranges[1]);
          setValue(&quot;RangeMaxTextField&quot; + _num, &quot;text&quot;, ranges[2]);
      } else {     
          setValue(&quot;RangeMinTextField&quot; + _num, &quot;text&quot;, g_DefaultRangeValue);
          setValue(&quot;RangeMaxTextField&quot; + _num, &quot;text&quot;, g_DefaultRangeValue);
      }
      
      autoRangeCheckButtonUpdate(_num);
      archiveCheckButtonUpdate(_num, dpe);
    }
  } else {
    dpSelector(dpe, FALSE);

    if(dpe != &quot;&quot;) 
    {      
      cleanedDpe = fwTrending_cleanAliasRepresentation(dpe);
      setValue(&quot;DPTextField&quot; + _num, &quot;text&quot;, cleanedDpe);  
      archiveCheckButtonUpdate(_num, dpe);    
    }
  }
  
  legendTextFieldCommand(_num);
}

void legendTextFieldCommand(int _num) {
  string legend;
    getValue(&quot;LegendTextField&quot; + _num, &quot;text&quot;, legend);
    setValue(&quot;LegendTextField&quot; + _num, &quot;toolTipText&quot;, legend);
}

void colorButtonClick(int _num) {
  dyn_int pos;
  string color;
  
  getValue(&quot;ColorButton&quot; + _num, &quot;backCol&quot;, color);

  colorEditor(color);
  if(color != &quot;&quot;) {
    setValue(&quot;ColorButton&quot; + _num, &quot;backCol&quot;, color);
  }
}

void axisCheckButtonClick(int curveNum, bool _state) {
  setValue(&quot;axisOnCurve&quot; + curveNum, &quot;visible&quot;, _state);
  setValue(&quot;axisOffCurve&quot; + curveNum, &quot;visible&quot;, !_state);
  setValue(&quot;GlobalAxisIndividualButton&quot;, &quot;visible&quot;, TRUE);
  setValue(&quot;GlobalAxisHiddenButton&quot;, &quot;visible&quot;, FALSE);
  setValue(&quot;GlobalAxisVisibleButton&quot;, &quot;visible&quot;, FALSE);
}


void rangeMinTextFieldCommand(int _num) {
    autoRangeCheckButtonUpdate(_num);
}

void rangeMaxTextFieldCommand(int _num) {
    autoRangeCheckButtonUpdate(_num);
}

void autoRangeCheckButtonUpdate(int _num) {
  string min, max;
  getValue(&quot;RangeMinTextField&quot; + _num, &quot;text&quot;, min);
  getValue(&quot;RangeMaxTextField&quot; + _num, &quot;text&quot;, max);

  if((float)max &lt;= (float)min) {
    setValue(&quot;AutoRangeCheckButton&quot; + _num, &quot;state&quot;, 0, TRUE);
  } else {
    setValue(&quot;AutoRangeCheckButton&quot; + _num, &quot;state&quot;, 0, FALSE);
  }
}

void autoRangeCheckButtonClick(int _num, bool _state) {
  // fake function - actual job is done when closing the panel
  // by applying the changes
}

void visibleCheckButtonClick(int _num, bool _state) {
  if(!_state) {
    setValue(&quot;ckShowAlarmLimits&quot; + _num, &quot;state&quot;,0, _state);
  }
  setValue(&quot;ckShowAlarmLimits&quot; + _num, &quot;enabled&quot;, _state);
  setValue(&quot;curveVisible&quot; + _num, &quot;visible&quot;, _state);
  setValue(&quot;curveNotVisible&quot; + _num, &quot;visible&quot;, !_state);
  setValue(&quot;GlobalCurveIndividualButton&quot;, &quot;visible&quot;, TRUE);
  setValue(&quot;GlobalCurveHiddenButton&quot;, &quot;visible&quot;, FALSE);
  setValue(&quot;GlobalCurveVisibleButton&quot;, &quot;visible&quot;, FALSE);
}

void archiveCheckButtonInitialize(int _num) {
  string dpe;
  
  dpe = getDpeFromTextField(&quot;DPTextField&quot; + _num);
  archiveCheckButtonUpdate(_num, dpe);
}

void archiveButtonClick(int _num) {
  string _dpe;
  dyn_string ds; dyn_int di;
  int archive;
  string dpe, unit, comment;
  
  _dpe = getDpeFromTextField(&quot;DPTextField&quot; + _num);

  fwTrending_getPlotDataDpeData(_dpe, dpe, unit, comment);
  if((strpos(dpe, fwTrending_TEMPLATE_OPEN) &gt;= 0) &amp;&amp; 
      (strpos(dpe, fwTrending_TEMPLATE_CLOSE) &gt; 0)) {
    fwException_raise(exceptionInfo, &quot;ERROR&quot;,
      &quot;The archive config can not be viewed because &quot; + 
      &quot;the data point element contains template parameters, {}&quot;, &quot;&quot;);
    fwExceptionHandling_display(exceptionInfo);
  } else {
    if(isFunctionDefined(&quot;unGenericDpFunctions_convert_UNICOSDPE_to_PVSSDPE&quot;)) {
      if(fwTrending_isDpName(dpe))
      {
        unGenericDpFunctions_convert_UNICOSDPE_to_PVSSDPE(dpe, dpe);
      }
    }
  
    ChildPanelOnCentralReturn(  &quot;fwConfigs/fwArchiveConfigPopup.pnl&quot;, &quot;Archive Configuration for &quot; + dpe,
      makeDynString(  &quot;$sDpName:&quot; + dpSubStr(dpe, DPSUB_SYS_DP),
      // start 19/09/2008: Herve  
      // &quot;$sDpe:&quot; + dpSubStr(dpe, DPSUB_DP_EL)),
      &quot;$sDpe:&quot; + dpSubStr(dpe, DPSUB_SYS_DP_EL)),
      // end 19/09/2008: Herve
            di, ds);
    archiveCheckButtonUpdate(_num, dpe);
  }
}

void legendTextFieldFillByDP(int _num) {
  string dp;
  
  dp = getDpeFromTextField(&quot;DPTextField&quot; + _num);
  
  if(dpExists(dp)) {
    string legend, comment, legendText;
    getValue(&quot;LegendTextField&quot; + _num, &quot;text&quot;, legendText);
    legend = dpGetAlias(dp);
    legend += &quot;&quot; + dpGetComment(dp);
    
    if(legendText == &quot;&quot;) {
      setValue(&quot;LegendTextField&quot; + _num, &quot;text&quot;, legend);
    }
    
    legendTextFieldCommand(_num);
  } else if(_fwTrending_isConstantLineValue(dp)) {
    setValue(&quot;LegendTextField&quot; + _num, &quot;text&quot;, &quot;Constant line&quot;);    
    }
}

void timeRangeSet() {
  int timeRange, days, hours, minutes;
  
  days = daysSpinButton.text;
  hours = hoursSpinButton.text;
  minutes = minutesSpinButton.text;
  
  //sscanf(daysSpinButton.text, &quot;%d&quot;, days);
  //sscanf(hoursSpinButton.text, &quot;%d&quot;, hours);
  //sscanf(minutesSpinButton.text, &quot;%d&quot;, minutes);
  timeRange = days * 86400 + hours * 3600 + minutes * 60;
  dpSet(plotName + fwTrending_PLOT_TIME_RANGE + fwTrending_ORIG_VAL, timeRange);
}


enableManualScaleLimits(int curveNum, int selectedPos, string selectedText) {
    bool enabled = FALSE;

    if(--selectedPos == curveNum) {
        enabled = TRUE;    
    }
    
    if(selectedText == &quot;-&quot;) {
       enabled = TRUE;  
    }
    
    setValue(&quot;RangeMinTextField&quot; + curveNum, &quot;enabled&quot;, enabled);
    setValue(&quot;RangeMaxTextField&quot; + curveNum, &quot;enabled&quot;, enabled);
    setValue(&quot;AutoRangeCheckButton&quot; + curveNum, &quot;enabled&quot;, enabled);
    if(!enabled)
      setValue(&quot;AutoRangeCheckButton&quot; + curveNum, &quot;state&quot;, 0, !enabled);
}


changeCurveType(int curveNum, int selectedPos) {
/*  int type;
  dyn_int curveTypes;
  
  switch(selectedPos) 
  {
    case 1: 
      type = fwTrending_PLOT_TYPE_POINTS; 
      break;
    case 2: 
      type = fwTrending_PLOT_TYPE_LINEAR; 
      break;
    case 3: 
      type = fwTrending_PLOT_TYPE_STEPS; 
      break;
    default:
      break;
  }
  
  dpGet(plotName + fwTrending_CURVE_TYPES + fwTrending_ORIG_VAL, curveTypes);
  dynRemove(curveTypes, curveNum);
  dynInsertAt(curveTypes, type, curveNum);
  dpSet(plotName + fwTrending_PLOT_TYPE + fwTrending_ORIG_VAL, fwTrending_PLOT_TYPE_INDIVIDUAL);
  dpSet(plotName + fwTrending_CURVE_TYPES + fwTrending_ORIG_VAL, curveTypes);
*/  
}


enableIndividualCurveTypes(bool enabled) {
  curveTypeCombo1.enabled = enabled;
  curveTypeCombo2.enabled = enabled;
  curveTypeCombo3.enabled = enabled;
  curveTypeCombo4.enabled = enabled;
  curveTypeCombo5.enabled = enabled;
  curveTypeCombo6.enabled = enabled;
  curveTypeCombo7.enabled = enabled;
  curveTypeCombo8.enabled = enabled;
}

enableIndividualCurveVisibilities(bool enabled) {
  curveVisible1.enabled = enabled;
  curveVisible2.enabled = enabled;
  curveVisible3.enabled = enabled;
  curveVisible4.enabled = enabled;
  curveVisible5.enabled = enabled;
  curveVisible6.enabled = enabled;
  curveVisible7.enabled = enabled;
  curveVisible8.enabled = enabled;
  curveNotVisible1.enabled = enabled;
  curveNotVisible2.enabled = enabled;
  curveNotVisible3.enabled = enabled;
  curveNotVisible4.enabled = enabled;
  curveNotVisible5.enabled = enabled;
  curveNotVisible6.enabled = enabled;
  curveNotVisible7.enabled = enabled;
  curveNotVisible8.enabled = enabled;
}

visibleCheckButtonGlobal(int BUTTON) {
  int i;
  switch(BUTTON) {
    case 1:
    case 3:  
      for( i = 1; i &lt;= fwTrending_MAX_NUM_CURVES; i++)
        visibleCheckButtonClick(i, TRUE);
      setValue(&quot;GlobalCurveIndividualButton&quot;, &quot;visible&quot;, FALSE);
      setValue(&quot;GlobalCurveHiddenButton&quot;, &quot;visible&quot;, FALSE);
      setValue(&quot;GlobalCurveVisibleButton&quot;, &quot;visible&quot;, TRUE);
      break;  
    case 2:  
      for( i = 1; i &lt;= fwTrending_MAX_NUM_CURVES; i++)
        visibleCheckButtonClick(i, FALSE);
      setValue(&quot;GlobalCurveIndividualButton&quot;, &quot;visible&quot;, FALSE);
      setValue(&quot;GlobalCurveHiddenButton&quot;, &quot;visible&quot;, TRUE);
      setValue(&quot;GlobalCurveVisibleButton&quot;, &quot;visible&quot;, FALSE);
      break;  
  }
}

axisCheckButtonGlobal(int BUTTON) {
  int i;
  switch(BUTTON)
  {
    case 1:
    case 3:  
      for( i = 1; i &lt;= fwTrending_MAX_NUM_CURVES; i++)
        axisCheckButtonClick(i, TRUE);
      setValue(&quot;GlobalAxisIndividualButton&quot;, &quot;visible&quot;, FALSE);
      setValue(&quot;GlobalAxisHiddenButton&quot;, &quot;visible&quot;, FALSE);
      setValue(&quot;GlobalAxisVisibleButton&quot;, &quot;visible&quot;, TRUE);
      break;  
    case 2:  
      for( i = 1; i &lt;= fwTrending_MAX_NUM_CURVES; i++)
        axisCheckButtonClick(i, FALSE);
      setValue(&quot;GlobalAxisIndividualButton&quot;, &quot;visible&quot;, FALSE);
      setValue(&quot;GlobalAxisHiddenButton&quot;, &quot;visible&quot;, TRUE);
      setValue(&quot;GlobalAxisVisibleButton&quot;, &quot;visible&quot;, FALSE);
      break;  
  }
}  

string CheckInput(dyn_string &amp;exceptionInfo) {
  bool tempBool;
  string tempString, okStr = &quot;OK&quot;;

  tempString = TextFieldTitle.text;
  strreplace(tempString, fwTrending_TEMPLATE_OPEN, &quot;&quot;);
  strreplace(tempString, fwTrending_TEMPLATE_CLOSE, &quot;&quot;);

  if(!_fwTrending_isUnicosEnvironment(exceptionInfo)) {
    strreplace(tempString, &quot; &quot;, &quot;&quot;);
  }
  
  tempBool = dpIsLegalName(tempString);
  
   if((!tempBool) || (tempString == &quot;&quot;)) {
    fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The entered plot title is not legal&quot;, &quot;&quot;);
    okStr = &quot;NoReturn&quot;;
  }
  
  return okStr;
}






ReadInput(dyn_dyn_string &amp;plotData, dyn_string &amp;exceptionInfo) {
  bool tempBool;
  string tempString;
  int tempInt, i, selectedPos, markerType;
  dyn_string _dpesVal, _legendVal, _colorsVal, _rangeMinVal, _rangeMaxVal, _axiiXFormat;
  dyn_string _legendValFormat, _scaleValFormat;
  dyn_bool _axiiVal,_hiddenVal, _showAlarmLimits;
  dyn_int _curveTypes, _curveScalePos;
  bool _controlBarOn, _captionOn;
  dyn_int _curveLinkedTo;
  int _tmpCurveLinkedTo;

  _dpesVal           = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _legendVal         = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _colorsVal         = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _axiiVal           = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _hiddenVal         = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _rangeMinVal       = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _rangeMaxVal       = makeDynString(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);
  _curveTypes        = makeDynInt(fwTrending_PLOT_TYPE_STANDARD, fwTrending_PLOT_TYPE_STANDARD,
                                  fwTrending_PLOT_TYPE_STANDARD, fwTrending_PLOT_TYPE_STANDARD,
                                  fwTrending_PLOT_TYPE_STANDARD, fwTrending_PLOT_TYPE_STANDARD,
                                  fwTrending_PLOT_TYPE_STANDARD, fwTrending_PLOT_TYPE_STANDARD);
  _curveScalePos     = makeDynInt(SCALE_LEFT, SCALE_LEFT, SCALE_LEFT, SCALE_LEFT, 
                                  SCALE_LEFT, SCALE_LEFT, SCALE_LEFT, SCALE_LEFT);
  _axiiXFormat       = makeDynString(&quot;&quot;);

  tempString = TextFieldTitle.text;
  plotData[fwTrending_PLOT_OBJECT_MODEL][1]      = fwTrending_YT_PLOT_MODEL;
  plotData[fwTrending_PLOT_OBJECT_TITLE][1]      = tempString;
  plotData[fwTrending_PLOT_OBJECT_BACK_COLOR][1] = ButtonBackgroundColor.backCol;
  plotData[fwTrending_PLOT_OBJECT_FORE_COLOR][1] = ButtonForegroundColor.backCol;

  tempInt = daysSpinButton.text * fwTrending_SECONDS_IN_ONE_DAY + hoursSpinButton.text * fwTrending_SECONDS_IN_ONE_HOUR + minutesSpinButton.text * fwTrending_SECONDS_IN_ONE_MINUTE;

  if(tempInt == 0) 
  {
    tempInt = (10 * fwTrending_SECONDS_IN_ONE_MINUTE);
  }

  plotData[fwTrending_PLOT_OBJECT_TIME_RANGE][1] = tempInt;

  getMultiValue(&quot;LegendCheckButton&quot;,  &quot;state&quot;, 0, plotData[fwTrending_PLOT_OBJECT_LEGEND_ON][1],
                &quot;CtrlBarCheckButton&quot;, &quot;state&quot;, 0, _controlBarOn,
                &quot;CaptionCheckButton&quot;, &quot;state&quot;, 0, _captionOn,
                &quot;SaveUserFolder&quot;,     &quot;state&quot;, 0, plotData[fwTrending_PLOT_OBJECT_SAVE_TO_USER_FOLDER][1]);
  plotData[fwTrending_PLOT_OBJECT_CONTROL_BAR_ON][1]      = (!_controlBarOn + 2*(!_captionOn));
  
  getMultiValue(&quot;LogScaleButton&quot;,     &quot;state&quot;,       0, plotData[fwTrending_PLOT_OBJECT_IS_LOGARITHMIC][1],
                &quot;GridButton&quot;,         &quot;state&quot;,       0, plotData[fwTrending_PLOT_OBJECT_GRID][1],
                &quot;MarkerTypeComboBox&quot;, &quot;selectedPos&quot;, markerType);
  plotData[fwTrending_PLOT_OBJECT_MARKER_TYPE][1]         = markerType-1;
  plotData[fwTrending_PLOT_OBJECT_ACCESS_CONTROL_SAVE][1] = accessControlOn.state(0)?saveRights.text:&quot;&quot;;
  
  //set font size, set curve width, set X axis format
  getMultiValue(&quot;cmFont&quot;,        &quot;toolTipText&quot;, plotData[fwTrending_PLOT_OBJECT_DEFAULT_FONT][1],
                &quot;cmLine&quot;,        &quot;toolTipText&quot;, plotData[fwTrending_PLOT_OBJECT_CURVE_STYLE][1],
                &quot;cmXaxiiFormat&quot;, &quot;toolTipText&quot;, _axiiXFormat);
  
  strreplace(_axiiXFormat[1], &quot; | &quot;, &quot;|&quot;);
  _axiiXFormat = strsplit(_axiiXFormat[1], &quot;|&quot;);
  if( dynlen(_axiiXFormat) &lt; 2 ) 
  {
    _axiiXFormat[2] = &quot;&quot;;
  }
  
  plotData[fwTrending_PLOT_OBJECT_AXII_X_FORMAT] = _axiiXFormat;
  tempInt                                        = PlotTypeComboBox.selectedPos;
  switch(tempInt) 
  {
    case 1:
      plotData[fwTrending_PLOT_OBJECT_TYPE][1] = fwTrending_PLOT_TYPE_POINTS;
      break;

    case 2:
      plotData[fwTrending_PLOT_OBJECT_TYPE][1] = fwTrending_PLOT_TYPE_STEPS;
      break;

    case 3:
      plotData[fwTrending_PLOT_OBJECT_TYPE][1] = fwTrending_PLOT_TYPE_LINEAR;
      break;

    case 4:
      plotData[fwTrending_PLOT_OBJECT_TYPE][1] = fwTrending_PLOT_TYPE_INDIVIDUAL;
      break;

// Missing statement
//    default:
//      break;
  }
              
  for( i = 1 ; i &lt;= fwTrending_MAX_NUM_CURVES ; i++ ) 
  {
    getValue(&quot;curveTypeCombo&quot; + i, &quot;selectedPos&quot;, selectedPos);
    switch(selectedPos) 
    {
      case 1:
        _curveTypes[i] = fwTrending_PLOT_TYPE_POINTS;
        break;
      case 2:
        _curveTypes[i] = fwTrending_PLOT_TYPE_STEPS;
        break;
      case 3:
        _curveTypes[i] = fwTrending_PLOT_TYPE_LINEAR;
        break;

// Missing statement
//    default:
//      break;
    }
          
    if( plotData[fwTrending_PLOT_OBJECT_TYPE][1] != _curveTypes[i] ) 
    {
      plotData[fwTrending_PLOT_OBJECT_TYPE][1] = fwTrending_PLOT_TYPE_INDIVIDUAL;
      PlotTypeComboBox.selectedPos = 4;
    }
          
    _dpesVal[i] = getDpeFromTextField(&quot;DPTextField&quot; + i);
    getMultiValue(&quot;LegendTextField&quot;      + i, &quot;text&quot;,        _legendVal[i],
                  &quot;cmLegendFormat&quot;       + i, &quot;toolTipText&quot;, _legendValFormat[i],
                  &quot;cmScaleFormat&quot;        + i, &quot;toolTipText&quot;, _scaleValFormat[i],
                  &quot;ColorButton&quot;          + i, &quot;backCol&quot;,     _colorsVal[i],
                  &quot;axisOnCurve&quot;          + i, &quot;visible&quot;,     _axiiVal[i],
                  &quot;curveNotVisible&quot;      + i, &quot;visible&quot;,     _hiddenVal[i],
                  &quot;AutoRangeCheckButton&quot; + i, &quot;state&quot;,       0, tempBool,
                  &quot;ckShowAlarmLimits&quot;    + i, &quot;state&quot;,       0, _showAlarmLimits[i]);

    // DebugTN(&quot;ReadInput() -&gt; &quot; + i + &quot; -&gt; tempBool = &quot; + tempBool);
    if( tempBool ) 
    {
      setMultiValue(&quot;RangeMinTextField&quot; + i, &quot;text&quot;, g_DefaultRangeValue,
                    &quot;RangeMaxTextField&quot; + i, &quot;text&quot;, g_DefaultRangeValue);
      // DebugTN(&quot;ReadInput() -&gt; &quot; + i + &quot; -&gt; tempBool TRUE -&gt; g_DefaultRangeValue = &quot; + g_DefaultRangeValue);
    }

    getValue(&quot;scalePosRadioButton&quot; + i, &quot;number&quot;, _curveScalePos[i]);
    _curveScalePos[i] += 2; //L index = 0 , R index = 1 ==&gt; SCALE_LEFT = 2 , SCALE_RIGHT = 3

    getValue(&quot;linkCurveCombo&quot; + i, &quot;selectedPos&quot;, _tmpCurveLinkedTo);
    _curveLinkedTo[i] = (_tmpCurveLinkedTo &gt;= 1 &amp;&amp; _tmpCurveLinkedTo &lt;= 8)?_tmpCurveLinkedTo-1 : 0; //if non-zero: curve is linked to that curve index. Else it is not linked.

    getMultiValue(&quot;RangeMinTextField&quot; + i, &quot;text&quot;, _rangeMinVal[i],
                  &quot;RangeMaxTextField&quot; + i, &quot;text&quot;, _rangeMaxVal[i]);
    plotData[fwTrending_PLOT_OBJECT_EXT_MIN_MAX_RANGE][i] = _rangeMinVal[i] + fwTrending_AXIS_LIMITS_DIVIDER + _rangeMaxVal[i];
  }

  plotData[fwTrending_PLOT_OBJECT_DPES]                 = _dpesVal;
  plotData[fwTrending_PLOT_OBJECT_LEGENDS]              = _legendVal;
  plotData[fwTrending_PLOT_OBJECT_LEGEND_VALUES_FORMAT] = _legendValFormat;
  plotData[fwTrending_PLOT_OBJECT_COLORS]               = _colorsVal;
  plotData[fwTrending_PLOT_OBJECT_AXII]                 = _axiiVal;
  plotData[fwTrending_PLOT_OBJECT_AXII_POS]             = _curveScalePos;
  plotData[fwTrending_PLOT_OBJECT_AXII_LINK]            = _curveLinkedTo;
  plotData[fwTrending_PLOT_OBJECT_AXII_Y_FORMAT]        = _scaleValFormat;
  plotData[fwTrending_PLOT_OBJECT_CURVES_HIDDEN]        = _hiddenVal;
  plotData[fwTrending_PLOT_OBJECT_ALARM_LIMITS_SHOW]    = _showAlarmLimits;
  plotData[fwTrending_PLOT_OBJECT_RANGES_MIN]           = _rangeMinVal;
  plotData[fwTrending_PLOT_OBJECT_RANGES_MAX]           = _rangeMaxVal;
  plotData[fwTrending_PLOT_OBJECT_CURVE_TYPES]          = _curveTypes;
  plotData[fwTrending_PLOT_OBJECT_IS_TEMPLATE]          = FALSE;
  plotData[fwTrending_PLOT_OBJECT_TEMPLATE_NAME]        = &quot;&quot;;
}






void ApplyCancelOKButtonClick(string sButton)
{

  bool bTemp, bIsConnected;
  int iLoop;
  string sOkString, sTemp, sDescription;
  dyn_string dsTempPlotData;
  dyn_dyn_string ddsPlotData;


  sOkString = &quot;OK&quot;;


  // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; sButton = &quot;, sButton);
  // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; Command = &quot;, Command);


  if( sButton != &quot;Cancel&quot; )
  {
    sOkString = CheckInput(exceptionInfo);

    if( dynlen(exceptionInfo) &gt; 0 )
    {
      fwExceptionHandling_display(exceptionInfo);
    }
  }
  // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; sOkString = &quot;, sOkString);


  if( (sButton   != &quot;Cancel&quot;)  &amp;&amp;
      (sOkString != &quot;NoReturn&quot;)  )
  {
    switch( Command )
    {
      case &quot;copy&quot;:
      case &quot;new&quot;:
        // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; Command is copy or new&quot;);

        plotName = TextFieldName.text;

        if( plotName == &quot;&quot; )
        {
          fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;You did not enter a plot name&quot;, &quot;&quot;);
          fwExceptionHandling_display(exceptionInfo);
          sOkString = &quot;NoReturn&quot;;
        }
        else
        {
          bTemp = dpIsLegalName(plotName);
          if( bTemp )
          {
            if( !dpExists(plotName) )
            {
              fwTrending_newPlot(plotName);
              if( !dpExists(plotName) )
              {
                fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The plot could not be created&quot;, &quot;&quot;);
                fwExceptionHandling_display(exceptionInfo);
                sOkString = &quot;NoReturn&quot;;
              }
            }
            else
            {
              fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The entered plot name is already in use&quot;, &quot;&quot;);
              fwExceptionHandling_display(exceptionInfo);
              sOkString = &quot;NoReturn&quot;;
            }
          }
          else
          {
            fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The entered plot name is not legal&quot;, &quot;&quot;);
            sTemp = TextFieldTitle.text;
            bTemp = TRUE;
            if( !bTemp )
            {
              fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The entered plot title is not legal&quot;, &quot;&quot;);
            }
            fwExceptionHandling_display(exceptionInfo);
            sOkString = &quot;NoReturn&quot;;
          }
        }


      case &quot;edit&quot;:
      case &quot;onlineedit&quot;:
        // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; Command is copy or new or edit or onlineedit&quot;);
        TextFieldName.editable = FALSE;
        TextFieldName.enabled  = FALSE;

        // Change mode to edit once to config has been saved once
        if( Command == &quot;new&quot; )
        {
          Command = &quot;edit&quot;;
        }

        if( Command == &quot;onlineedit&quot; )
        {
          ddsPlotData = strsplit(getDollarValue(&quot;$dsPlotData&quot;), &quot;|&quot;);
          // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; ddsPlotData = &quot;, ddsPlotData);

          for( iLoop = 1 ; iLoop &lt;= fwTrending_SIZE_PLOT_OBJECT ; iLoop++ )
          {
            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; ddsPlotData[&quot; + iLoop + &quot;][1] = &quot;, ddsPlotData[iLoop][1]);
            ddsPlotData[iLoop][1] = strltrim(ddsPlotData[iLoop][1], &quot; &quot;);
            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; ddsPlotData[&quot; + iLoop + &quot;][1] = &quot;, ddsPlotData[iLoop][1]);

            ddsPlotData[iLoop][1] = strrtrim(ddsPlotData[iLoop][1], &quot; &quot;);
            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; ddsPlotData[&quot; + iLoop + &quot;][1] = &quot;, ddsPlotData[iLoop][1]);

            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; ddsPlotData[&quot; + iLoop + &quot;] = &quot;, ddsPlotData[iLoop]);
            ddsPlotData[iLoop] = strsplit(ddsPlotData[iLoop][1], fwTrending_CONTENT_DIVIDER);
            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; ddsPlotData[&quot; + iLoop + &quot;] = &quot;, ddsPlotData[iLoop]);
          }
        }
        else
        {
          // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; ! onlineedit&quot;);
          fwTrending_getPlot(plotName, ddsPlotData, exceptionInfo);
          // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; ! onlineedit -&gt; plotName = &quot;,      plotName);
          // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; ! onlineedit -&gt; ddsPlotData = &quot;,   ddsPlotData);
          // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; ! onlineedit -&gt; exceptionInfo = &quot;, exceptionInfo);
        }

        // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; before ReadInput&quot;);
        ReadInput(ddsPlotData, exceptionInfo);
        // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; ddsPlotData = &quot;,   ddsPlotData);
        // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; exceptionInfo = &quot;, exceptionInfo);


        if( Command != &quot;onlineedit&quot; )
        {
          _fwTrending_isSystemForDpeConnected(plotName, bIsConnected, exceptionInfo);
          if( bIsConnected )
          {
            if( dynlen(exceptionInfo) == 0 )
            {
              g_AccessRightsRequired = ddsPlotData[fwTrending_PLOT_OBJECT_ACCESS_CONTROL_SAVE];
              fwTrending_setPlot(plotName, ddsPlotData, exceptionInfo);
            }
          }
          else
          {
            fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The configuration can not be saved because \&quot;&quot; + plotName + &quot;\&quot; is from a remote system which is currently unavailable&quot;, &quot;&quot;);
          }
        }
        else
        {
          for( iLoop = 1 ; iLoop &lt;= fwTrending_MAX_NUM_CURVES ; iLoop++ )
          {
            if( ddsPlotData[fwTrending_PLOT_OBJECT_DPES][iLoop] != &quot;&quot; )
            {
              fwTrending_getPlotDataDpeData(ddsPlotData[fwTrending_PLOT_OBJECT_DPES]     [iLoop],
                                            ddsPlotData[fwTrending_PLOT_OBJECT_DPES]     [iLoop],
                                            ddsPlotData[fwTrending_PLOT_OBJECT_EXT_UNITS][iLoop],
                                            sDescription);
              // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; &quot; + iLoop + &quot; -&gt; ddsPlotData[fwTrending_PLOT_OBJECT_DPES][&quot;      + iLoop + &quot;] = &quot;, ddsPlotData[fwTrending_PLOT_OBJECT_DPES]     [iLoop]);
              // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; &quot; + iLoop + &quot; -&gt; ddsPlotData[fwTrending_PLOT_OBJECT_EXT_UNITS][&quot; + iLoop + &quot;] = &quot;, ddsPlotData[fwTrending_PLOT_OBJECT_EXT_UNITS][iLoop]);
              // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; &quot; + iLoop + &quot; -&gt; sDescription = &quot;, sDescription);

              ddsPlotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS][iLoop] = ddsPlotData[fwTrending_PLOT_OBJECT_DPES][iLoop] + &quot; [&quot; + ddsPlotData[fwTrending_PLOT_OBJECT_EXT_UNITS][iLoop] + &quot;] &quot; + sDescription;
              // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; &quot; + iLoop + &quot; -&gt; ddsPlotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS][&quot; + iLoop + &quot;] = &quot;, ddsPlotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS][iLoop]);
            }
          }

          for( iLoop = 1 ; iLoop &lt;= fwTrending_SIZE_PLOT_OBJECT ; iLoop++ )
          {
            fwTrending_convertDynToString(ddsPlotData[iLoop], dsTempPlotData[iLoop], exceptionInfo);
            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; &quot; + iLoop + &quot; -&gt; dsTempPlotData[ &quot; + iLoop + &quot;] = &quot;, dsTempPlotData[iLoop]);

            ddsPlotData[iLoop] = makeDynString(dsTempPlotData[iLoop]);
            // DebugTN(&quot;ApplyCancelOkButtonClick() -&gt; onlineedit -&gt; &quot; + iLoop + &quot; -&gt; ddsPlotData[ &quot; + iLoop + &quot;] = &quot;, ddsPlotData[iLoop]);
          }
        }
        break;


      default:
        fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The entered command in the plot configuration panel is unknown: &quot; + Command, &quot;&quot;);
        fwExceptionHandling_display(exceptionInfo);
        return;
        break;

    }


    /* added by Herve */
    if( sButton == &quot;Apply&quot; )
    {
      if( isFunctionDefined(&quot;unTrendTree_deviceConfiguration_postExecution&quot;) )
      {
        execScript(&quot;main()&quot;                                             +
                   &quot;{&quot;                                                  +
                   &quot;  unTrendTree_deviceConfiguration_postExecution();&quot; +
                   &quot;}&quot;,
                   makeDynString() );
      }
    }
    /* end added by Herve */


    // DebugTN(&quot;ApplyCancelOKButtonClick() -&gt; sOkString = &quot;, sOkString);
    // DebugTN(&quot;ApplyCancelOKButtonClick() -&gt; sButton = &quot;,   sButton);
    // DebugTN(&quot;ApplyCancelOKButtonClick() -&gt; TextFieldName.text = &quot;,   TextFieldName.text);
    if( dynlen(exceptionInfo) &gt; 0 )
    {
      fwExceptionHandling_display(exceptionInfo);
    }
    else
      if( (sButton   == &quot;OK&quot;)      &amp;&amp;
          (sOkString != &quot;NoReturn&quot;) )
      {
        PanelOffReturn(makeDynFloat(0.0),
                       makeDynString(sOkString,
                                     TextFieldName.text,
                                     ddsPlotData) );
      }
  }
  else
    if( sOkString != &quot;NoReturn&quot; )
    {
      PanelOffReturn(makeDynFloat(0.0), makeDynString(&quot;Cancel&quot;, TextFieldName.text));
    }
}






showLineSample(string lineType) {
  if(lineType==&quot;&quot; || lineType==0) {
    lineType = fwTrending_DEFAULT_CURVE_STYLE;
  }
  cmLine.toolTipText = lineType;
  lineSample.border = lineType;
}






// ------------------------------------------------------------------------------------------------

string getDpeFromTextField(string textField)
{
  string sText, sDpe;
  
  getValue(textField, &quot;text&quot;, sText);
  
  if(fwTrending_isAlias(sText))
  {
    sDpe = fwTrending_createAliasRepresentation(sText);
  }
  else
  {
    sDpe = sText;
  }

  return sDpe;
}





void dragDropCurves(string sInformation)
{
  int iSelectedTextField, iCount, iCountFilter, iLoop, iFreeCurves, iPosDragDrop;
  dyn_int diEmptyCurves;
  dyn_string dsDpes, dsFilterDpe, dsFilterLegend, dsDpeTemp, exceptionInfo;


  // Get DPTextField number
  iSelectedTextField = substr(this.name, strlen(this.name)-1);

  // Split information passed by Drag &amp; Drop
  // DPE_A,Legend_A;DPE_B;Legend_B;...
  dsDpes = strsplit(sInformation, &quot;;&quot; );
  
  // Number of DPEs passed in Drag &amp; Drop
  iCount = dynlen(dsDpes);

  // Checking curves exists
  for( iLoop = 1 ; iLoop &lt;= iCount ; iLoop++ )
  {
    dsDpeTemp = strsplit(dsDpes[iLoop], &quot;,&quot;);
    
    //dsDpeTemp[1] = DPE
    //dsDpeTemp[2] = Legend
    if( dpExists(dsDpeTemp[1]) )
    {
      // Add valid DPE
      dynAppend(dsFilterDpe, dsDpeTemp[1]);
      
      // Add legend to DPE
      if( dynlen(dsDpeTemp) &gt; 1 )
      {
        dynAppend(dsFilterLegend, dsDpeTemp[2]);
      }
      else
      {
        dynAppend(dsFilterLegend, &quot;&quot;);
      }
    }
    else
    {
      fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;You dragdrop a DPE that doesn't exist: &quot; + dsDpeTemp[1] + &quot; it will be not added into the panel&quot;, &quot;&quot;);
      fwExceptionHandling_display(exceptionInfo);
    }
 
  }
  iCountFilter = dynlen(dsFilterDpe);


  // Get empty slots for curves 
  diEmptyCurves = getEmptyCurves(sInformation);
  iFreeCurves   = dynlen(diEmptyCurves);

  // Accept or reject curves in case not enough space available
  if( iCountFilter &lt;= iFreeCurves )
  {
    if( this.text() == &quot;&quot; )
    {
      // Start adding curves from the shape that user DragDrop items
      for( iLoop = 1 ; iLoop &lt;= iCountFilter ; iLoop++ )
      {
        iPosDragDrop = dynContains(diEmptyCurves, iSelectedTextField);
        if( (iPosDragDrop + iLoop - 1) &lt;= iFreeCurves )
        {
          addCurve(diEmptyCurves[iPosDragDrop + iLoop - 1], dsFilterDpe[iLoop], dsFilterLegend[iLoop]);
        }
        else
        {
          addCurve(diEmptyCurves[iPosDragDrop + iLoop - 1 - iFreeCurves], dsFilterDpe[iLoop], dsFilterLegend[iLoop]);          
        }
      }// for() adding curves from shape user DrapDrop items
    }
    else
    {
      // Start adding curves from first available slot in the dyn_int array
      for( iLoop = 1 ; iLoop &lt;= iCountFilter ; iLoop++ )
      {
        addCurve(diEmptyCurves[iLoop], dsFilterDpe[iLoop], dsFilterLegend[iLoop]);
      }
    }
  }
  else
  {
    fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;You dragdrop &quot; + iCount + &quot; curves and free curves available are: &quot; + iFreeCurves + &quot;, dragdrop process stopped.&quot;, &quot;&quot;);
    fwExceptionHandling_display(exceptionInfo);
  }
  
}// dragDropCurves()





dyn_int getEmptyCurves(string sInformation)
{
  int iLoop;
  string sDpe;
  dyn_int diEmptyCurves;
  

  for( iLoop = 1 ; iLoop &lt;= fwTrending_MAX_NUM_CURVES ; iLoop++ )
  {
    getValue(&quot;DPTextField&quot; + iLoop, &quot;text&quot;, sDpe);

    // If user dragDrop something, it will remove previous content -&gt; Remove drapDrop raw content.
    if( sDpe == sInformation )
    {
      setValue(&quot;DPTextField&quot; + iLoop, &quot;text&quot;, &quot;&quot;);
      dynAppend(diEmptyCurves, iLoop);
    }
    else
      if( sDpe == &quot;&quot; ) 
      {
        dynAppend(diEmptyCurves, iLoop);
      }
  }
  
  return diEmptyCurves;

}//getEmptyCurves()





void addCurve(int iCurveNumber, string sDPE, string sLegend)
{
  if( sLegend != &quot;&quot; )
  {
    // Add legend by drag and drop
    setMultiValue(&quot;DPTextField&quot;     + iCurveNumber, &quot;text&quot;, sDPE,
                  &quot;LegendTextField&quot; + iCurveNumber, &quot;text&quot;, sLegend);
  }
  else
  {
    // Add legend by DPE (alias, etc...)
    setValue(&quot;DPTextField&quot; + iCurveNumber, &quot;text&quot;, sDPE);
    legendTextFieldFillByDP(iCurveNumber);
  }
  
}// addCurve()

]]></script>
  <script name="Close" isEscaped="1"><![CDATA[main() {
  int i;
}
]]></script>
  <script name="Terminate" isEscaped="1"><![CDATA[main() {
  int i;
}
]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main() 
{
  int iRes, i;
  dyn_string exceptionInfo;
  string tempString, originalData, sShowButtons, selectedText;
  int tempInt, selectedPos, position;
  bool tempBool, showAcOptions = FALSE, isConnected = TRUE;
  dyn_string buttons, _dpesVal, _legendVal, _colorsVal, _rangeMinVal, _rangeMaxVal, markerTypes;
  dyn_string _legendValFormat, _scaleValFormat;
  dyn_dyn_string plotData;
  dyn_bool _axiiVal,_hiddenVal, _showAlarmLimits;
  dyn_int curveTypes, _curveScalePos;
  bit32 b32ControlBarsStatus;
  int   iControlBarsStatus;
  dyn_int _curveLinkedTo;
  
  while(!isFunctionDefined(&quot;ApplyCancelOKButtonClick&quot;));

  plotName = $sDpName;
  if(isDollarDefined(&quot;$Command&quot;)) {
    Command = strtolower($Command);
    if(Command == &quot;&quot;) Command = &quot;edit&quot;;
  } else {
    if(plotName == &quot;&quot;) {
      Command = &quot;new&quot;;
    } else {
      Command = &quot;edit&quot;;  
    }
  }

  if(Command==&quot;new&quot;) {
    plotName = &quot;&quot;;
  }

  if((Command==&quot;copy&quot;) &amp;&amp; isDollarDefined(&quot;$sOriginalPlot&quot;)) {
    plotName = getDollarValue(&quot;$sOriginalPlot&quot;);
  }

  //get configuration from DP
  // added by Herve
  dpConnect(&quot;customDpSelectorCB&quot;, &quot;TrendingConfiguration.customDPSelector&quot;);
  // end added by Herve
  
  //get settings from DP and fill them into the fields
  //en-/disable appropriate functions
  if(isDollarDefined(&quot;$dsShowButtons&quot;)) {
    sShowButtons = $dsShowButtons;
    strreplace(sShowButtons, &quot; &quot;, &quot;&quot;);
    sShowButtons = strtolower(sShowButtons);
    buttons = strsplit(sShowButtons, &quot;|&quot;);

    if(dynContains(buttons, &quot;all&quot;) &gt; 0) {
      ButtonOK.visible = TRUE;
      ButtonApply.visible = TRUE;
      ButtonCancel.visible = TRUE;
    } else {
      if(dynContains(buttons, &quot;ok&quot;) &gt; 0) {
        ButtonOK.visible = TRUE;
      }
      if(dynContains(buttons, &quot;apply&quot;) &gt; 0) {
        ButtonApply.visible = TRUE;
      }
      if(dynContains(buttons, &quot;cancel&quot;) &gt; 0) {
        ButtonCancel.visible = TRUE;    
      }
    }
  } else {
    ButtonOK.visible = TRUE;
    ButtonApply.visible = TRUE;
    ButtonCancel.visible = TRUE;
  }

  if((Command == &quot;edit&quot;) || (Command == &quot;onlineedit&quot;)) {
    TextFieldName.text = plotName;
    TextFieldName.editable = FALSE;
    TextFieldName.enabled = FALSE;
    TextFieldTitle.editable = TRUE;
    TextFieldTitle.enabled = TRUE;
  } else {
    TextFieldName.editable = TRUE;
    TextFieldName.enabled = TRUE;
    TextFieldTitle.editable = TRUE;
    TextFieldTitle.enabled = TRUE;
  }  

  markerTypes[fwTrending_MARKER_TYPE_FILLED_CIRCLE+1] = &quot;Filled circle&quot;;
  markerTypes[fwTrending_MARKER_TYPE_UNFILLED_CIRCLE+1] = &quot;Unfilled circle&quot;;
  markerTypes[fwTrending_MARKER_TYPE_NONE+1] = &quot;None&quot;;
  MarkerTypeComboBox.items = markerTypes;

  if(Command == &quot;new&quot;) 
  {
    // if default datapoint exist, this one can be used to set up the configuration panel
    // otherwise, only a few UI elements have to be initiated before showing the panel
    if(dpExists(fwTrending_PLOT_DEFAULTS))
    {
      fwTrending_getPlot(fwTrending_PLOT_DEFAULTS, plotData, exceptionInfo);
    }
    else
    {
      for( i = 1; i &lt;= fwTrending_MAX_NUM_CURVES; i++) {
        switch(fwTrending_PLOT_TYPE_STANDARD) {
          case fwTrending_PLOT_TYPE_POINTS:
            selectedPos = 1;
            break;
          case fwTrending_PLOT_TYPE_STEPS:
            selectedPos = 2;
            break;
          case fwTrending_PLOT_TYPE_LINEAR:
            selectedPos = 3;
            break;
        }
        setValue(&quot;curveTypeCombo&quot; + i, &quot;selectedPos&quot;, selectedPos);
      }

      PlotTypeComboBox.selectedPos = selectedPos;
      enableIndividualCurveTypes(FALSE);
      visibleCheckButtonGlobal(1);
      axisCheckButtonGlobal(2);
      daysSpinButton.text = 0;
      hoursSpinButton.text = 1;
      minutesSpinButton.text = 0;  
    }
      
    showAcOptions = TRUE;
  }
  
  if((Command == &quot;edit&quot;) || (Command == &quot;copy&quot;)) {
    _fwTrending_isSystemForDpeConnected(plotName, isConnected, exceptionInfo);
    fwTrending_getPlot(plotName, plotData, exceptionInfo);
        showAcOptions = TRUE;
  }

  if(Command == &quot;onlineedit&quot;) {
    originalData = getDollarValue(&quot;$dsPlotData&quot;);
    strreplace(originalData, &quot; | &quot;, &quot;|&quot;);
    plotData = strsplit(originalData, &quot;|&quot;);

    for(i=1; i&lt;=fwTrending_SIZE_PLOT_OBJECT; i++) {
      // protect FWTREND-995
      if (dynlen(plotData)&gt;=i) {
        fwTrending_convertStringToDyn(plotData[i][1], plotData[i], exceptionInfo);
      } else {
        plotData[i]=&quot;&quot;;  
      }
    }
  }
  
  if((Command == &quot;edit&quot;) || (Command == &quot;onlineedit&quot;) || (Command == &quot;copy&quot;) || dpExists(fwTrending_PLOT_DEFAULTS)) {
    if(_fwTrending_isUnicosEnvironment(exceptionInfo)) {
      strreplace(plotData[fwTrending_PLOT_OBJECT_TITLE][1], &quot; &quot;, &quot;&quot;);
    }
    
    TextFieldTitle.text = plotData[fwTrending_PLOT_OBJECT_TITLE][1];
    
    if(plotData[fwTrending_PLOT_OBJECT_TEMPLATE_NAME][1] != &quot;&quot;) {
      TextFieldTemplate.text = plotData[fwTrending_PLOT_OBJECT_TEMPLATE_NAME][1];
      TextFieldTemplate.visible = TRUE;
      TextTemplate.visible = TRUE;
    } else {
      TextFieldTemplate.visible = FALSE;
      TextTemplate.visible = FALSE;
    }
  
    if(plotData[fwTrending_PLOT_OBJECT_BACK_COLOR][1] == &quot;&quot;) {
      ButtonBackgroundColor.backCol = &quot;FwTrendingTrendBackground&quot;;
    } else {
      ButtonBackgroundColor.backCol = plotData[fwTrending_PLOT_OBJECT_BACK_COLOR][1];
    }
    
    if(plotData[fwTrending_PLOT_OBJECT_FORE_COLOR][1] == &quot;&quot;) {
      ButtonForegroundColor.backCol = &quot;FwTrendingTrendForeground&quot;;
    } else {
      ButtonForegroundColor.backCol = plotData[fwTrending_PLOT_OBJECT_FORE_COLOR][1];
    }
    
    tempInt = plotData[fwTrending_PLOT_OBJECT_TIME_RANGE][1];
    daysSpinButton.text = tempInt / fwTrending_SECONDS_IN_ONE_DAY;
    tempInt %= fwTrending_SECONDS_IN_ONE_DAY;
    hoursSpinButton.text = tempInt / fwTrending_SECONDS_IN_ONE_HOUR;
    tempInt %= fwTrending_SECONDS_IN_ONE_HOUR;
    minutesSpinButton.text = tempInt / fwTrending_SECONDS_IN_ONE_MINUTE;
  
    iControlBarsStatus = plotData[fwTrending_PLOT_OBJECT_CONTROL_BAR_ON][1];
    b32ControlBarsStatus = iControlBarsStatus;
    g_AccessRightsRequired = plotData[fwTrending_PLOT_OBJECT_ACCESS_CONTROL_SAVE][1];
    // FWTREND-995; be backwards-compatible with previous format of data structure
    bool bSaveUserFolder=false;
    if (dynlen(plotData) &gt;= fwTrending_PLOT_OBJECT_SAVE_TO_USER_FOLDER){
      bSaveUserFolder=plotData[fwTrending_PLOT_OBJECT_SAVE_TO_USER_FOLDER][1];
    }
    
    setMultiValue(&quot;LegendCheckButton&quot;,  &quot;state&quot;, 0,    plotData[fwTrending_PLOT_OBJECT_LEGEND_ON][1],
                  &quot;CtrlBarCheckButton&quot;, &quot;state&quot;, 0,    !getBit(b32ControlBarsStatus,0),
                  &quot;CaptionCheckButton&quot;, &quot;state&quot;, 0,    !getBit(b32ControlBarsStatus,1),
                  &quot;LogScaleButton&quot;,     &quot;state&quot;, 0,    plotData[fwTrending_PLOT_OBJECT_IS_LOGARITHMIC][1],
                  &quot;GridButton&quot;,         &quot;state&quot;, 0,    plotData[fwTrending_PLOT_OBJECT_GRID][1],
                  &quot;MarkerTypeComboBox&quot;, &quot;selectedPos&quot;, (int)plotData[fwTrending_PLOT_OBJECT_MARKER_TYPE][1]+1,
                  &quot;cmFont&quot;,             &quot;toolTipText&quot;, plotData[fwTrending_PLOT_OBJECT_DEFAULT_FONT][1],
                  &quot;saveRights&quot;,         &quot;text&quot;,        g_AccessRightsRequired,
                  &quot;accessControlOn&quot;,    &quot;state&quot;,       0, (g_AccessRightsRequired==&quot;&quot;)?FALSE:TRUE,
                  &quot;SaveUserFolder&quot;,     &quot;state&quot;,       0, bSaveUserFolder);
                  
    showLineSample(plotData[fwTrending_PLOT_OBJECT_CURVE_STYLE][1]);
    fwEnableAcOptions(g_AccessRightsRequired != &quot;&quot;);
    setValue(&quot;cmXaxiiFormat&quot;, &quot;toolTipText&quot;,  plotData[fwTrending_PLOT_OBJECT_AXII_X_FORMAT][1] + &quot; | &quot; +  plotData[fwTrending_PLOT_OBJECT_AXII_X_FORMAT][2]);

    _dpesVal = plotData[fwTrending_PLOT_OBJECT_DPES];
    _legendVal = plotData[fwTrending_PLOT_OBJECT_LEGENDS];
    _legendValFormat = plotData[fwTrending_PLOT_OBJECT_LEGEND_VALUES_FORMAT];
    _colorsVal = plotData[fwTrending_PLOT_OBJECT_COLORS];
    _axiiVal = plotData[fwTrending_PLOT_OBJECT_AXII];
    _curveScalePos = plotData[fwTrending_PLOT_OBJECT_AXII_POS];
    _curveLinkedTo = plotData[fwTrending_PLOT_OBJECT_AXII_LINK];
    _hiddenVal = plotData[fwTrending_PLOT_OBJECT_CURVES_HIDDEN];
    _rangeMinVal = plotData[fwTrending_PLOT_OBJECT_RANGES_MIN];
    _rangeMaxVal = plotData[fwTrending_PLOT_OBJECT_RANGES_MAX];
    curveTypes = plotData[fwTrending_PLOT_OBJECT_CURVE_TYPES];
    _scaleValFormat = plotData[fwTrending_PLOT_OBJECT_AXII_Y_FORMAT];
    _showAlarmLimits = plotData[fwTrending_PLOT_OBJECT_ALARM_LIMITS_SHOW];
  
    for( i = 1; (i &lt;= fwTrending_MAX_NUM_CURVES) &amp;&amp; (i &lt;= dynlen(_dpesVal)); i++) {
      archiveCheckButtonInitialize(i);

      switch(curveTypes[i]) {
        case fwTrending_PLOT_TYPE_POINTS:
          selectedPos = 1;
          break;
        case fwTrending_PLOT_TYPE_STEPS:
          selectedPos = 2;
          break;
        case fwTrending_PLOT_TYPE_LINEAR:
          selectedPos = 3;
          break;
        default:
          break;
      }
      
      setValue(&quot;curveTypeCombo&quot; + i, &quot;selectedPos&quot;, selectedPos);
    
      // dpes
      if(dynlen(_dpesVal) &gt;= i &amp;&amp; _dpesVal[i] != &quot;&quot;) {
        position = strpos(_dpesVal[i], fwTrending_ON_VAL);
        
        if(position &gt;= 0) {
          _dpesVal[i] = substr(_dpesVal[i], 0, position);
        }
        _dpesVal[i] = fwTrending_cleanAliasRepresentation(_dpesVal[i]);
        setValue(&quot;DPTextField&quot; + i, &quot;text&quot;, _dpesVal[i]);
        setValue(&quot;ArchiveButton&quot; + i, &quot;enabled&quot;, TRUE);
      } else {
        setValue(&quot;DPTextField&quot; + i, &quot;text&quot;, &quot;&quot;);
        setValue(&quot;ArchiveButton&quot; + i, &quot;enabled&quot;, FALSE);
        _hiddenVal[i] = FALSE;
      }
      
      dpeTextFieldCommand(i);
      
      // legend
      if(dynlen(_legendVal) &gt;= i) {
        setValue(&quot;LegendTextField&quot; + i, &quot;text&quot;, _legendVal[i]);
      } else {
        setValue(&quot;LegendTextField&quot; + i, &quot;text&quot;, &quot;&quot;);
      }
      
      legendTextFieldCommand(i);
      
      // legend value format
      if(dynlen(_legendValFormat) &gt;= i) {
        setValue(&quot;cmLegendFormat&quot; + i, &quot;toolTipText&quot;, _legendValFormat[i]);
      } else {
        setValue(&quot;cmLegendFormat&quot; + i, &quot;toolTipText&quot;, &quot;&quot;);
      }
      // colors
      if(dynlen(_colorsVal) &gt;= i &amp;&amp; _colorsVal[i] != &quot;&quot;) {
        setValue(&quot;ColorButton&quot; + i, &quot;backCol&quot;, _colorsVal[i]);
        
        if(lighter(_colorsVal[i], 300)) {
          setValue(&quot;ColorButton&quot; + i, &quot;foreCol&quot;, &quot;{0,0,0}&quot;);
        } else {
          setValue(&quot;ColorButton&quot; + i, &quot;foreCol&quot;, &quot;{255,255,255}&quot;);
        }
      } else {
        setValue(&quot;ColorButton&quot; + i, &quot;foreCol&quot;, &quot;{0,0,0}&quot;);
      }
      
      // axii
      if((dynlen(_axiiVal) &gt;= i) &amp;&amp; _axiiVal[i]) {
        setValue(&quot;axisOnCurve&quot; + i, &quot;visible&quot;, TRUE);
        setValue(&quot;axisOffCurve&quot; + i, &quot;visible&quot;, FALSE);
      } else {
        setValue(&quot;axisOnCurve&quot; + i, &quot;visible&quot;, FALSE);
        setValue(&quot;axisOffCurve&quot; + i, &quot;visible&quot;, TRUE);
      }
              
      // visibility
      if((dynlen(_hiddenVal) &gt;= i) &amp;&amp; _hiddenVal[i]) {
        setValue(&quot;curveVisible&quot; + i, &quot;visible&quot;, FALSE);
        setValue(&quot;curveNotVisible&quot; + i, &quot;visible&quot;, TRUE);        
        setValue(&quot;ckShowAlarmLimits&quot; + i, &quot;enabled&quot;, FALSE);        
      } else {
        setValue(&quot;curveVisible&quot; + i, &quot;visible&quot;, TRUE);
        setValue(&quot;curveNotVisible&quot; + i, &quot;visible&quot;, FALSE);        
        setValue(&quot;ckShowAlarmLimits&quot; + i, &quot;enabled&quot;, TRUE);        
      }
      
      //scale position
      if(dynlen(_curveScalePos) &gt;= i) {
        setValue(&quot;scalePosRadioButton&quot;+ i,&quot;number&quot;, _curveScalePos[i]-2);
      }

      //scale link to
      if(dynlen(_curveLinkedTo) &gt;= i) {
        setValue(&quot;linkCurveCombo&quot;+ i,&quot;selectedPos&quot;, _curveLinkedTo[i]+1);
            getValue(&quot;linkCurveCombo&quot;+ i,&quot;selectedText&quot;, selectedText);
            enableManualScaleLimits(i, _curveLinkedTo[i]+1, selectedText);
      }

      //scale values format
      if(dynlen(_scaleValFormat) &gt;= i) {
        setValue(&quot;cmScaleFormat&quot;+ i,&quot;toolTipText&quot;, _scaleValFormat[i]);
      }

      //alarm limits
      if(dynlen(_showAlarmLimits) &gt;= i) {
        setValue(&quot;ckShowAlarmLimits&quot;+ i,&quot;state&quot;,0, _showAlarmLimits[i]);
      }

   // min/max of y scale
   if(dynlen(_rangeMinVal) &gt;= i) {
        setValue(&quot;RangeMinTextField&quot; + i, &quot;text&quot;, _rangeMinVal[i]);
      } else {
        setValue(&quot;RangeMinTextField&quot; + i, &quot;text&quot;, g_DefaultRangeValue);
      }
          
      if(dynlen(_rangeMaxVal) &gt;= i) {
        setValue(&quot;RangeMaxTextField&quot; + i, &quot;text&quot;, _rangeMaxVal[i]);
      } else {
        setValue(&quot;RangeMaxTextField&quot; + i, &quot;text&quot;, g_DefaultRangeValue);  
      }  
      // TODO
      autoRangeCheckButtonUpdate(i);
    }

    if(dynUnique(curveTypes) &gt; 1) {
      PlotTypeComboBox.selectedPos = 4;
    } else {
      PlotTypeComboBox.selectedPos = curveTypeCombo1.selectedPos;
      enableIndividualCurveTypes(FALSE);
    }
  }

  if(!isFunctionDefined(&quot;unGenericDpFunctionsHMI_setCallBack_user&quot;)) {
    //only show access control options if not UNICOS project
    if(isFunctionDefined(&quot;fwAccessControl_setupPanel&quot;)) {
      fwShowAcOptions(showAcOptions);
    }
  }
  
  if(isConnected) {
    // Access Control
    if(isFunctionDefined(&quot;unGenericDpFunctionsHMI_setCallBack_user&quot;)) {
      unGenericDpFunctionsHMI_setCallBack_user(&quot;unGenericButtonFunctionsHMI_plotConfPanelselectCB&quot;, iRes, exceptionInfo);
            TextFieldTitle.enabled(ButtonApply.visible());
    } else if(isFunctionDefined(&quot;fwAccessControl_setupPanel&quot;)) {
      fwAccessControl_setupPanel(&quot;checkHasSaveRights&quot;, exceptionInfo);
    }                 
  } else {
    ButtonOK.enabled = FALSE;
    ButtonApply.enabled = FALSE;
    saveAsButton.enabled = FALSE;

    fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The data point \&quot;&quot; + plotName +
      &quot;\&quot; can not be edited because it is from a remote system which is currently unavailable&quot;, &quot;&quot;);
  }
  
  if(dynlen(exceptionInfo)&gt;0) {
    fwExceptionHandling_display(exceptionInfo);
  }
}

// added by Herve
customDpSelectorCB(string sDpe, string sCustomDpSelector) {
  customDPSelector = sCustomDpSelector;
}
// end added by Herve


]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape layerId="0" Name="TextTitle" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">12 74</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">18</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">14 76</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Plot Title (Text)</prop>
     <prop name="en_US.iso88591">Plot Title (Text)</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="TextName" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">12 44</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">17</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">14 46</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Plot Name (DP)</prop>
     <prop name="en_US.iso88591">Plot Name (DP)</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text2" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">33</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">8 7</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">16</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">10 9</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,69,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,19,5,69,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Plot Configuration</prop>
     <prop name="en_US.iso88591">Plot Configuration</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main() {
  
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="Text13" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">46</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">863.9999999999995 1594</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">15</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">616.9999999999995 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">On</prop>
     <prop name="en_US.iso88591">On</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text1" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">132</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">675 125</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">14</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">666 75</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Background Color</prop>
     <prop name="en_US.iso88591">Background Color</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text3" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">42</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">35 154</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">37 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Name</prop>
     <prop name="en_US.iso88591">Name</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text4" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">43</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">244 514</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">10</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">243 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Text</prop>
     <prop name="en_US.iso88591">Text</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text5" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">44</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">471 874</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">432 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Color</prop>
     <prop name="en_US.iso88591">Color</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="TemplateText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">213</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">207 626</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">93</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">12 522</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Plot Template</prop>
     <prop name="en_US.iso88591">Plot Template</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="InstructionsText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">215</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">4163 770</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">95</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">10 520</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Template parameters can be defined in the plot title, dp elements and legends using {} brackets
e.g. System:{datapoint}.value  The template parameter values are passed to the plot when it is displayed.</prop>
     <prop name="en_US.iso88591">Template parameters can be defined in the plot title, dp elements and legends using {} brackets
e.g. System:{datapoint}.value  The template parameter values are passed to the plot when it is displayed.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text7" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">216</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1874 1744</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">96</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">518 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Visible</prop>
     <prop name="en_US.iso88591">Visible</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text8" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">229</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">643.9999999999995 484</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">106</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">642.9999999999995 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Min</prop>
     <prop name="en_US.iso88591">Min</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text9" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">230</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">809.9999999999995 624</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">107</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">692.9999999999995 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Max</prop>
     <prop name="en_US.iso88591">Max</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="TextTimeRange" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">252</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">18 137</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">110</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">12 106</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Time Range</prop>
     <prop name="en_US.iso88591">Time Range</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text14" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">254</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">146 437</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">111</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">142 106</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">days</prop>
     <prop name="en_US.iso88591">days</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text15" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">255</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">237 436</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">112</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">232 106</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">hours</prop>
     <prop name="en_US.iso88591">hours</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text16" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">257</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">331 436</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">113</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">322 106</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">min</prop>
     <prop name="en_US.iso88591">min</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="TextTemplate" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">260</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">633 96</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">115</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">630 45</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Based on</prop>
     <prop name="en_US.iso88591">Based on</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Frame1" shapeType="FRAME">
   <properties>
    <prop name="serialId">265</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 132</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">120</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.330532212885154 0 0 1.05050505050505 -3.305322128851543 -3.616161616161605</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 32</prop>
    <prop name="Size">715 100</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Frame2" shapeType="FRAME">
   <properties>
    <prop name="serialId">266</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">380 420</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">121</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.317829457364341 0 0 1 -70.77519379844961 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Curve</prop>
     <prop name="en_US.iso88591">Curve</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">380 140</prop>
    <prop name="Size">130 280</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Frame3" shapeType="FRAME">
   <properties>
    <prop name="serialId">267</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1014 680</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">122</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.818181818181818 0 0 1 -317.2727272727278 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Y Axis</prop>
     <prop name="en_US.iso88591">Y Axis</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">510 140</prop>
    <prop name="Size">155 280</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ApplyToAllText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">272</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1810 1058</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">127</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">640 520</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Apply changes to all plots 
based on this one.</prop>
     <prop name="en_US.iso88591">Apply changes to all plots 
based on this one.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Frame5" shapeType="FRAME">
   <properties>
    <prop name="serialId">273</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">665 420</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">128</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1 0 0 1 235 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Archive</prop>
     <prop name="en_US.iso88591">Archive</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">665 140</prop>
    <prop name="Size">60 280</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text6" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">274</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">2175 1434</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">129</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">920 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Conf</prop>
     <prop name="en_US.iso88591">Conf</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text11" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">276</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1580 824</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">131</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">730.9999999999995 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Auto</prop>
     <prop name="en_US.iso88591">Auto</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text17" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">289</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">512 874</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">142</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">475 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Type</prop>
     <prop name="en_US.iso88591">Type</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Text18" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">347</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">819 125</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">197</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">814 75</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Foreground Color</prop>
     <prop name="en_US.iso88591">Foreground Color</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="Frame4" shapeType="FRAME">
   <properties>
    <prop name="serialId">352</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 470</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">201</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.330532212885154 0 0 2.06451612903226 -3.30532212885154 -453.2903225806459</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Global Settings for this plot</prop>
     <prop name="en_US.iso88591">Global Settings for this plot</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 423</prop>
    <prop name="Size">715 47</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="GlobalCurveIndividualButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">355</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">356</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Set all curves visible</prop>
     <prop name="en_US.iso88591">Set all curves visible</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 440</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int BUTTON = 1;

main() {
  visibleCheckButtonGlobal(BUTTON);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">327</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">292</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 271</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 4;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">321</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">249</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 180</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 1;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">323</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">263</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 211</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 2;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">309</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">289</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 271</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">308</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">275</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 241</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">305</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">261</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 211</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">302</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">246</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 180</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">306</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">260</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 211</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 2;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">299</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">245</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 180</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 1;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="PlotTypeComboBox" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">249</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">440 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">355</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Set curve type for all curves</prop>
     <prop name="en_US.iso88591">Set curve type for all curves</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">440 440</prop>
    <prop name="Size">86 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Individual</prop>
       <prop name="en_US.iso88591">Individual</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[main(){
  int i;
  switch(this.selectedPos) {
    case 1: 
    case 2: 
    case 3: 
          for(i=1; i&lt;=8; i++) {
        setValue(&quot;curveTypeCombo&quot;+i,&quot;selectedPos&quot;,this.selectedPos);
          }
      enableIndividualCurveTypes(FALSE);
      break;
    case 4: 
      enableIndividualCurveTypes(TRUE);
      break;        
  }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendCheckButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">212</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">4730 284</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">237</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide curve names at the top of the trend</prop>
     <prop name="en_US.iso88591">Show/hide curve names at the top of the trend</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">643 104</prop>
    <prop name="Size">68 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"> Legend</prop>
       <prop name="en_US.iso88591"> Legend</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ButtonBackgroundColor" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">131</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">913 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingTrendBackground</prop>
    <prop name="TabOrder">232</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">780 70</prop>
    <prop name="Size">31 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  string color;
  color = this.backCol;
  colorEditor(color);
  this.backCol = color;
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="TextFieldTitle" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">3</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">122 74</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">231</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">122 74</prop>
    <prop name="Size">341 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton1" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">147</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 360</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">253</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 180</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton2" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">168</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 391</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">267</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 211</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton3" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">175</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 421</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">281</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 241</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton4" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">182</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 451</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">296</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 271</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton5" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">189</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 481</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">310</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 301</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton7" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">203</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 542</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">338</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 362</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton8" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">210</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 563</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">352</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 392</prop>
    <prop name="Size">16 20</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ArchiveCheckButton6" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">196</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1516 512</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">324</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">906 332</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="DPTextField1" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">35</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">240</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 180</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">38</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 540</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">241</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 180</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField1" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">36</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 556</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">242</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 180</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">37</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve1</prop>
    <prop name="TabOrder">243</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 180</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField1" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">233</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">250</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 180</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 1;
main()
{
  rangeMinTextFieldCommand(NUM);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 1;
main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField1" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">234</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 390</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">251</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 180</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 1;
main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 1;
main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">41</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 540</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">254</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 180</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 1;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField2" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">162</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">255</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 211</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">165</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 571</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">256</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 211</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField2" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">163</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 587</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">257</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 211</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">164</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve2</prop>
    <prop name="TabOrder">258</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 211</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField2" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">235</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">264</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 211</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 2;
main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 2;
main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField2" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">236</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 421</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">265</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 211</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 2;
main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 2;
main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">167</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 571</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">268</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 211</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 2;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField3" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">169</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">269</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 241</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">172</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 601</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">270</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 241</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField3" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">170</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 617</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">271</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 241</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">171</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve3</prop>
    <prop name="TabOrder">272</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 241</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField3" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">237</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">278</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 241</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField3" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">238</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 451</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">279</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 241</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">174</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 601</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">282</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 241</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 3;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField4" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">176</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">283</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 271</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">179</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 631</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">284</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 271</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField4" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">177</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 647</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">285</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 271</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">178</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve4</prop>
    <prop name="TabOrder">286</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 271</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField4" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">239</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">293</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 271</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField4" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">240</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 481</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">294</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 271</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">181</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 631</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">297</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 271</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 4;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField5" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">183</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">298</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 301</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">186</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 661</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">299</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 301</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField5" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">184</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 677</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">300</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 301</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">185</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve5</prop>
    <prop name="TabOrder">301</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 301</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField5" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">241</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">307</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 301</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField5" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">242</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 511</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">308</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 301</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">188</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 661</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">311</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 301</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField6" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">190</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">312</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 332</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">193</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 692</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">313</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 332</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField6" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">191</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 708</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">314</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 332</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">192</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve6</prop>
    <prop name="TabOrder">315</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 332</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField6" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">243</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">321</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 332</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField6" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">244</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 542</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">322</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 332</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">195</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 692</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">325</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 332</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField7" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">197</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">326</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 362</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">200</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 722</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">327</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 362</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField7" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">198</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 738</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">328</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 362</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">199</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve7</prop>
    <prop name="TabOrder">329</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 362</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField7" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">245</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">335</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 362</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField7" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">246</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 572</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">336</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 362</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">202</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 722</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">339</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 362</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPTextField8" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">204</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">37 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">340</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="AcceptDrops">True</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">37 392</prop>
    <prop name="Size">151 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
    <script name="DragDrop" isEscaped="1"><![CDATA[main(string sInformation, int iDragType, int iArea)
{
  dragDropCurves(sInformation);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  dpeTextFieldCommand(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="DPEButton8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">207</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">425 734</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">341</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">190 392</prop>
    <prop name="Size">21 20</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  dpeButtonClick(NUM);
  legendTextFieldFillByDP(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LegendTextField8" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">205</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">246.6435742971888 768</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">342</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">241 392</prop>
    <prop name="Size">146 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  legendTextFieldCommand(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ColorButton8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">206</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">433 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingCurve8</prop>
    <prop name="TabOrder">343</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">433 392</prop>
    <prop name="Size">21 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  colorButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMinTextField8" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">247</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">640.9999999999995 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">349</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">641 392</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  rangeMinTextFieldCommand(NUM);
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  rangeMinTextFieldCommand(NUM);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField8" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">248</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 602</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">350</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 392</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  rangeMaxTextFieldCommand(NUM);
}

]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  rangeMaxTextFieldCommand(NUM);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ArchiveButton8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">209</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1168 734</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">353</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">923 392</prop>
    <prop name="Size">21 20</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  archiveButtonClick(NUM);
}]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ButtonOK" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">670 560</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">369</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">670 560</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">OK</prop>
     <prop name="en_US.iso88591">OK</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  ApplyCancelOKButtonClick(&quot;OK&quot;);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ButtonCancel" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">870 560</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">371</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="Hotkey">Esc</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">870 560</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Cancel</prop>
     <prop name="en_US.iso88591">Cancel</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  ApplyCancelOKButtonClick(&quot;Cancel&quot;);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="TemplateCheckButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">214</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1100 810</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">372</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">100 520</prop>
    <prop name="Size">11 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, bool state) {
  dpSet(plotName + fwTrending_PLOT_IS_TEMPLATE + fwTrending_ORIG_VAL, state);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="TextFieldTemplate" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">259</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">780 123</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">373</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">698 43</prop>
    <prop name="Size">251 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ApplyToAllCheckButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">269</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">659 470</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">374</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">659 470</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton2</prop>
       <prop name="en_US.iso88591">CheckButton2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton1" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">275</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">2134 590</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">252</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 180</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 1;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton2" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">277</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">2884 851</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">266</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 211</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 2;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton3" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">278</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">3634 1141</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">280</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 241</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 3;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton4" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">279</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">4384 1461</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">295</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 271</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 4;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton5" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">280</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">5134 1811</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">309</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 301</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 5;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton6" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">281</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">5884 2192</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">323</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 332</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 6;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton7" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">282</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">6634 2602</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">337</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 362</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 7;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton8" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">283</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">7384 2909</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">351</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 392</prop>
    <prop name="Size">16 20</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main(int button, bool state) {
  autoRangeCheckButtonClick(NUM, state);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="LogScaleButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">284</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">780 104</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">239</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Select by default logged user's folder</prop>
     <prop name="en_US.iso88591">Select by default logged user's folder</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">780 104</prop>
    <prop name="Size">81 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Log scale</prop>
       <prop name="en_US.iso88591">Log scale</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="curveTypeCombo1" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">291</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">244</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 180</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 1;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo2" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">292</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">259</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 211</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 2;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo3" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">293</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">273</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 241</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 3;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo4" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">294</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">287</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 271</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 4;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo5" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">295</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">302</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 301</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 5;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main() {

}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo6" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">296</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">316</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 332</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 6;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo7" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">297</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">330</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 362</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 7;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveTypeCombo8" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">298</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">455 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">344</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">455 392</prop>
    <prop name="Size">71 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Points</prop>
       <prop name="en_US.iso88591">Points</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Steps</prop>
       <prop name="en_US.iso88591">Steps</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Linear</prop>
       <prop name="en_US.iso88591">Linear</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 8;

main() {
  changeCurveType(curveNum, this.selectedPos);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">310</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">304</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 301</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 5;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">311</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">318</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 332</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 6;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">312</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">332</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 362</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 7;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">314</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">274</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 241</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 3;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">315</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">288</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 271</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 4;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">316</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">303</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 301</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 5;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">317</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">317</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 332</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 6;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">318</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">331</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 362</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 7;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">320</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">247</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 180</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 1;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">320</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 211</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">171</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 211</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 2;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">325</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">277</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 241</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 3;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">329</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">306</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 301</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 5;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">331</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">320</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 332</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 6;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">333</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">334</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 362</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 7;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">338</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 271</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">291</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 271</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 4;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">339</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 301</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">305</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 301</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 5;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">324</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 241</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">276</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 241</prop>
    <prop name="Size">21 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 3;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">322</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 332</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">319</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 332</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 6;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">328</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 362</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">333</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 362</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 7;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="daysSpinButton" shapeType="SPIN_BUTTON">
   <properties>
    <prop name="serialId">343</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">88 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">234</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">88 103</prop>
    <prop name="Size">51 22</prop>
    <prop name="MinimumID">0</prop>
    <prop name="MaximumID">365</prop>
    <prop name="IncrAccelerator">1</prop>
    <prop name="Position">0</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="hoursSpinButton" shapeType="SPIN_BUTTON">
   <properties>
    <prop name="serialId">345</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">178 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">235</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">178 103</prop>
    <prop name="Size">51 22</prop>
    <prop name="MinimumID">0</prop>
    <prop name="MaximumID">23</prop>
    <prop name="IncrAccelerator">1</prop>
    <prop name="Position">0</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="minutesSpinButton" shapeType="SPIN_BUTTON">
   <properties>
    <prop name="serialId">346</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">268 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">236</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">268 103</prop>
    <prop name="Size">51 22</prop>
    <prop name="MinimumID">0</prop>
    <prop name="MaximumID">59</prop>
    <prop name="IncrAccelerator">1</prop>
    <prop name="Position">0</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ButtonForegroundColor" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">348</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1051 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">FwTrendingTrendForeground</prop>
    <prop name="TabOrder">233</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">918 70</prop>
    <prop name="Size">31 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  string color;
  color = this.backCol;
  colorEditor(color);
  this.backCol = color;
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="GlobalAxisHiddenButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">356</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">361</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show all y axis</prop>
     <prop name="en_US.iso88591">Show all y axis</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 440</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int BUTTON = 3;

main() {
  axisCheckButtonGlobal(BUTTON);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="GlobalAxisVisibleButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">357</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">360</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show no y axis</prop>
     <prop name="en_US.iso88591">Show no y axis</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 440</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int BUTTON = 2;

main() {
  axisCheckButtonGlobal(BUTTON);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="GlobalAxisIndividualButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">358</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">359</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show all y axis</prop>
     <prop name="en_US.iso88591">Show all y axis</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 440</prop>
    <prop name="Size">21 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int BUTTON = 1;

main() {
  axisCheckButtonGlobal(BUTTON);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveNotVisible8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">361</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">346</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 392</prop>
    <prop name="Size">25 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  visibleCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="curveVisible8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">362</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">345</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 392</prop>
    <prop name="Size">25 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[//Function CurveVisibleCheckButton1_EventClick()
const int NUM = 8;

main() {
  visibleCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOffCurve8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">363</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">348</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 392</prop>
    <prop name="Size">21 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scaleCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  axisCheckButtonClick(NUM, TRUE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="axisOnCurve8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">364</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">613.9999999999995 392</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">347</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">614 392</prop>
    <prop name="Size">21 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">scale.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int NUM = 8;

main() {
  axisCheckButtonClick(NUM, FALSE);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="GridButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">365</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">720 104</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">238</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide grid</prop>
     <prop name="en_US.iso88591">Show/hide grid</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">720 104</prop>
    <prop name="Size">53 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Grid</prop>
       <prop name="en_US.iso88591">Grid</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="RangeMinTextField9" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">366</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">641.9999999999995 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">362</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">642 440</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[main() {
  int i;
  shape textField;

    if(this.text == &quot;&quot;) {
    return;
    }

  for(i=1; i&lt;=(fwTrending_MAX_NUM_CURVES+1); i++) {
    textField = getShape(&quot;RangeMinTextField&quot; + i);
    textField.text = this.text;
    rangeMinTextFieldCommand(i);
  }
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[main() {
  int i;
  shape textField;

    if(this.text == &quot;&quot;) {
    return;
    }

  for(i=1; i&lt;=(fwTrending_MAX_NUM_CURVES+1); i++) {
    textField = getShape(&quot;RangeMinTextField&quot; + i);
    textField.text = this.text;
    rangeMinTextFieldCommand(i);
  }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="RangeMaxTextField9" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">367</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1727 650</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">363</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">692 440</prop>
    <prop name="Size">46 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
   <events>
    <script name="Command" isEscaped="1"><![CDATA[main() {
  int i;
  shape textField;

    if(this.text == &quot;&quot;) {
    return;
    }

  for(i=1; i&lt;=(fwTrending_MAX_NUM_CURVES+1); i++) {
    textField = getShape(&quot;RangeMaxTextField&quot; + i);
    textField.text = this.text;
    rangeMaxTextFieldCommand(i);
  }
}
]]></script>
    <script name="KeyboardFocusOut" isEscaped="1"><![CDATA[main() {
  int i;
  shape textField;

  if(this.text == &quot;&quot;) {
    return;
    }

  for(i=1; i&lt;=(fwTrending_MAX_NUM_CURVES+1); i++) {
    textField = getShape(&quot;RangeMaxTextField&quot; + i);
    textField.text = this.text;
    rangeMaxTextFieldCommand(i);
  }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="AutoRangeCheckButton9" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">368</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">7384 2957</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">364</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">744 440</prop>
    <prop name="Size">11 20</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, bool state) {
  int i;
  shape checkButton;

  for(i=1; i&lt;=8; i++) {
    checkButton = getShape(&quot;AutoRangeCheckButton&quot; + i);
    checkButton.state(0, state);
    autoRangeCheckButtonClick(i, state);
  }
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="saveAsButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">369</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">150 560</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">368</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Set these settings as default. They will be used as default next time a new plot is created</prop>
     <prop name="en_US.iso88591">Set these settings as default. They will be used as default next time a new plot is created</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">150 560</prop>
    <prop name="Size">151 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Set as default settings</prop>
     <prop name="en_US.iso88591">Set as default settings</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  bool isFromDp, newDp = FALSE;
  dyn_float df;
  dyn_string ds, exceptionInfo;
  dyn_dyn_string plotData;

  CheckInput(exceptionInfo);
  
  if(dynlen(exceptionInfo)&gt;0) {
    fwExceptionHandling_display(exceptionInfo);
    return;
  }

    ChildPanelOnCentralModalReturn(&quot;vision/MessageInfo&quot;, &quot;Set as default?&quot;,
        makeDynString(&quot;Save current settings as default settings? Will be applied when a new plot is created.&quot;,
              &quot;OK&quot;,
              &quot;Cancel&quot;),
        df, ds); 
    
  if(ds[1]) {
    ReadInput(plotData, exceptionInfo);
    
    if(!dpExists(fwTrending_PLOT_DEFAULTS)) {
      fwTrending_createPlot(fwTrending_PLOT_DEFAULTS, exceptionInfo);
      newDp = TRUE;
    }
    
      plotData[fwTrending_PLOT_OBJECT_IS_TEMPLATE] = true;
      plotData[fwTrending_PLOT_OBJECT_DPES] = makeDynString(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
      plotData[fwTrending_PLOT_OBJECT_DPES_X] = makeDynString(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
      plotData[fwTrending_PLOT_OBJECT_TITLE] = makeDynString(&quot;&quot;);
      plotData[fwTrending_PLOT_OBJECT_LEGENDS] = makeDynString(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
    fwTrending_setPlot(fwTrending_PLOT_DEFAULTS, plotData, exceptionInfo);
  }
  
  if(dynlen(exceptionInfo)&gt;0) {
    fwExceptionHandling_display(exceptionInfo);
    return;
  }
}

]]></script>
   </events>
  </shape>
  <reference referenceId="0" Name="Group2" parentSerial="-1">
   <properties>
    <prop name="FileName">objects/fwGeneral/fwHelpButton.pnl</prop>
    <prop name="Location">364 10</prop>
    <prop name="Geometry">1 0 0 1 558 -5</prop>
    <prop name="TabOrder">375</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sPanelRelativePath</prop>
      <prop name="Value">fwTrending/fwTrendingPlotConfPanel</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
  <shape layerId="0" Name="GlobalCurveHiddenButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">353</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">358</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Set all curves visible</prop>
     <prop name="en_US.iso88591">Set all curves visible</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 440</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eyeCrossed.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int BUTTON = 3;

main() {
  visibleCheckButtonGlobal(BUTTON);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="GlobalCurveVisibleButton" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">354</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">526 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">357</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Set all curves invisible</prop>
     <prop name="en_US.iso88591">Set all curves invisible</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">526 440</prop>
    <prop name="Size">25 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop SharedPixmap="1" name="Image">
     <prop name="BackgroundPixmap">eye.xpm</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[const int BUTTON = 2;

main() {
  visibleCheckButtonGlobal(BUTTON);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT1" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">371</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">18 442</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">214</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">20 444</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Marker Type:</prop>
     <prop name="en_US.iso88591">Marker Type:</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="MarkerTypeComboBox" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">372</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">100 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">354</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Set curve type for all curves</prop>
     <prop name="en_US.iso88591">Set curve type for all curves</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">100 440</prop>
    <prop name="Size">106 24</prop>
    <prop name="Listitems"/>
    <prop name="Editable">False</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="accessControlOn" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">375</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 473</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">365</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">20 473</prop>
    <prop name="Size">21 31</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  fwEnableAcOptions(state);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="accessControlOnText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">376</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">43 473</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">222</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">43 473</prop>
    <prop name="Size">131 36</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Protect configuration
with access control</prop>
     <prop name="en_US.iso88591">Protect configuration
with access control</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="acNotAvailable" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">378</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">699 7</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">376</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">699 7</prop>
    <prop name="Size">189 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main() {
  for(int i=1 ; i&lt;7 ; i++) {
    if(!strlen(Command)) {
        delay(0,100);
      } else {
          break;
      }
    }
  
    //only show access control options if not UNICOS project and if it is a new trending plot
    if(!isFunctionDefined(&quot;unGenericDpFunctionsHMI_setCallBack_user&quot;) &amp;&amp; Command!=&quot;onlineedit&quot;)  {
      int x, y;
  
      getValue(&quot;&quot;, &quot;position&quot;, x, y);
  
        if(getPath(PANELS_REL_PATH, &quot;objects/fwAccessControl/fwAccessControl_CurrentUser.pnl&quot;) != &quot;&quot;) {
          addSymbol(myModuleName(), myPanelName(), &quot;objects/fwAccessControl/fwAccessControl_CurrentUser.pnl&quot;, &quot;currentUser&quot;, makeDynString(), x, y-16, 0, 1, 1);
        } else {
          this.visible = TRUE;
          this.text = &quot;Access Control not available&quot;;
      }
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="saveRights" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">379</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">280 479</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">366</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">280 479</prop>
    <prop name="Size">181 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="saveRightsSelect" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">380</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">470 480.0000000000001</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">367</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Leave filter unchanged</prop>
     <prop name="en_US.iso88591">Leave filter unchanged</prop>
    </prop>
    <prop name="Hotkey">Esc</prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">470 480</prop>
    <prop name="Size">71 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Choose</prop>
     <prop name="en_US.iso88591">Choose</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
    dyn_string privileges, exceptionInfo;
  
  privileges[1] = saveRights.text;

  if(isFunctionDefined(&quot;fwAccessControl_selectPrivileges&quot;)) {
    fwAccessControl_selectPrivileges(privileges, &quot;Please choose access right&quot;);
    if(dynlen(privileges)) {
      saveRights.text = privileges[1]; 
    }    
  } else {
    fwException_raise(exceptionInfo, &quot;ERROR&quot;, &quot;The access control component is not installed.&quot;, &quot;&quot;);
    fwExceptionHandling_display(exceptionInfo); 
  }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="saveRightsText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">381</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">181 483</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">232</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">181 483</prop>
    <prop name="Size">91 21</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Required Right:</prop>
     <prop name="en_US.iso88591">Required Right:</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="CtrlBarCheckButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">383</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">500 104</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">377</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show the Control menu bar</prop>
     <prop name="en_US.iso88591">Show the Control menu bar</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">500 104</prop>
    <prop name="Size">61 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Menu</prop>
       <prop name="en_US.iso88591">Menu</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton1" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">384</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">378</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 180</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT2" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">385</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1019 1594</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">379</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Position the Curve Scale on the Left</prop>
     <prop name="en_US.iso88591">Position the Curve Scale on the Left</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">771.9999999999995 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">L</prop>
     <prop name="en_US.iso88591">L</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT3" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">386</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1035 1594</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">380</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Position the Curve Scale on the Right</prop>
     <prop name="en_US.iso88591">Position the Curve Scale on the Right</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">787.9999999999995 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">R</prop>
     <prop name="en_US.iso88591">R</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton2" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">387</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">381</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 210</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton3" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">388</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 240</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">382</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 240</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton4" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">389</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 270</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">383</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 270</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton5" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">390</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 300</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">384</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 300</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton6" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">391</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 330</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">385</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 330</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton7" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">392</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 360</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">386</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 360</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton8" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">393</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 390</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">387</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 390</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="scalePosRadioButton9" shapeType="RADIO_BOX">
   <properties>
    <prop name="serialId">394</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">769.9999999999995 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">388</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 440</prop>
    <prop name="Size">31 21</prop>
    <prop name="Vertical">False</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8"></prop>
       <prop name="en_US.iso88591"></prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button) {
    int i;
  shape radioButton;

  for(i=1; i&lt;=8; i++) {
    radioButton = getShape(&quot;scalePosRadioButton&quot; + i);
    radioButton.number(button);
  }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="CaptionCheckButton" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">398</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">4770 284</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">391</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide curve names at the bottom of the trend</prop>
     <prop name="en_US.iso88591">Show/hide curve names at the bottom of the trend</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">563 104</prop>
    <prop name="Size">70 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">Captions</prop>
       <prop name="en_US.iso88591">Captions</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
    </prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT5" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">400</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">393</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 182</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">1</prop>
     <prop name="en_US.iso88591">1</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT6" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">401</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">394</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 212</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">2</prop>
     <prop name="en_US.iso88591">2</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT7" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">402</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 240</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">395</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 242</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">3</prop>
     <prop name="en_US.iso88591">3</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT8" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">403</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 270</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">396</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 272</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">4</prop>
     <prop name="en_US.iso88591">4</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT9" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">404</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 300</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">397</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 302</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">5</prop>
     <prop name="en_US.iso88591">5</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT10" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">405</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 330</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">398</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 332</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">6</prop>
     <prop name="en_US.iso88591">6</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT11" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">406</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 360</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">399</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 362</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">7</prop>
     <prop name="en_US.iso88591">7</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT12" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">407</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 390</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">400</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 392</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">8</prop>
     <prop name="en_US.iso88591">8</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT13" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">408</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">810 154</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">401</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Link the axis of this curve to the axis of another curve (elect curve to link to)</prop>
     <prop name="en_US.iso88591">Link the axis of this curve to the axis of another curve (elect curve to link to)</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">812 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Link</prop>
     <prop name="en_US.iso88591">Link</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="linkCurveCombo1" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">410</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 180</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">403</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 180</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 1;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo2" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">414</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 210</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">407</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 210</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 2;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo3" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">415</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 240</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">408</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 240</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 3;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo4" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">416</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 270</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">409</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 270</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 4;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo5" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">417</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 300</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">410</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 300</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 5;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo6" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">418</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 330</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">411</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 330</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 6;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo7" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">419</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 360</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">412</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 360</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 7;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveCombo8" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">420</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 390</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">413</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 390</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[int curveNum = 8;

main() {
  enableManualScaleLimits(curveNum, this.selectedPos, this.selectedText);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="linkCurveComboBox" shapeType="COMBO_BOX">
   <properties>
    <prop name="serialId">421</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">814 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">414</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Link all Y axis to the selected curve</prop>
     <prop name="en_US.iso88591">Link all Y axis to the selected curve</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">814 440</prop>
    <prop name="Size">36 24</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">-</prop>
       <prop name="en_US.iso88591">-</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">1</prop>
       <prop name="en_US.iso88591">1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">2</prop>
       <prop name="en_US.iso88591">2</prop>
      </prop>
      <prop name="Select">True</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">3</prop>
       <prop name="en_US.iso88591">3</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">4</prop>
       <prop name="en_US.iso88591">4</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">5</prop>
       <prop name="en_US.iso88591">5</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">6</prop>
       <prop name="en_US.iso88591">6</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">7</prop>
       <prop name="en_US.iso88591">7</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">8</prop>
       <prop name="en_US.iso88591">8</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
    <prop name="Editable">False</prop>
   </properties>
   <events>
    <script name="Changed" isEscaped="1"><![CDATA[main() {
  int i;
  
  switch(this.selectedPos) {
    case 10: //use this if you want to add option &quot;individual&quot;
//       for(i=1; i&lt;=8; i++)
//         setValue(&quot;linkCurveCombo&quot;+i,&quot;enabled&quot;,true);
      break;        
    default: 
          for(i=1; i&lt;=8; i++) {
        setValue(&quot;linkCurveCombo&quot;+i,&quot;selectedPos&quot;,this.selectedPos);
          }
      break;
  }
}
]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main() {
  this.text = &quot;&quot;;
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmFont" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">428</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">429 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">420</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">429 103</prop>
    <prop name="Size">61 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Font...</prop>
     <prop name="en_US.iso88591">Font...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  string sFont = this.toolTipText;
  if(sFont==&quot;&quot;) sFont = fwTrending_DEFAULT_FONT;
  fontSelector(sFont);
  this.toolTipText = sFont;
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLine" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">431</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">224 440</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">422</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">224 440</prop>
    <prop name="Size">61 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Line...</prop>
     <prop name="en_US.iso88591">Line...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  string sLine = this.toolTipText;
  lineSelector(sLine);
  showLineSample(sLine);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="lineSample" shapeType="LINE">
   <properties>
    <prop name="serialId">432</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">294 450</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">423</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="Start">294 450</prop>
    <prop name="End">356 450</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="cmXaxiiFormat" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">434</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">360 103</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">424</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">360 103</prop>
    <prop name="Size">61 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Format...</prop>
     <prop name="en_US.iso88591">Format...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
    dyn_string dsFormat, ds;
    dyn_float df;
    int i;
    
  ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfTimeScaleFormat.pnl&quot;,&quot;Time scale format&quot;,
        makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
    
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1] + &quot; | &quot; +ds[2];
    }
}
]]></script>
    <script name="Initialize" isEscaped="1"><![CDATA[main() {
  this.toolTipText = &quot;%d/%m | %H:%M&quot;;
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">436</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 540</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">425</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 180</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT14" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">437</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">374 514</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">426</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Value format</prop>
     <prop name="en_US.iso88591">Value format</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">373 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Format</prop>
     <prop name="en_US.iso88591">Format</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="FRAME1" shapeType="FRAME">
   <properties>
    <prop name="serialId">438</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">380 420</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">427</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.472868217054264 0 0 1 -329.6899224806201 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Legend</prop>
     <prop name="en_US.iso88591">Legend</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">380 140</prop>
    <prop name="Size">130 280</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="cmLegendFormat2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">447</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 570</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">436</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 210</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">448</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 600</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">437</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 240</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
    dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">449</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 630</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">438</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 270</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
    dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">450</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 660</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">439</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 300</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
    dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">451</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 690</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">440</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 330</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
    dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">452</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 720</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">441</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 360</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
   dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormat8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">453</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 750</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">442</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 390</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmLegendFormatAll" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">454</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">635 800</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">443</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">390 440</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
    
    for(i=1 ; i&lt;=8 ; i++) {
      setValue(&quot;cmLegendFormat&quot;+i, &quot;toolTipText&quot;, this.toolTipText);
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">456</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 540</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">444</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 180</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT15" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">457</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">846 514</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">445</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Value format</prop>
     <prop name="en_US.iso88591">Value format</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">845 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Format</prop>
     <prop name="en_US.iso88591">Format</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="cmScaleFormat2" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">458</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 570</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">446</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 210</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
   dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat3" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">459</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 600</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">447</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 240</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
   dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat4" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">460</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 630</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">448</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 270</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat5" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">461</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 660</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">449</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 300</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat6" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">462</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 690</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">450</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 330</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat7" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">463</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 720</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">451</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 360</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormat8" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">464</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 750</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">452</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 390</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="cmScaleFormatAll" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">465</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1105 800</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">453</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">860 440</prop>
    <prop name="Size">21 21</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">...</prop>
     <prop name="en_US.iso88591">...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  dyn_string dsFormat, ds;
  dyn_float df;
  int i;
    
    ChildPanelOnModalReturn(&quot;fwTrending/fwTrendingPlotConfLegendFormat.pnl&quot;,&quot;Legend format&quot;,
      makeDynString(&quot;$format:&quot;+this.toolTipText),0,0, df, ds);
  
    if(ds[1] != &quot;Cancel&quot;) {
    strreplace(ds[3], &quot; | &quot;, &quot;|&quot;);
    dsFormat = strsplit(ds[3], &quot;|&quot;);
        this.toolTipText = ds[1];
    }
    
    for(i=1 ; i&lt;=8 ; i++) {
      setValue(&quot;cmScaleFormat&quot;+i, &quot;toolTipText&quot;, this.toolTipText);
    }
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits1" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">468</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 591</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">455</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 181</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT16" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">469</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">563 514</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">456</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the alarm limits of the plotted value. NOTE: not for DISCRETE alarms</prop>
     <prop name="en_US.iso88591">Show/hide the alarm limits of the plotted value. NOTE: not for DISCRETE alarms</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">562 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Limits</prop>
     <prop name="en_US.iso88591">Limits</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits2" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">470</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 621</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">457</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 211</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits3" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">471</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 651</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">458</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 241</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits4" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">472</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 681</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">459</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 271</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits5" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">473</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 711</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">460</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 301</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits6" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">474</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 741</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">461</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 331</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits7" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">475</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 771</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">462</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 361</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimits8" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">476</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 801</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">463</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 391</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, int state) {
  //setAutoIfLimitsOn(this.name);
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ckShowAlarmLimitsAll" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">477</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">1961 850</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">464</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show/hide the analog alarm limits of the plotted value.</prop>
     <prop name="en_US.iso88591">Show/hide the analog alarm limits of the plotted value.</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Courier New,-1,12,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Courier New,-1,12,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">571 440</prop>
    <prop name="Size">16 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">CheckButton1</prop>
       <prop name="en_US.iso88591">CheckButton1</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(int button, bool state) {
  int i;
  shape checkButton;
    bool enabled;

  for(i=1; i&lt;=8; i++) {
    checkButton = getShape(&quot;ckShowAlarmLimits&quot; + i);
      getValue(&quot;ckShowAlarmLimits&quot;+i,&quot;enabled&quot;,enabled);
      
      if(enabled) {
      checkButton.state(0, state);
      autoRangeCheckButtonClick(i, state);
      }
  }
}



]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="FRAME2" shapeType="FRAME">
   <properties>
    <prop name="serialId">478</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">380 420</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">465</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.472868217054263 0 0 1 -529.68992248062 0</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">DP Element</prop>
     <prop name="en_US.iso88591">DP Element</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">380 140</prop>
    <prop name="Size">130 280</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PRIMITIVE_TEXT17" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">479</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">172 154</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">466</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">174 156</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Select</prop>
     <prop name="en_US.iso88591">Select</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="PUSH_BUTTON1" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">481</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 560</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">467</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 560</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Save as...</prop>
     <prop name="en_US.iso88591">Save as...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  bool isFromDp, newDp = FALSE;
  string proposedName, sDpName;
  dyn_float df;
  dyn_string ds, exceptionInfo;
  dyn_dyn_string plotData;

  CheckInput(exceptionInfo);
  if(dynlen(exceptionInfo)&gt;0) {
    fwExceptionHandling_display(exceptionInfo);
    return;
  }

  sDpName = TextFieldName.text;
  proposedName = dpGetAlias(sDpName + &quot;.&quot;);
    if(proposedName == &quot;&quot;) {
    proposedName = dpSubStr(sDpName, DPSUB_DP);
    }
    
  ChildPanelOnCentralReturn(&quot;fwTrending/fwTrendingSaveAsSelector.pnl&quot;, &quot;Save plot settings as...&quot;,
              makeDynString(&quot;$sDpType:&quot; + fwTrending_PLOT, &quot;$sProposedName:&quot; + proposedName), 
                      df, ds);

  if(ds[1] == &quot;ok&quot;) {
    ReadInput(plotData, exceptionInfo);
    
    if(!dpExists(ds[2])) {
      fwTrending_createPlot(ds[2], exceptionInfo);
      newDp = TRUE;
    }

    fwTrending_setPlot(ds[2], plotData, exceptionInfo);

    isFromDp = !((TextFieldName.enabled) || (TextFieldName.text == &quot;&quot;));

    if(isFunctionDefined(&quot;unTrendTree_savePlotAs&quot;)) {
      unTrendTree_savePlotAs(ds[2], newDp, isFromDp, exceptionInfo);
    }
  }

  if(dynlen(exceptionInfo)&gt;0) {
    fwExceptionHandling_display(exceptionInfo);
    return;
  }
}

]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="ButtonApply" shapeType="PUSH_BUTTON">
   <properties>
    <prop name="serialId">359</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">770 560</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">370</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">770 560</prop>
    <prop name="Size">91 31</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Apply</prop>
     <prop name="en_US.iso88591">Apply</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main() {
  ApplyCancelOKButtonClick(&quot;Apply&quot;);
}
]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="TextFieldName" shapeType="TEXT_FIELD">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">122 44</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">171</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">122 44</prop>
    <prop name="Size">341 24</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="SaveUserFolder" shapeType="CHECK_BOX">
   <properties>
    <prop name="serialId">483</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">564 111</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">468</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Show the Control menu bar</prop>
     <prop name="en_US.iso88591">Show the Control menu bar</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,40,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,40,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">861 104</prop>
    <prop name="Size">95 21</prop>
    <prop name="Listitems">
     <prop name="Item">
      <prop name="Text">
       <prop name="en_US.utf8">User's folder</prop>
       <prop name="en_US.iso88591">User's folder</prop>
      </prop>
      <prop name="Select">False</prop>
     </prop>
    </prop>
   </properties>
  </shape>
 </shapes>
 <groups>
  <group Name="archiveButtonGroup" parentSerial="-1" serial="1">
   <properties>
    <prop name="shapeSerial">147</prop>
    <prop name="shapeSerial">41</prop>
    <prop name="shapeSerial">168</prop>
    <prop name="shapeSerial">167</prop>
    <prop name="shapeSerial">175</prop>
    <prop name="shapeSerial">174</prop>
    <prop name="shapeSerial">181</prop>
    <prop name="shapeSerial">182</prop>
    <prop name="shapeSerial">189</prop>
    <prop name="shapeSerial">188</prop>
    <prop name="shapeSerial">195</prop>
    <prop name="shapeSerial">196</prop>
    <prop name="shapeSerial">203</prop>
    <prop name="shapeSerial">202</prop>
    <prop name="shapeSerial">209</prop>
    <prop name="shapeSerial">210</prop>
    <prop name="layoutAlignment">AlignNone</prop>
   </properties>
  </group>
 </groups>
</panel>
