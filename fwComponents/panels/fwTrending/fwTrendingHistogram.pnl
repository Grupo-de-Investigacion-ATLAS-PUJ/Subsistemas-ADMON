<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">(NoName)</prop>
   <prop name="en_US.iso88591">(NoName)</prop>
  </prop>
  <prop name="Size">516 200</prop>
  <prop name="BackColor">FwTrendingViewBackground</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwTrending/fwTrending.ctl&quot;
#uses &quot;fwTrending/fwTrendingTree.ctl&quot;
dyn_int CONNECTED_SYSTEM_IDS;
dyn_string DPES_FROM_CONFIG_DP;
bool LOADED_PLOT_CONFIG = FALSE;
bool g_bAccessGranted = TRUE;
bool g_bDpAvailable;
time LAST_CONFIG_UPDATE;

checkHasSaveRights(string dp, string user)
{
  bool running, isAllowed=TRUE;
  string ref;
  dyn_string plots, plotData, plotConfig, exceptionInfo;

  if($sRefName != &quot;&quot;)
    ref = strrtrim($sRefName, &quot;.&quot;) + &quot;.&quot;;
  else
    ref = &quot;&quot;;

  fwTrending_getRuntimePlotDataWithStrings(ref, running, plots, plotData, exceptionInfo, TRUE);
//DebugN(&quot;Rights: &quot; + plotData[fwTrending_PLOT_OBJECT_ACCESS_CONTROL_SAVE]);
  if(plotData[fwTrending_PLOT_OBJECT_ACCESS_CONTROL_SAVE]!=&quot;&quot;)
    fwAccessControl_isGranted(plotData[fwTrending_PLOT_OBJECT_ACCESS_CONTROL_SAVE], isAllowed, exceptionInfo);

  g_bAccessGranted = isAllowed;
  setValue(ref+&quot;saveSettings&quot;, &quot;enabled&quot;, (g_bDpAvailable &amp;&amp; g_bAccessGranted));
  setValue(ref+&quot;OtherCascadeButton&quot;, &quot;enableItem&quot;, &quot;8&quot;, (g_bDpAvailable &amp;&amp; g_bAccessGranted));
}

trendingDisplay_update2(string dp1, dyn_int val1, string dp2, dyn_int val2)
{
	bool run, isConnected, changeButtons = FALSE;
	int i;
	string isRunning, systemName, ref=$sRefName, tooltip;
	dyn_int systemIds, connectedSystemIds;
	dyn_string plotShapes, exceptionInfo;
	dyn_dyn_string plotData;

	if(ref!=&quot;&quot;)
		ref+=&quot;.&quot;;

	_fwTrending_getConnectedSystemIds(connectedSystemIds, exceptionInfo);
	
	if(connectedSystemIds != CONNECTED_SYSTEM_IDS)
	{
		if($sDpName != &quot;&quot;)
		{
			_fwTrending_isSystemForDpeConnected($sDpName, isConnected, exceptionInfo);
			g_bDpAvailable = isConnected;

			if(isConnected)
				tooltip = &quot;Save configuration to plot data point&quot;;
			else
				tooltip = &quot;The plot data point is on a remote system which is unavailable&quot;;

			if(g_bAccessGranted)
				changeButtons = TRUE;
		}
		else
			isConnected = FALSE;
		
		if(!LOADED_PLOT_CONFIG)
		{
			if(isConnected)
			{
				loadAndConnectToDp($sDpName, $sRefName);
				dpNotExist.visible = FALSE;
				dpNotAvailable.visible = FALSE;
			}
		}
		else
		{
			fwTrending_getRuntimePlotDataWithExtendedObject($sRefName, isRunning, plotShapes, plotData, exceptionInfo);
			for(i=1; i&lt;=dynlen(plotData[fwTrending_PLOT_OBJECT_DPES]); i++)
			{
				systemName = dpSubStr(plotData[fwTrending_PLOT_OBJECT_DPES][i], DPSUB_SYS);
				if(systemName != &quot;&quot;)
					dynAppend(systemIds, getSystemId(systemName));
					
				dynUnique(systemIds);
			}
		
//DebugN(&quot;Previous: &quot; + dynIntersect(systemIds, CONNECTED_SYSTEM_IDS) + &quot; Current: &quot; + dynIntersect(systemIds, connectedSystemIds));

			if((dynIntersect(systemIds, CONNECTED_SYSTEM_IDS)) != (dynIntersect(systemIds, connectedSystemIds)))
			{
//DebugN(&quot;So do refresh (&quot; + $sRefName + &quot;)&quot;);
				refreshTrend(FALSE);
			}
		}
	}
	
	if(changeButtons)
	{
		setValue(ref+&quot;saveSettings&quot;, &quot;enabled&quot;, isConnected);
		setValue(ref+&quot;saveSettings&quot;, &quot;toolTipText&quot;, tooltip);
	}
	CONNECTED_SYSTEM_IDS = connectedSystemIds;
}


trendingDisplay_update(string dp1, dyn_string val1)
{
	time timeStamp;
	string isRunning, shouldRefresh;
	dyn_string plotShapes, exceptionInfo;
	dyn_dyn_string returnValue, plotData;
		
	dp1 = dpSubStr(dp1, DPSUB_SYS_DP_EL);
  if( (dp1 != &quot;&quot;) &amp;&amp; (dpExists(dp1 + &quot;:_online.._stime&quot;)) )
  {
  	dpGet(dp1 + &quot;:_online.._stime&quot;, timeStamp);
  }
  else
  {
    DebugTN(&quot;Error in &quot; + myPanelName() + &quot; -&gt; trendingDisplay_update(): DPE doesn't exist, &quot; + dp1 + &quot;:_online.._stime&quot;);
    return;
  }

	if(timeStamp == LAST_CONFIG_UPDATE)
		return;
	
	shouldRefresh = refreshTrend.text;
	if(shouldRefresh != &quot;TRUE&quot;)
		return;

	fwTrending_getRuntimePlotDataWithExtendedObject($sRefName, isRunning, plotShapes, plotData, exceptionInfo);
	fwTrending_getPlotExtended($sDpName, $sRefName, returnValue, exceptionInfo, TRUE);

	if(dynlen(returnValue) == fwTrending_getPlotData_LEN_RETURN_DATA)
		fwTrending_setRuntimePlotDataWithExtendedObject($sRefName, isRunning, returnValue, exceptionInfo);

	if(DPES_FROM_CONFIG_DP == returnValue[fwTrending_PLOT_OBJECT_DPES])
		refreshTrend(FALSE);
	else
		refreshTrend(TRUE);

	DPES_FROM_CONFIG_DP = returnValue[fwTrending_PLOT_OBJECT_DPES];
	LAST_CONFIG_UPDATE = timeStamp;
	dpNotExist.visible = FALSE;
	dpNotAvailable.visible = FALSE;
}

readDollarValues(dyn_string &amp;plotData, dyn_string &amp;exceptionInfo)
{
	plotData[fwTrending_PLOT_OBJECT_TITLE] = $ZoomWindowTitle;
	plotData[fwTrending_PLOT_OBJECT_DPES] = $dsCurveDPE;
	plotData[fwTrending_PLOT_OBJECT_LEGENDS] = $dsCurveLegend;
	plotData[fwTrending_PLOT_OBJECT_COLORS] = $dsCurveColor;
	plotData[fwTrending_PLOT_OBJECT_BACK_COLOR] = $sBackColor;
	plotData[fwTrending_PLOT_OBJECT_FORE_COLOR] = $sForeColor;
	plotData[fwTrending_PLOT_OBJECT_GRID] = $bShowGrid;
	plotData[fwTrending_PLOT_OBJECT_LEGEND_ON] = $bShowLegend;
	plotData[fwTrending_PLOT_OBJECT_EXT_MIN_MAX_RANGE] = $dsCurveRange;
	plotData[fwTrending_PLOT_OBJECT_EXT_MIN_MAX_RANGE_X] = $dsCurveRangeX;
	
	plotData[fwTrending_PLOT_OBJECT_MODEL] = fwTrending_HISTOGRAM_PLOT_MODEL;
}

loadAndConnectToDp(string dpName, string ref)
{
	dyn_string exceptionInfo;
	dyn_dyn_string returnValue;

	fwTrending_getPlotExtended(dpName, ref, returnValue, exceptionInfo, TRUE);
	LOADED_PLOT_CONFIG = TRUE;

	if(dynlen(returnValue) == fwTrending_getPlotData_LEN_RETURN_DATA)
		fwTrending_setRuntimePlotDataWithExtendedObject(ref, TRUE, returnValue, exceptionInfo);

	dpConnect(&quot;trendingDisplay_update&quot;, TRUE, dpName + fwTrending_PLOT_DPES);
}

refreshTrend()
{
	drawTrend($sRefName);
}

drawTrend(string ref)
{
	bool isOk, trendRunning, isLog;
	int i, length;
	string parameterString;
	dyn_float df;
	dyn_string plotShapes, exceptionInfo, parameters, ds;
	dyn_dyn_string plotData;
	shape activeTrendShape, parameterStore;

// here get all data and initialize the trends and the control trend buttons.
	fwTrending_getRuntimePlotDataWithExtendedObject(ref, trendRunning, plotShapes, plotData, exceptionInfo);
//DebugN(plotData);

	if(ref == &quot;&quot;)
		parameterStore = getShape(&quot;parameterValues&quot;);
	else
		parameterStore = getShape(ref + &quot;trend.parameterValues&quot;);

	if(isDollarDefined(&quot;$templateParameters&quot;))
		parameterStore.text = $templateParameters;
	else
		parameterStore.text = &quot;&quot;;
		
	parameterString = parameterStore.text;
	fwTrending_checkAndGetAllTemplateParameters(ref, plotData, fwTrending_PLOT, parameterString, exceptionInfo, TRUE);
	parameterStore.text = parameterString;

	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_DPES], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_LEGENDS], exceptionInfo);    
	_fwTrending_evaluateTemplate(parameterString, plotData[fwTrending_PLOT_OBJECT_EXT_TOOLTIPS], exceptionInfo);    

	fwTrending_convertUnicosDpeListToPvssDpeList(plotData[fwTrending_PLOT_OBJECT_DPES], plotData[fwTrending_PLOT_OBJECT_DPES], exceptionInfo);

	activeTrendShape = getShape(plotShapes[fwTrending_ACTIVE_TREND_NAME]);

	setValue(ref+&quot;trend.activeTrendText&quot;, &quot;text&quot;, plotShapes[fwTrending_LINEAR_TREND_NAME]);
	plotShapes[fwTrending_ACTIVE_TREND_NAME] = plotShapes[fwTrending_LINEAR_TREND_NAME];

// initialise the trends
	fwTrending_initHistogramWithObject($sRefName, plotShapes[fwTrending_ACTIVE_TREND_NAME], plotData, trendRunning, exceptionInfo);

	fwTrending_showStandardTrend(TRUE, plotShapes[fwTrending_LINEAR_TREND_NAME], plotShapes[fwTrending_LOG_TREND_NAME]);

// initialize the buttons of the fwTrending/fwTrendingTrendControl.pnl
	fwTrending_initControlHistogramButtons($sRefName, $sDpName, plotData, trendRunning, exceptionInfo);

// send exception to the message text if any
	if(isFunctionDefined(&quot;unMessageText_sendException&quot;))
		unMessageText_sendException(getSystemName(), myManNum(), &quot;trending&quot;, &quot;user&quot;, &quot;*&quot;, exceptionInfo);

// handle here any error 
	if(dynlen(exceptionInfo)&gt;0) {
		fwExceptionHandling_display(exceptionInfo);
	}
}




]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape layerId="0" Name="refName" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">330</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 60</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">35</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[dashed,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 62</prop>
    <prop name="Size">42 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">refName</prop>
     <prop name="en_US.iso88591">refName</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="trendRunningText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">332</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 40</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">37</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[dashed,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 42</prop>
    <prop name="Size">86 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">trendRunningText</prop>
     <prop name="en_US.iso88591">trendRunningText</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="activeTrendText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">335</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 120</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">40</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[dashed,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 122</prop>
    <prop name="Size">79 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">activeTrendText</prop>
     <prop name="en_US.iso88591">activeTrendText</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="dpNameText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">347</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">70 60</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">52</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[dashed,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">72 62</prop>
    <prop name="Size">61 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">dpNameText</prop>
     <prop name="en_US.iso88591">dpNameText</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="refreshTrend" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">360</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">220 80</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">63</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">222 82</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">TRUE</prop>
     <prop name="en_US.iso88591">TRUE</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="initScript" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">38</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 -7</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">6</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[dashed,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">12 22</prop>
    <prop name="Size">44 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">init script</prop>
     <prop name="en_US.iso88591">init script</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{	
	string ref, dpName;
	bool isConnected, bFromPVSSDB = FALSE;
	dyn_string exceptionInfo, dollarValues, errorMessage;	
	
/* all the data necessary for the initialisation or switch from standard to log trend and vice-versa is stored in Text graphical component*/

	dpNameText.text = $sDpName;
	refName.text = $sRefName;
	ref = $sRefName;
	dpName = $sDpName;

	if(dpName != &quot;&quot;)
	{
		if(dpExists(dpName))
		{
			if(dpTypeName(dpName) == fwTrending_PLOT)
			{
				bFromPVSSDB = TRUE;
				loadAndConnectToDp(dpName, ref);
			}

			_fwTrending_isSystemForDpeConnected(dpName, isConnected, exceptionInfo);
			g_bDpAvailable = isConnected;
			if(!isConnected)
			{
				errorMessage = dpNotAvailable.text;
				errorMessage[2] = &quot;\&quot;&quot; + dpName + &quot;\&quot;&quot;;
				dpNotAvailable.text = errorMessage;
				dpNotAvailable.visible = TRUE;
			}
		}
		else
		{
			bFromPVSSDB = TRUE;
			errorMessage = dpNotExist.text;
			errorMessage[2] = &quot;\&quot;&quot; + dpName + &quot;\&quot;&quot;;
			dpNotExist.text = errorMessage;
			dpNotExist.visible = TRUE;
		}
	}
	
	if(!bFromPVSSDB) { // the data are not read from PVSS database, use the $param instead
		readDollarValues(dollarValues, exceptionInfo);
		LOADED_PLOT_CONFIG = TRUE;
		fwTrending_setRuntimePlotDataWithStrings(ref, TRUE, dollarValues, exceptionInfo);

		drawTrend(ref);
	}
	
	_fwTrending_getConnectedSystemIds(CONNECTED_SYSTEM_IDS, exceptionInfo);
 
 //get the active system dp (if redundant)
 string sConnectionsDp = fwInstallationRedu_getLocalDp(&quot;_Connections&quot;);
 string sDistDp = fwInstallationRedu_getLocalDp(&quot;_DistManager&quot;);
	dpConnect(&quot;trendingDisplay_update2&quot;, FALSE, sConnectionsDp+&quot;.Dist.ManNums&quot;, sDistDp+&quot;.State.SystemNums&quot;);
}




]]></script>
   </events>
  </shape>
  <shape layerId="0" Name="dpNotAvailable" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">363</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">107 37</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{255,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">66</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">257 52</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">The plot configuration data point
{name}
is from a remote system which is not available.</prop>
     <prop name="en_US.iso88591">The plot configuration data point
{name}
is from a remote system which is not available.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">15</prop>
    <prop name="Bordered">True</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="dpNotExist" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">362</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">147 37</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{255,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">65</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">254 52</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">The plot configuration data point
{name}
does not exist.</prop>
     <prop name="en_US.iso88591">The plot configuration data point
{name}
does not exist.</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">15</prop>
    <prop name="Bordered">True</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="parameterValues" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">364</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">180 90</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">67</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">182 92</prop>
    <prop name="Size">157 17</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">parameterValues</prop>
     <prop name="en_US.iso88591">parameterValues</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="standardTrendText" shapeType="PRIMITIVE_TEXT">
   <properties>
    <prop name="serialId">368</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 90</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">70</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[dashed,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">22 92</prop>
    <prop name="Size">93 15</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,11,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">standardTrendText</prop>
     <prop name="en_US.iso88591">standardTrendText</prop>
    </prop>
    <prop name="Distance">0</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="standardTrend" shapeType="BAR_TREND">
   <properties>
    <prop name="serialId">365</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">-96 -21</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">FwTrendingTrendForeground</prop>
    <prop name="BackColor">FwTrendingFaceplateBackground</prop>
    <prop name="TabOrder">67</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">0 0</prop>
    <prop name="Size">517 199</prop>
   </properties>
  </shape>
  <shape layerId="0" Name="trendInfo" shapeType="SELECTION_LIST">
   <properties>
    <prop name="serialId">359</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">62</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 10</prop>
    <prop name="Size">21 21</prop>
    <prop name="Listitems"/>
    <prop name="SelectionMode">SingleSelection</prop>
    <prop name="alternatingRowColors">False</prop>
   </properties>
  </shape>
 </shapes>
</panel>
